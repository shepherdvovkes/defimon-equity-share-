{"id":"1f265e0fdea5b89ee65a4013305a7102","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/draft-IERC6093.sol)\npragma solidity >=0.8.4;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /// @inheritdoc IERC20\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /// @inheritdoc IERC20\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /// @inheritdoc IERC20\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Return the 512-bit addition of two uint256.\n     *\n     * The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low.\n     */\n    function add512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        assembly (\"memory-safe\") {\n            low := add(a, b)\n            high := lt(low, a)\n        }\n    }\n\n    /**\n     * @dev Return the 512-bit multiplication of two uint256.\n     *\n     * The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low.\n     */\n    function mul512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        // 512-bit multiply [high low] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n        // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n        // variables such that product = high * 2²⁵⁶ + low.\n        assembly (\"memory-safe\") {\n            let mm := mulmod(a, b, not(0))\n            low := mul(a, b)\n            high := sub(sub(mm, low), lt(mm, low))\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            success = c >= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a - b;\n            success = c <= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a * b;\n            assembly (\"memory-safe\") {\n                // Only true when the multiplication doesn't overflow\n                // (c / a == b) || (a == 0)\n                success := or(eq(div(c, a), b), iszero(a))\n            }\n            // equivalent to: success ? c : 0\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `DIV` opcode returns zero when the denominator is 0.\n                result := div(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `MOD` opcode returns zero when the denominator is 0.\n                result := mod(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingAdd(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryAdd(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Unsigned saturating subtraction, bounds to zero instead of overflowing.\n     */\n    function saturatingSub(uint256 a, uint256 b) internal pure returns (uint256) {\n        (, uint256 result) = trySub(a, b);\n        return result;\n    }\n\n    /**\n     * @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingMul(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryMul(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (high == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return low / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= high) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [high low].\n            uint256 remainder;\n            assembly (\"memory-safe\") {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                high := sub(high, gt(remainder, low))\n                low := sub(low, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly (\"memory-safe\") {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [high low] by twos.\n                low := div(low, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from high into low.\n            low |= high * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and high\n            // is no longer required.\n            result = low * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n            if (high >= 1 << n) {\n                Panic.panic(Panic.UNDER_OVERFLOW);\n            }\n            return (high << (256 - n)) | (low >> n);\n        }\n    }\n\n    /**\n     * @dev Calculates x * y >> n with full precision, following the selected rounding direction.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n, Rounding rounding) internal pure returns (uint256) {\n        return mulShr(x, y, n) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, 1 << n) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // If upper 8 bits of 16-bit half set, add 8 to result\n        r |= SafeCast.toUint((x >> r) > 0xff) << 3;\n        // If upper 4 bits of 8-bit half set, add 4 to result\n        r |= SafeCast.toUint((x >> r) > 0xf) << 2;\n\n        // Shifts value right by the current result and use it as an index into this lookup table:\n        //\n        // | x (4 bits) |  index  | table[index] = MSB position |\n        // |------------|---------|-----------------------------|\n        // |    0000    |    0    |        table[0] = 0         |\n        // |    0001    |    1    |        table[1] = 0         |\n        // |    0010    |    2    |        table[2] = 1         |\n        // |    0011    |    3    |        table[3] = 1         |\n        // |    0100    |    4    |        table[4] = 2         |\n        // |    0101    |    5    |        table[5] = 2         |\n        // |    0110    |    6    |        table[6] = 2         |\n        // |    0111    |    7    |        table[7] = 2         |\n        // |    1000    |    8    |        table[8] = 3         |\n        // |    1001    |    9    |        table[9] = 3         |\n        // |    1010    |   10    |        table[10] = 3        |\n        // |    1011    |   11    |        table[11] = 3        |\n        // |    1100    |   12    |        table[12] = 3        |\n        // |    1101    |   13    |        table[13] = 3        |\n        // |    1110    |   14    |        table[14] = 3        |\n        // |    1111    |   15    |        table[15] = 3        |\n        //\n        // The lookup table is represented as a 32-byte value with the MSB positions for 0-15 in the last 16 bytes.\n        assembly (\"memory-safe\") {\n            r := or(r, byte(shr(r, x), 0x0000010102020202030303030303030300000000000000000000000000000000))\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // Add 1 if upper 8 bits of 16-bit half set, and divide accumulated result by 8\n        return (r >> 3) | SafeCast.toUint((x >> r) > 0xff);\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"},"contracts/DEFIMONEquityToken.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/utils/math/Math.sol\";\n\n/**\n * @title DEFIMON Equity Token\n * @dev ERC-20 токен с механизмом вестинга для распределения долей между основателями\n * @author DEFIMON Team\n */\ncontract DEFIMONEquityToken is ERC20, Ownable, ReentrancyGuard {\n\n\n    // Структура участника\n    struct Participant {\n        string firstName;\n        string lastName;\n        address wallet;\n        uint256 totalAllocation;      // Общая доля в токенах\n        uint256 claimedAmount;        // Уже полученные токены\n        uint256 vestingStartTime;     // Время начала вестинга\n        uint256 cliffDuration;        // Длительность клиффа (в секундах)\n        uint256 vestingDuration;      // Общая длительность вестинга (в секундах)\n        bool isActive;                // Активен ли участник\n        bool isLeaver;                // Покинул ли проект\n    }\n\n    // Константы\n    uint256 public constant TOTAL_SUPPLY = 10_000_000 * 10**18; // 10M токенов с 18 десятичными знаками\n    uint256 public constant VESTING_PERIOD = 4 * 365 * 24 * 60 * 60; // 4 года в секундах\n    uint256 public constant CLIFF_PERIOD = 1 * 365 * 24 * 60 * 60;   // 1 год в секундах\n    uint256 public constant CLIFF_PERCENTAGE = 25; // 25% токенов размораживается после клиффа\n\n    // Переменные состояния\n    mapping(address => Participant) public participants;\n    address[] public participantAddresses;\n    uint256 public totalAllocatedTokens;\n    uint256 public projectValuation = 10_000_000; // $10M в долларах\n\n    // События\n    event ParticipantAdded(address indexed wallet, string firstName, string lastName, uint256 allocation);\n    event TokensClaimed(address indexed participant, uint256 amount);\n    event ParticipantStatusChanged(address indexed participant, bool isActive, bool isLeaver);\n    event VestingStarted(uint256 startTime);\n\n    // Модификаторы\n    modifier onlyParticipant() {\n        require(participants[msg.sender].wallet != address(0), \"Not a participant\");\n        require(participants[msg.sender].isActive, \"Participant is not active\");\n        require(!participants[msg.sender].isLeaver, \"Participant has left the project\");\n        _;\n    }\n\n    modifier onlyActiveParticipant(address participant) {\n        require(participants[participant].wallet != address(0), \"Not a participant\");\n        require(participants[participant].isActive, \"Participant is not active\");\n        _;\n    }\n\n    /**\n     * @dev Конструктор контракта\n     * @param _owner Адрес владельца контракта\n     */\n    constructor(address _owner) ERC20(\"DEFIMON Equity Token\", \"DFX\") Ownable(_owner) {\n        _mint(address(this), TOTAL_SUPPLY);\n    }\n\n    /**\n     * @dev Добавление участника в систему\n     * @param _firstName Имя участника\n     * @param _lastName Фамилия участника\n     * @param _wallet Адрес кошелька участника\n     * @param _allocationPercentage Процент доли (например, 40 для 40%)\n     */\n    function addParticipant(\n        string memory _firstName,\n        string memory _lastName,\n        address _wallet,\n        uint256 _allocationPercentage\n    ) external onlyOwner {\n        require(_wallet != address(0), \"Invalid wallet address\");\n        require(_allocationPercentage > 0 && _allocationPercentage <= 100, \"Invalid allocation percentage\");\n        require(participants[_wallet].wallet == address(0), \"Participant already exists\");\n\n        uint256 allocation = TOTAL_SUPPLY * _allocationPercentage / 100;\n        require(totalAllocatedTokens + allocation <= TOTAL_SUPPLY, \"Total allocation exceeds supply\");\n\n        participants[_wallet] = Participant({\n            firstName: _firstName,\n            lastName: _lastName,\n            wallet: _wallet,\n            totalAllocation: allocation,\n            claimedAmount: 0,\n            vestingStartTime: 0, // Будет установлено при старте вестинга\n            cliffDuration: CLIFF_PERIOD,\n            vestingDuration: VESTING_PERIOD,\n            isActive: true,\n            isLeaver: false\n        });\n\n        participantAddresses.push(_wallet);\n        totalAllocatedTokens = totalAllocatedTokens + allocation;\n\n        emit ParticipantAdded(_wallet, _firstName, _lastName, allocation);\n    }\n\n    /**\n     * @dev Запуск вестинга для всех участников\n     */\n    function startVesting() external onlyOwner {\n        require(participantAddresses.length > 0, \"No participants added\");\n        \n        uint256 startTime = block.timestamp;\n        \n        for (uint i = 0; i < participantAddresses.length; i++) {\n            address participantAddr = participantAddresses[i];\n            if (participants[participantAddr].isActive) {\n                participants[participantAddr].vestingStartTime = startTime;\n            }\n        }\n\n        emit VestingStarted(startTime);\n    }\n\n    /**\n     * @dev Получение размороженных токенов участником\n     */\n    function claimVestedTokens() external nonReentrant onlyParticipant {\n        uint256 claimableAmount = getVestedBalance(msg.sender);\n        require(claimableAmount > 0, \"No tokens available for claim\");\n\n        participants[msg.sender].claimedAmount = participants[msg.sender].claimedAmount + claimableAmount;\n        _transfer(address(this), msg.sender, claimableAmount);\n\n        emit TokensClaimed(msg.sender, claimableAmount);\n    }\n\n    /**\n     * @dev Получение баланса размороженных токенов для участника\n     * @param _participant Адрес участника\n     * @return Количество доступных для получения токенов\n     */\n    function getVestedBalance(address _participant) public view returns (uint256) {\n        Participant storage participant = participants[_participant];\n        \n        if (participant.wallet == address(0) || !participant.isActive || participant.isLeaver) {\n            return 0;\n        }\n\n        if (participant.vestingStartTime == 0) {\n            return 0; // Вестинг еще не начался\n        }\n\n        uint256 timeElapsed = block.timestamp - participant.vestingStartTime;\n        \n        // Если не прошел клифф, токены недоступны\n        if (timeElapsed < participant.cliffDuration) {\n            return 0;\n        }\n\n        // Вычисляем общее количество размороженных токенов\n        uint256 totalVested;\n        \n        if (timeElapsed >= participant.vestingDuration) {\n            // Вестинг завершен - все токены разморожены\n            totalVested = participant.totalAllocation;\n        } else {\n            // Вычисляем прогресс вестинга\n            uint256 vestingProgress = timeElapsed - participant.cliffDuration;\n            uint256 remainingVestingTime = participant.vestingDuration - participant.cliffDuration;\n            \n            // 25% после клиффа + пропорциональная часть оставшихся 75%\n            uint256 cliffTokens = participant.totalAllocation * CLIFF_PERCENTAGE / 100;\n            uint256 remainingTokens = participant.totalAllocation - cliffTokens;\n            uint256 progressiveTokens = remainingTokens * vestingProgress / remainingVestingTime;\n            \n            totalVested = cliffTokens + progressiveTokens;\n        }\n\n        // Возвращаем разницу между размороженными и уже полученными токенами\n        if (totalVested > participant.claimedAmount) {\n            return totalVested - participant.claimedAmount;\n        }\n        \n        return 0;\n    }\n\n    /**\n     * @dev Изменение статуса участника (только для владельца)\n     * @param _participant Адрес участника\n     * @param _isActive Активен ли участник\n     * @param _isLeaver Покинул ли проект\n     */\n    function setParticipantStatus(\n        address _participant,\n        bool _isActive,\n        bool _isLeaver\n    ) external onlyOwner onlyActiveParticipant(_participant) {\n        participants[_participant].isActive = _isActive;\n        participants[_participant].isLeaver = _isLeaver;\n\n        emit ParticipantStatusChanged(_participant, _isActive, _isLeaver);\n    }\n\n    /**\n     * @dev Получение информации об участнике\n     * @param _participant Адрес участника\n     * @return firstName Имя\n     * @return lastName Фамилия\n     * @return wallet Адрес кошелька\n     * @return totalAllocation Общая доля\n     * @return claimedAmount Полученные токены\n     * @return vestingStartTime Время начала вестинга\n     * @return isActive Активен ли\n     * @return isLeaver Покинул ли проект\n     */\n    function getParticipantInfo(address _participant) external view returns (\n        string memory firstName,\n        string memory lastName,\n        address wallet,\n        uint256 totalAllocation,\n        uint256 claimedAmount,\n        uint256 vestingStartTime,\n        bool isActive,\n        bool isLeaver\n    ) {\n        Participant storage participant = participants[_participant];\n        return (\n            participant.firstName,\n            participant.lastName,\n            participant.wallet,\n            participant.totalAllocation,\n            participant.claimedAmount,\n            participant.vestingStartTime,\n            participant.isActive,\n            participant.isLeaver\n        );\n    }\n\n    /**\n     * @dev Получение списка всех адресов участников\n     * @return Массив адресов участников\n     */\n    function getAllParticipantAddresses() external view returns (address[] memory) {\n        return participantAddresses;\n    }\n\n    /**\n     * @dev Получение общего количества участников\n     * @return Количество участников\n     */\n    function getParticipantCount() external view returns (uint256) {\n        return participantAddresses.length;\n    }\n\n    /**\n     * @dev Получение оставшихся нераспределенных токенов\n     * @return Количество нераспределенных токенов\n     */\n    function getRemainingTokens() external view returns (uint256) {\n        return TOTAL_SUPPLY - totalAllocatedTokens;\n    }\n\n    /**\n     * @dev Получение текущей оценки проекта\n     * @return Оценка в долларах\n     */\n    function getProjectValuation() external view returns (uint256) {\n        return projectValuation;\n    }\n\n    /**\n     * @dev Обновление оценки проекта (только для владельца)\n     * @param _newValuation Новая оценка в долларах\n     */\n    function updateProjectValuation(uint256 _newValuation) external onlyOwner {\n        require(_newValuation > 0, \"Valuation must be positive\");\n        projectValuation = _newValuation;\n    }\n\n    /**\n     * @dev Получение стоимости одного токена\n     * @return Стоимость токена в долларах (с 18 десятичными знаками)\n     */\n    function getTokenPrice() external view returns (uint256) {\n        return projectValuation * 10**18 / (TOTAL_SUPPLY / 10**18);\n    }\n\n    // Override функции ERC20 для предотвращения прямых переводов\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        require(false, \"Direct transfers not allowed. Use claimVestedTokens()\");\n        return false;\n    }\n\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\n        require(false, \"Direct transfers not allowed. Use claimVestedTokens()\");\n        return false;\n    }\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"errors":[{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/DEFIMONEquityToken.sol:293:23:\n    |\n293 |     function transfer(address to, uint256 amount) public virtual override returns (bool) {\n    |                       ^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":12409,"file":"contracts/DEFIMONEquityToken.sol","start":12399},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/DEFIMONEquityToken.sol:293:35:\n    |\n293 |     function transfer(address to, uint256 amount) public virtual override returns (bool) {\n    |                                   ^^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":12425,"file":"contracts/DEFIMONEquityToken.sol","start":12411},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/DEFIMONEquityToken.sol:298:27:\n    |\n298 |     function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\n    |                           ^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":12616,"file":"contracts/DEFIMONEquityToken.sol","start":12604},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/DEFIMONEquityToken.sol:298:41:\n    |\n298 |     function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\n    |                                         ^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":12628,"file":"contracts/DEFIMONEquityToken.sol","start":12618},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/DEFIMONEquityToken.sol:298:53:\n    |\n298 |     function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\n    |                                                     ^^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":12644,"file":"contracts/DEFIMONEquityToken.sol","start":12630},"type":"Warning"}],"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[933],"Ownable":[147]},"id":148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":934,"src":"128:45:0","symbolAliases":[{"foreign":{"id":2,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":933,"src":"136:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Context","nameLocations":["692:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":933,"src":"692:7:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"692:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"175:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":147,"linearizedBaseContracts":[147,933],"name":"Ownable","nameLocation":"681:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8,"mutability":"mutable","name":"_owner","nameLocation":"722:6:0","nodeType":"VariableDeclaration","scope":147,"src":"706:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"735:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":13,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:0","nodeType":"ErrorDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nameLocation":"866:7:0","nodeType":"VariableDeclaration","scope":13,"src":"858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:0"},"src":"825:50:0"},{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"881:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":18,"name":"OwnableInvalidOwner","nameLocation":"974:19:0","nodeType":"ErrorDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"owner","nameLocation":"1002:5:0","nodeType":"VariableDeclaration","scope":18,"src":"994:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:0"},"src":"968:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":24,"name":"OwnershipTransferred","nameLocation":"1021:20:0","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:0","nodeType":"VariableDeclaration","scope":24,"src":"1042:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:0","nodeType":"VariableDeclaration","scope":24,"src":"1073:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:0"},"src":"1015:84:0"},{"body":{"id":49,"nodeType":"Block","src":"1259:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":30,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1273:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":44,"nodeType":"IfStatement","src":"1269:95:0","trueBody":{"id":43,"nodeType":"Block","src":"1301:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":38,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:0","typeDescriptions":{}}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1322:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":42,"nodeType":"RevertStatement","src":"1315:38:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1392:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1373:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1373:32:0"}]},"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1105:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":50,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1237:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1259:0:0"},"scope":147,"src":"1225:187:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":57,"nodeType":"Block","src":"1521:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":53,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1531:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1531:13:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1554:1:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1418:77:0","text":" @dev Throws if called by any account other than the owner."},"id":58,"name":"onlyOwner","nameLocation":"1509:9:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1518:2:0"},"src":"1500:62:0","virtual":false,"visibility":"internal"},{"body":{"id":66,"nodeType":"Block","src":"1693:30:0","statements":[{"expression":{"id":64,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1710:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":63,"id":65,"nodeType":"Return","src":"1703:13:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1568:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":67,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1652:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"1684:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:0"},"scope":147,"src":"1638:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":83,"nodeType":"Block","src":"1841:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":73,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"1866:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":82,"nodeType":"IfStatement","src":"1851:101:0","trueBody":{"id":81,"nodeType":"Block","src":"1880:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":77,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"1928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1901:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":80,"nodeType":"RevertStatement","src":"1894:47:0"}]}}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"1729:62:0","text":" @dev Throws if the sender is not the owner."},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"1816:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"1841:0:0"},"scope":147,"src":"1796:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":97,"nodeType":"Block","src":"2347:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":92,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:0","typeDescriptions":{}}},"id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":90,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2357:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":96,"nodeType":"ExpressionStatement","src":"2357:30:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1964:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":98,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2337:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2337:9:0"},"nodeType":"ModifierInvocation","src":"2337:9:0"}],"name":"renounceOwnership","nameLocation":"2302:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"2319:2:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2347:0:0"},"scope":147,"src":"2293:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2613:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":106,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2627:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:0","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2623:91:0","trueBody":{"id":119,"nodeType":"Block","src":"2651:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":112,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2672:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":118,"nodeType":"RevertStatement","src":"2665:38:0"}]}},{"expression":{"arguments":[{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2742:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":121,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2723:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"ExpressionStatement","src":"2723:28:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"2400:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":126,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nameLocations":["2603:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2603:9:0"},"nodeType":"ModifierInvocation","src":"2603:9:0"}],"name":"transferOwnership","nameLocation":"2552:17:0","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2570:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"2613:0:0"},"scope":147,"src":"2543:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":145,"nodeType":"Block","src":"2975:124:0","statements":[{"assignments":[133],"declarations":[{"constant":false,"id":133,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:0","nodeType":"VariableDeclaration","scope":145,"src":"2985:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":135,"initialValue":{"id":134,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:0"},{"expression":{"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":136,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":137,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3029:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":139,"nodeType":"ExpressionStatement","src":"3020:17:0"},{"eventCall":{"arguments":[{"id":141,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3073:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":142,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3083:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":140,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3052:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"3047:45:0"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2764:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:0","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:0","nodeType":"VariableDeclaration","scope":146,"src":"2940:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:0"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"2975:0:0"},"scope":147,"src":"2912:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":148,"src":"663:2438:0","usedErrors":[13,18],"usedEvents":[24]}],"src":"102:3000:0"},"id":0},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[284],"IERC20Errors":[189],"IERC721Errors":[237]},"id":285,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":149,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"112:24:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":150,"nodeType":"StructuredDocumentation","src":"138:141:1","text":" @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."},"fullyImplemented":true,"id":189,"linearizedBaseContracts":[189],"name":"IERC20Errors","nameLocation":"290:12:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":151,"nodeType":"StructuredDocumentation","src":"309:309:1","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":159,"name":"ERC20InsufficientBalance","nameLocation":"629:24:1","nodeType":"ErrorDefinition","parameters":{"id":158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":153,"mutability":"mutable","name":"sender","nameLocation":"662:6:1","nodeType":"VariableDeclaration","scope":159,"src":"654:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":152,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":155,"mutability":"mutable","name":"balance","nameLocation":"678:7:1","nodeType":"VariableDeclaration","scope":159,"src":"670:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":154,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":157,"mutability":"mutable","name":"needed","nameLocation":"695:6:1","nodeType":"VariableDeclaration","scope":159,"src":"687:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":156,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"653:49:1"},"src":"623:80:1"},{"documentation":{"id":160,"nodeType":"StructuredDocumentation","src":"709:152:1","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":164,"name":"ERC20InvalidSender","nameLocation":"872:18:1","nodeType":"ErrorDefinition","parameters":{"id":163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":162,"mutability":"mutable","name":"sender","nameLocation":"899:6:1","nodeType":"VariableDeclaration","scope":164,"src":"891:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":161,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:16:1"},"src":"866:41:1"},{"documentation":{"id":165,"nodeType":"StructuredDocumentation","src":"913:159:1","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":169,"name":"ERC20InvalidReceiver","nameLocation":"1083:20:1","nodeType":"ErrorDefinition","parameters":{"id":168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":167,"mutability":"mutable","name":"receiver","nameLocation":"1112:8:1","nodeType":"VariableDeclaration","scope":169,"src":"1104:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":166,"name":"address","nodeType":"ElementaryTypeName","src":"1104:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1103:18:1"},"src":"1077:45:1"},{"documentation":{"id":170,"nodeType":"StructuredDocumentation","src":"1128:345:1","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":178,"name":"ERC20InsufficientAllowance","nameLocation":"1484:26:1","nodeType":"ErrorDefinition","parameters":{"id":177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":172,"mutability":"mutable","name":"spender","nameLocation":"1519:7:1","nodeType":"VariableDeclaration","scope":178,"src":"1511:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":171,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":174,"mutability":"mutable","name":"allowance","nameLocation":"1536:9:1","nodeType":"VariableDeclaration","scope":178,"src":"1528:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":173,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":176,"mutability":"mutable","name":"needed","nameLocation":"1555:6:1","nodeType":"VariableDeclaration","scope":178,"src":"1547:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":175,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1510:52:1"},"src":"1478:85:1"},{"documentation":{"id":179,"nodeType":"StructuredDocumentation","src":"1569:174:1","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":183,"name":"ERC20InvalidApprover","nameLocation":"1754:20:1","nodeType":"ErrorDefinition","parameters":{"id":182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":181,"mutability":"mutable","name":"approver","nameLocation":"1783:8:1","nodeType":"VariableDeclaration","scope":183,"src":"1775:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":180,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1774:18:1"},"src":"1748:45:1"},{"documentation":{"id":184,"nodeType":"StructuredDocumentation","src":"1799:195:1","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":188,"name":"ERC20InvalidSpender","nameLocation":"2005:19:1","nodeType":"ErrorDefinition","parameters":{"id":187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":186,"mutability":"mutable","name":"spender","nameLocation":"2033:7:1","nodeType":"VariableDeclaration","scope":188,"src":"2025:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":185,"name":"address","nodeType":"ElementaryTypeName","src":"2025:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2024:17:1"},"src":"1999:43:1"}],"scope":285,"src":"280:1764:1","usedErrors":[159,164,169,178,183,188],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":190,"nodeType":"StructuredDocumentation","src":"2046:143:1","text":" @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."},"fullyImplemented":true,"id":237,"linearizedBaseContracts":[237],"name":"IERC721Errors","nameLocation":"2200:13:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":191,"nodeType":"StructuredDocumentation","src":"2220:219:1","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":195,"name":"ERC721InvalidOwner","nameLocation":"2450:18:1","nodeType":"ErrorDefinition","parameters":{"id":194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":193,"mutability":"mutable","name":"owner","nameLocation":"2477:5:1","nodeType":"VariableDeclaration","scope":195,"src":"2469:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":192,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2468:15:1"},"src":"2444:40:1"},{"documentation":{"id":196,"nodeType":"StructuredDocumentation","src":"2490:132:1","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":200,"name":"ERC721NonexistentToken","nameLocation":"2633:22:1","nodeType":"ErrorDefinition","parameters":{"id":199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":198,"mutability":"mutable","name":"tokenId","nameLocation":"2664:7:1","nodeType":"VariableDeclaration","scope":200,"src":"2656:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":197,"name":"uint256","nodeType":"ElementaryTypeName","src":"2656:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2655:17:1"},"src":"2627:46:1"},{"documentation":{"id":201,"nodeType":"StructuredDocumentation","src":"2679:289:1","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":209,"name":"ERC721IncorrectOwner","nameLocation":"2979:20:1","nodeType":"ErrorDefinition","parameters":{"id":208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":203,"mutability":"mutable","name":"sender","nameLocation":"3008:6:1","nodeType":"VariableDeclaration","scope":209,"src":"3000:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":202,"name":"address","nodeType":"ElementaryTypeName","src":"3000:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":205,"mutability":"mutable","name":"tokenId","nameLocation":"3024:7:1","nodeType":"VariableDeclaration","scope":209,"src":"3016:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":204,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":207,"mutability":"mutable","name":"owner","nameLocation":"3041:5:1","nodeType":"VariableDeclaration","scope":209,"src":"3033:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":206,"name":"address","nodeType":"ElementaryTypeName","src":"3033:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2999:48:1"},"src":"2973:75:1"},{"documentation":{"id":210,"nodeType":"StructuredDocumentation","src":"3054:152:1","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":214,"name":"ERC721InvalidSender","nameLocation":"3217:19:1","nodeType":"ErrorDefinition","parameters":{"id":213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":212,"mutability":"mutable","name":"sender","nameLocation":"3245:6:1","nodeType":"VariableDeclaration","scope":214,"src":"3237:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":211,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3236:16:1"},"src":"3211:42:1"},{"documentation":{"id":215,"nodeType":"StructuredDocumentation","src":"3259:159:1","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":219,"name":"ERC721InvalidReceiver","nameLocation":"3429:21:1","nodeType":"ErrorDefinition","parameters":{"id":218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":217,"mutability":"mutable","name":"receiver","nameLocation":"3459:8:1","nodeType":"VariableDeclaration","scope":219,"src":"3451:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":216,"name":"address","nodeType":"ElementaryTypeName","src":"3451:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3450:18:1"},"src":"3423:46:1"},{"documentation":{"id":220,"nodeType":"StructuredDocumentation","src":"3475:247:1","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":226,"name":"ERC721InsufficientApproval","nameLocation":"3733:26:1","nodeType":"ErrorDefinition","parameters":{"id":225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":222,"mutability":"mutable","name":"operator","nameLocation":"3768:8:1","nodeType":"VariableDeclaration","scope":226,"src":"3760:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":221,"name":"address","nodeType":"ElementaryTypeName","src":"3760:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":224,"mutability":"mutable","name":"tokenId","nameLocation":"3786:7:1","nodeType":"VariableDeclaration","scope":226,"src":"3778:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":223,"name":"uint256","nodeType":"ElementaryTypeName","src":"3778:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3759:35:1"},"src":"3727:68:1"},{"documentation":{"id":227,"nodeType":"StructuredDocumentation","src":"3801:174:1","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":231,"name":"ERC721InvalidApprover","nameLocation":"3986:21:1","nodeType":"ErrorDefinition","parameters":{"id":230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":229,"mutability":"mutable","name":"approver","nameLocation":"4016:8:1","nodeType":"VariableDeclaration","scope":231,"src":"4008:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":228,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4007:18:1"},"src":"3980:46:1"},{"documentation":{"id":232,"nodeType":"StructuredDocumentation","src":"4032:197:1","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":236,"name":"ERC721InvalidOperator","nameLocation":"4240:21:1","nodeType":"ErrorDefinition","parameters":{"id":235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":234,"mutability":"mutable","name":"operator","nameLocation":"4270:8:1","nodeType":"VariableDeclaration","scope":236,"src":"4262:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":233,"name":"address","nodeType":"ElementaryTypeName","src":"4262:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4261:18:1"},"src":"4234:46:1"}],"scope":285,"src":"2190:2092:1","usedErrors":[195,200,209,214,219,226,231,236],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":238,"nodeType":"StructuredDocumentation","src":"4284:145:1","text":" @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."},"fullyImplemented":true,"id":284,"linearizedBaseContracts":[284],"name":"IERC1155Errors","nameLocation":"4440:14:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":239,"nodeType":"StructuredDocumentation","src":"4461:361:1","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":249,"name":"ERC1155InsufficientBalance","nameLocation":"4833:26:1","nodeType":"ErrorDefinition","parameters":{"id":248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":241,"mutability":"mutable","name":"sender","nameLocation":"4868:6:1","nodeType":"VariableDeclaration","scope":249,"src":"4860:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":240,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":243,"mutability":"mutable","name":"balance","nameLocation":"4884:7:1","nodeType":"VariableDeclaration","scope":249,"src":"4876:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":242,"name":"uint256","nodeType":"ElementaryTypeName","src":"4876:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":245,"mutability":"mutable","name":"needed","nameLocation":"4901:6:1","nodeType":"VariableDeclaration","scope":249,"src":"4893:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":244,"name":"uint256","nodeType":"ElementaryTypeName","src":"4893:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":247,"mutability":"mutable","name":"tokenId","nameLocation":"4917:7:1","nodeType":"VariableDeclaration","scope":249,"src":"4909:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":246,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4859:66:1"},"src":"4827:99:1"},{"documentation":{"id":250,"nodeType":"StructuredDocumentation","src":"4932:152:1","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":254,"name":"ERC1155InvalidSender","nameLocation":"5095:20:1","nodeType":"ErrorDefinition","parameters":{"id":253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":252,"mutability":"mutable","name":"sender","nameLocation":"5124:6:1","nodeType":"VariableDeclaration","scope":254,"src":"5116:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":251,"name":"address","nodeType":"ElementaryTypeName","src":"5116:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5115:16:1"},"src":"5089:43:1"},{"documentation":{"id":255,"nodeType":"StructuredDocumentation","src":"5138:159:1","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":259,"name":"ERC1155InvalidReceiver","nameLocation":"5308:22:1","nodeType":"ErrorDefinition","parameters":{"id":258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":257,"mutability":"mutable","name":"receiver","nameLocation":"5339:8:1","nodeType":"VariableDeclaration","scope":259,"src":"5331:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":256,"name":"address","nodeType":"ElementaryTypeName","src":"5331:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5330:18:1"},"src":"5302:47:1"},{"documentation":{"id":260,"nodeType":"StructuredDocumentation","src":"5355:256:1","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":266,"name":"ERC1155MissingApprovalForAll","nameLocation":"5622:28:1","nodeType":"ErrorDefinition","parameters":{"id":265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":262,"mutability":"mutable","name":"operator","nameLocation":"5659:8:1","nodeType":"VariableDeclaration","scope":266,"src":"5651:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":261,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":264,"mutability":"mutable","name":"owner","nameLocation":"5677:5:1","nodeType":"VariableDeclaration","scope":266,"src":"5669:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":263,"name":"address","nodeType":"ElementaryTypeName","src":"5669:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:33:1"},"src":"5616:68:1"},{"documentation":{"id":267,"nodeType":"StructuredDocumentation","src":"5690:174:1","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":271,"name":"ERC1155InvalidApprover","nameLocation":"5875:22:1","nodeType":"ErrorDefinition","parameters":{"id":270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":269,"mutability":"mutable","name":"approver","nameLocation":"5906:8:1","nodeType":"VariableDeclaration","scope":271,"src":"5898:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":268,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5897:18:1"},"src":"5869:47:1"},{"documentation":{"id":272,"nodeType":"StructuredDocumentation","src":"5922:197:1","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":276,"name":"ERC1155InvalidOperator","nameLocation":"6130:22:1","nodeType":"ErrorDefinition","parameters":{"id":275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":274,"mutability":"mutable","name":"operator","nameLocation":"6161:8:1","nodeType":"VariableDeclaration","scope":276,"src":"6153:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":273,"name":"address","nodeType":"ElementaryTypeName","src":"6153:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6152:18:1"},"src":"6124:47:1"},{"documentation":{"id":277,"nodeType":"StructuredDocumentation","src":"6177:280:1","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":283,"name":"ERC1155InvalidArrayLength","nameLocation":"6468:25:1","nodeType":"ErrorDefinition","parameters":{"id":282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":279,"mutability":"mutable","name":"idsLength","nameLocation":"6502:9:1","nodeType":"VariableDeclaration","scope":283,"src":"6494:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":278,"name":"uint256","nodeType":"ElementaryTypeName","src":"6494:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":281,"mutability":"mutable","name":"valuesLength","nameLocation":"6521:12:1","nodeType":"VariableDeclaration","scope":283,"src":"6513:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":280,"name":"uint256","nodeType":"ElementaryTypeName","src":"6513:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6493:41:1"},"src":"6462:73:1"}],"scope":285,"src":"4430:2107:1","usedErrors":[249,254,259,266,271,276,283],"usedEvents":[]}],"src":"112:6426:1"},"id":1},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[933],"ERC20":[799],"IERC20":[877],"IERC20Errors":[189],"IERC20Metadata":[903]},"id":800,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":286,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:2"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":288,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":800,"sourceUnit":878,"src":"131:36:2","symbolAliases":[{"foreign":{"id":287,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":877,"src":"139:6:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":290,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":800,"sourceUnit":904,"src":"168:63:2","symbolAliases":[{"foreign":{"id":289,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":903,"src":"176:14:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":292,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":800,"sourceUnit":934,"src":"232:48:2","symbolAliases":[{"foreign":{"id":291,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":933,"src":"240:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":294,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":800,"sourceUnit":285,"src":"281:65:2","symbolAliases":[{"foreign":{"id":293,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"289:12:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":296,"name":"Context","nameLocations":["1133:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":933,"src":"1133:7:2"},"id":297,"nodeType":"InheritanceSpecifier","src":"1133:7:2"},{"baseName":{"id":298,"name":"IERC20","nameLocations":["1142:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":877,"src":"1142:6:2"},"id":299,"nodeType":"InheritanceSpecifier","src":"1142:6:2"},{"baseName":{"id":300,"name":"IERC20Metadata","nameLocations":["1150:14:2"],"nodeType":"IdentifierPath","referencedDeclaration":903,"src":"1150:14:2"},"id":301,"nodeType":"InheritanceSpecifier","src":"1150:14:2"},{"baseName":{"id":302,"name":"IERC20Errors","nameLocations":["1166:12:2"],"nodeType":"IdentifierPath","referencedDeclaration":189,"src":"1166:12:2"},"id":303,"nodeType":"InheritanceSpecifier","src":"1166:12:2"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":295,"nodeType":"StructuredDocumentation","src":"348:757:2","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."},"fullyImplemented":true,"id":799,"linearizedBaseContracts":[799,189,903,877,933],"name":"ERC20","nameLocation":"1124:5:2","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":307,"mutability":"mutable","name":"_balances","nameLocation":"1229:9:2","nodeType":"VariableDeclaration","scope":799,"src":"1185:53:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":306,"keyName":"account","keyNameLocation":"1201:7:2","keyType":{"id":304,"name":"address","nodeType":"ElementaryTypeName","src":"1193:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1185:35:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":305,"name":"uint256","nodeType":"ElementaryTypeName","src":"1212:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":313,"mutability":"mutable","name":"_allowances","nameLocation":"1317:11:2","nodeType":"VariableDeclaration","scope":799,"src":"1245:83:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":312,"keyName":"account","keyNameLocation":"1261:7:2","keyType":{"id":308,"name":"address","nodeType":"ElementaryTypeName","src":"1253:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1245:63:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":311,"keyName":"spender","keyNameLocation":"1288:7:2","keyType":{"id":309,"name":"address","nodeType":"ElementaryTypeName","src":"1280:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1272:35:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":310,"name":"uint256","nodeType":"ElementaryTypeName","src":"1299:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":315,"mutability":"mutable","name":"_totalSupply","nameLocation":"1351:12:2","nodeType":"VariableDeclaration","scope":799,"src":"1335:28:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":314,"name":"uint256","nodeType":"ElementaryTypeName","src":"1335:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":317,"mutability":"mutable","name":"_name","nameLocation":"1385:5:2","nodeType":"VariableDeclaration","scope":799,"src":"1370:20:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":316,"name":"string","nodeType":"ElementaryTypeName","src":"1370:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":319,"mutability":"mutable","name":"_symbol","nameLocation":"1411:7:2","nodeType":"VariableDeclaration","scope":799,"src":"1396:22:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":318,"name":"string","nodeType":"ElementaryTypeName","src":"1396:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":335,"nodeType":"Block","src":"1638:57:2","statements":[{"expression":{"id":329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":327,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"1648:5:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":328,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":322,"src":"1656:5:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1648:13:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":330,"nodeType":"ExpressionStatement","src":"1648:13:2"},{"expression":{"id":333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":331,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":319,"src":"1671:7:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":332,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":324,"src":"1681:7:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1671:17:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":334,"nodeType":"ExpressionStatement","src":"1671:17:2"}]},"documentation":{"id":320,"nodeType":"StructuredDocumentation","src":"1425:152:2","text":" @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."},"id":336,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":322,"mutability":"mutable","name":"name_","nameLocation":"1608:5:2","nodeType":"VariableDeclaration","scope":336,"src":"1594:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":321,"name":"string","nodeType":"ElementaryTypeName","src":"1594:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":324,"mutability":"mutable","name":"symbol_","nameLocation":"1629:7:2","nodeType":"VariableDeclaration","scope":336,"src":"1615:21:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":323,"name":"string","nodeType":"ElementaryTypeName","src":"1615:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1593:44:2"},"returnParameters":{"id":326,"nodeType":"ParameterList","parameters":[],"src":"1638:0:2"},"scope":799,"src":"1582:113:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[890],"body":{"id":344,"nodeType":"Block","src":"1820:29:2","statements":[{"expression":{"id":342,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"1837:5:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":341,"id":343,"nodeType":"Return","src":"1830:12:2"}]},"documentation":{"id":337,"nodeType":"StructuredDocumentation","src":"1701:54:2","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":345,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"1769:4:2","nodeType":"FunctionDefinition","parameters":{"id":338,"nodeType":"ParameterList","parameters":[],"src":"1773:2:2"},"returnParameters":{"id":341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":340,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":345,"src":"1805:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":339,"name":"string","nodeType":"ElementaryTypeName","src":"1805:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1804:15:2"},"scope":799,"src":"1760:89:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[896],"body":{"id":353,"nodeType":"Block","src":"2024:31:2","statements":[{"expression":{"id":351,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":319,"src":"2041:7:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":350,"id":352,"nodeType":"Return","src":"2034:14:2"}]},"documentation":{"id":346,"nodeType":"StructuredDocumentation","src":"1855:102:2","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":354,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"1971:6:2","nodeType":"FunctionDefinition","parameters":{"id":347,"nodeType":"ParameterList","parameters":[],"src":"1977:2:2"},"returnParameters":{"id":350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":349,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":354,"src":"2009:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":348,"name":"string","nodeType":"ElementaryTypeName","src":"2009:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2008:15:2"},"scope":799,"src":"1962:93:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[902],"body":{"id":362,"nodeType":"Block","src":"2744:26:2","statements":[{"expression":{"hexValue":"3138","id":360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2761:2:2","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":359,"id":361,"nodeType":"Return","src":"2754:9:2"}]},"documentation":{"id":355,"nodeType":"StructuredDocumentation","src":"2061:622:2","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":363,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"2697:8:2","nodeType":"FunctionDefinition","parameters":{"id":356,"nodeType":"ParameterList","parameters":[],"src":"2705:2:2"},"returnParameters":{"id":359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":358,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":363,"src":"2737:5:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":357,"name":"uint8","nodeType":"ElementaryTypeName","src":"2737:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2736:7:2"},"scope":799,"src":"2688:82:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[826],"body":{"id":371,"nodeType":"Block","src":"2864:36:2","statements":[{"expression":{"id":369,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"2881:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":368,"id":370,"nodeType":"Return","src":"2874:19:2"}]},"documentation":{"id":364,"nodeType":"StructuredDocumentation","src":"2776:22:2","text":"@inheritdoc IERC20"},"functionSelector":"18160ddd","id":372,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"2812:11:2","nodeType":"FunctionDefinition","parameters":{"id":365,"nodeType":"ParameterList","parameters":[],"src":"2823:2:2"},"returnParameters":{"id":368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":367,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":372,"src":"2855:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":366,"name":"uint256","nodeType":"ElementaryTypeName","src":"2855:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2854:9:2"},"scope":799,"src":"2803:97:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[834],"body":{"id":384,"nodeType":"Block","src":"3007:42:2","statements":[{"expression":{"baseExpression":{"id":380,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"3024:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":382,"indexExpression":{"id":381,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":375,"src":"3034:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3024:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":379,"id":383,"nodeType":"Return","src":"3017:25:2"}]},"documentation":{"id":373,"nodeType":"StructuredDocumentation","src":"2906:22:2","text":"@inheritdoc IERC20"},"functionSelector":"70a08231","id":385,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"2942:9:2","nodeType":"FunctionDefinition","parameters":{"id":376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":375,"mutability":"mutable","name":"account","nameLocation":"2960:7:2","nodeType":"VariableDeclaration","scope":385,"src":"2952:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":374,"name":"address","nodeType":"ElementaryTypeName","src":"2952:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2951:17:2"},"returnParameters":{"id":379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":378,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":385,"src":"2998:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":377,"name":"uint256","nodeType":"ElementaryTypeName","src":"2998:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2997:9:2"},"scope":799,"src":"2933:116:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[844],"body":{"id":408,"nodeType":"Block","src":"3319:103:2","statements":[{"assignments":[396],"declarations":[{"constant":false,"id":396,"mutability":"mutable","name":"owner","nameLocation":"3337:5:2","nodeType":"VariableDeclaration","scope":408,"src":"3329:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":395,"name":"address","nodeType":"ElementaryTypeName","src":"3329:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":399,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":397,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"3345:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3345:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3329:28:2"},{"expression":{"arguments":[{"id":401,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":396,"src":"3377:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":402,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"3384:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":403,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":390,"src":"3388:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":400,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"3367:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3367:27:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":405,"nodeType":"ExpressionStatement","src":"3367:27:2"},{"expression":{"hexValue":"74727565","id":406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3411:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":394,"id":407,"nodeType":"Return","src":"3404:11:2"}]},"documentation":{"id":386,"nodeType":"StructuredDocumentation","src":"3055:184:2","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":409,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3253:8:2","nodeType":"FunctionDefinition","parameters":{"id":391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":388,"mutability":"mutable","name":"to","nameLocation":"3270:2:2","nodeType":"VariableDeclaration","scope":409,"src":"3262:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":387,"name":"address","nodeType":"ElementaryTypeName","src":"3262:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":390,"mutability":"mutable","name":"value","nameLocation":"3282:5:2","nodeType":"VariableDeclaration","scope":409,"src":"3274:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":389,"name":"uint256","nodeType":"ElementaryTypeName","src":"3274:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3261:27:2"},"returnParameters":{"id":394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":393,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":409,"src":"3313:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":392,"name":"bool","nodeType":"ElementaryTypeName","src":"3313:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3312:6:2"},"scope":799,"src":"3244:178:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[854],"body":{"id":425,"nodeType":"Block","src":"3544:51:2","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":419,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":313,"src":"3561:11:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":421,"indexExpression":{"id":420,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":412,"src":"3573:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3561:18:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":423,"indexExpression":{"id":422,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":414,"src":"3580:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3561:27:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":418,"id":424,"nodeType":"Return","src":"3554:34:2"}]},"documentation":{"id":410,"nodeType":"StructuredDocumentation","src":"3428:22:2","text":"@inheritdoc IERC20"},"functionSelector":"dd62ed3e","id":426,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3464:9:2","nodeType":"FunctionDefinition","parameters":{"id":415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":412,"mutability":"mutable","name":"owner","nameLocation":"3482:5:2","nodeType":"VariableDeclaration","scope":426,"src":"3474:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":411,"name":"address","nodeType":"ElementaryTypeName","src":"3474:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":414,"mutability":"mutable","name":"spender","nameLocation":"3497:7:2","nodeType":"VariableDeclaration","scope":426,"src":"3489:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":413,"name":"address","nodeType":"ElementaryTypeName","src":"3489:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3473:32:2"},"returnParameters":{"id":418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":417,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":426,"src":"3535:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":416,"name":"uint256","nodeType":"ElementaryTypeName","src":"3535:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3534:9:2"},"scope":799,"src":"3455:140:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[864],"body":{"id":449,"nodeType":"Block","src":"3981:107:2","statements":[{"assignments":[437],"declarations":[{"constant":false,"id":437,"mutability":"mutable","name":"owner","nameLocation":"3999:5:2","nodeType":"VariableDeclaration","scope":449,"src":"3991:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":436,"name":"address","nodeType":"ElementaryTypeName","src":"3991:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":440,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":438,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"4007:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4007:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3991:28:2"},{"expression":{"arguments":[{"id":442,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":437,"src":"4038:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":443,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":429,"src":"4045:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":444,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":431,"src":"4054:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":441,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[690,750],"referencedDeclaration":690,"src":"4029:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4029:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":446,"nodeType":"ExpressionStatement","src":"4029:31:2"},{"expression":{"hexValue":"74727565","id":447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4077:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":435,"id":448,"nodeType":"Return","src":"4070:11:2"}]},"documentation":{"id":427,"nodeType":"StructuredDocumentation","src":"3601:296:2","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":450,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3911:7:2","nodeType":"FunctionDefinition","parameters":{"id":432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":429,"mutability":"mutable","name":"spender","nameLocation":"3927:7:2","nodeType":"VariableDeclaration","scope":450,"src":"3919:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":428,"name":"address","nodeType":"ElementaryTypeName","src":"3919:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":431,"mutability":"mutable","name":"value","nameLocation":"3944:5:2","nodeType":"VariableDeclaration","scope":450,"src":"3936:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":430,"name":"uint256","nodeType":"ElementaryTypeName","src":"3936:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3918:32:2"},"returnParameters":{"id":435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":434,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":450,"src":"3975:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":433,"name":"bool","nodeType":"ElementaryTypeName","src":"3975:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3974:6:2"},"scope":799,"src":"3902:186:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[876],"body":{"id":481,"nodeType":"Block","src":"4773:151:2","statements":[{"assignments":[463],"declarations":[{"constant":false,"id":463,"mutability":"mutable","name":"spender","nameLocation":"4791:7:2","nodeType":"VariableDeclaration","scope":481,"src":"4783:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":462,"name":"address","nodeType":"ElementaryTypeName","src":"4783:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":466,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":464,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"4801:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4801:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4783:30:2"},{"expression":{"arguments":[{"id":468,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":453,"src":"4839:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":469,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":463,"src":"4845:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":470,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":457,"src":"4854:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":467,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":798,"src":"4823:15:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4823:37:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":472,"nodeType":"ExpressionStatement","src":"4823:37:2"},{"expression":{"arguments":[{"id":474,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":453,"src":"4880:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":475,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":455,"src":"4886:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":476,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":457,"src":"4890:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":473,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"4870:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4870:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":478,"nodeType":"ExpressionStatement","src":"4870:26:2"},{"expression":{"hexValue":"74727565","id":479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4913:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":461,"id":480,"nodeType":"Return","src":"4906:11:2"}]},"documentation":{"id":451,"nodeType":"StructuredDocumentation","src":"4094:581:2","text":" @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":482,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4689:12:2","nodeType":"FunctionDefinition","parameters":{"id":458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":453,"mutability":"mutable","name":"from","nameLocation":"4710:4:2","nodeType":"VariableDeclaration","scope":482,"src":"4702:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":452,"name":"address","nodeType":"ElementaryTypeName","src":"4702:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":455,"mutability":"mutable","name":"to","nameLocation":"4724:2:2","nodeType":"VariableDeclaration","scope":482,"src":"4716:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":454,"name":"address","nodeType":"ElementaryTypeName","src":"4716:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":457,"mutability":"mutable","name":"value","nameLocation":"4736:5:2","nodeType":"VariableDeclaration","scope":482,"src":"4728:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":456,"name":"uint256","nodeType":"ElementaryTypeName","src":"4728:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:41:2"},"returnParameters":{"id":461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":460,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":482,"src":"4767:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":459,"name":"bool","nodeType":"ElementaryTypeName","src":"4767:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4766:6:2"},"scope":799,"src":"4680:244:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":528,"nodeType":"Block","src":"5366:231:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":492,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"5380:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5396:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":494,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5388:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":493,"name":"address","nodeType":"ElementaryTypeName","src":"5388:7:2","typeDescriptions":{}}},"id":496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5388:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5380:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":506,"nodeType":"IfStatement","src":"5376:86:2","trueBody":{"id":505,"nodeType":"Block","src":"5400:62:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5448:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":500,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5440:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":499,"name":"address","nodeType":"ElementaryTypeName","src":"5440:7:2","typeDescriptions":{}}},"id":502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5440:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":498,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":164,"src":"5421:18:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5421:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":504,"nodeType":"RevertStatement","src":"5414:37:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":507,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":487,"src":"5475:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5489:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":509,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5481:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":508,"name":"address","nodeType":"ElementaryTypeName","src":"5481:7:2","typeDescriptions":{}}},"id":511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5481:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5475:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":521,"nodeType":"IfStatement","src":"5471:86:2","trueBody":{"id":520,"nodeType":"Block","src":"5493:64:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5543:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":515,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5535:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":514,"name":"address","nodeType":"ElementaryTypeName","src":"5535:7:2","typeDescriptions":{}}},"id":517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5535:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":513,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"5514:20:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5514:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":519,"nodeType":"RevertStatement","src":"5507:39:2"}]}},{"expression":{"arguments":[{"id":523,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"5574:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":524,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":487,"src":"5580:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":525,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"5584:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":522,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"5566:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5566:24:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":527,"nodeType":"ExpressionStatement","src":"5566:24:2"}]},"documentation":{"id":483,"nodeType":"StructuredDocumentation","src":"4930:362:2","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":529,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"5306:9:2","nodeType":"FunctionDefinition","parameters":{"id":490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":485,"mutability":"mutable","name":"from","nameLocation":"5324:4:2","nodeType":"VariableDeclaration","scope":529,"src":"5316:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":484,"name":"address","nodeType":"ElementaryTypeName","src":"5316:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":487,"mutability":"mutable","name":"to","nameLocation":"5338:2:2","nodeType":"VariableDeclaration","scope":529,"src":"5330:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":486,"name":"address","nodeType":"ElementaryTypeName","src":"5330:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":489,"mutability":"mutable","name":"value","nameLocation":"5350:5:2","nodeType":"VariableDeclaration","scope":529,"src":"5342:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":488,"name":"uint256","nodeType":"ElementaryTypeName","src":"5342:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5315:41:2"},"returnParameters":{"id":491,"nodeType":"ParameterList","parameters":[],"src":"5366:0:2"},"scope":799,"src":"5297:300:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":605,"nodeType":"Block","src":"5987:1032:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":539,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":532,"src":"6001:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6017:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":541,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6009:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":540,"name":"address","nodeType":"ElementaryTypeName","src":"6009:7:2","typeDescriptions":{}}},"id":543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6009:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6001:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":576,"nodeType":"Block","src":"6175:362:2","statements":[{"assignments":[551],"declarations":[{"constant":false,"id":551,"mutability":"mutable","name":"fromBalance","nameLocation":"6197:11:2","nodeType":"VariableDeclaration","scope":576,"src":"6189:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":550,"name":"uint256","nodeType":"ElementaryTypeName","src":"6189:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":555,"initialValue":{"baseExpression":{"id":552,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"6211:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":554,"indexExpression":{"id":553,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":532,"src":"6221:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6211:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6189:37:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":556,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":551,"src":"6244:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":557,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"6258:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6244:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":566,"nodeType":"IfStatement","src":"6240:115:2","trueBody":{"id":565,"nodeType":"Block","src":"6265:90:2","statements":[{"errorCall":{"arguments":[{"id":560,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":532,"src":"6315:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":561,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":551,"src":"6321:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":562,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"6334:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":559,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"6290:24:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6290:50:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":564,"nodeType":"RevertStatement","src":"6283:57:2"}]}},{"id":575,"nodeType":"UncheckedBlock","src":"6368:159:2","statements":[{"expression":{"id":573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":567,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"6475:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":569,"indexExpression":{"id":568,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":532,"src":"6485:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6475:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":570,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":551,"src":"6493:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":571,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"6507:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6493:19:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6475:37:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":574,"nodeType":"ExpressionStatement","src":"6475:37:2"}]}]},"id":577,"nodeType":"IfStatement","src":"5997:540:2","trueBody":{"id":549,"nodeType":"Block","src":"6021:148:2","statements":[{"expression":{"id":547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":545,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"6137:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":546,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"6153:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6137:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":548,"nodeType":"ExpressionStatement","src":"6137:21:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":578,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":534,"src":"6551:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6565:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":580,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6557:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":579,"name":"address","nodeType":"ElementaryTypeName","src":"6557:7:2","typeDescriptions":{}}},"id":582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6557:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6551:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":597,"nodeType":"Block","src":"6766:206:2","statements":[{"id":596,"nodeType":"UncheckedBlock","src":"6780:182:2","statements":[{"expression":{"id":594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":590,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"6925:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":592,"indexExpression":{"id":591,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":534,"src":"6935:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6925:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":593,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"6942:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6925:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":595,"nodeType":"ExpressionStatement","src":"6925:22:2"}]}]},"id":598,"nodeType":"IfStatement","src":"6547:425:2","trueBody":{"id":589,"nodeType":"Block","src":"6569:191:2","statements":[{"id":588,"nodeType":"UncheckedBlock","src":"6583:167:2","statements":[{"expression":{"id":586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":584,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"6714:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":585,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"6730:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6714:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":587,"nodeType":"ExpressionStatement","src":"6714:21:2"}]}]}},{"eventCall":{"arguments":[{"id":600,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":532,"src":"6996:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":601,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":534,"src":"7002:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":602,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"7006:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":599,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":811,"src":"6987:8:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6987:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":604,"nodeType":"EmitStatement","src":"6982:30:2"}]},"documentation":{"id":530,"nodeType":"StructuredDocumentation","src":"5603:304:2","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":606,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"5921:7:2","nodeType":"FunctionDefinition","parameters":{"id":537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":532,"mutability":"mutable","name":"from","nameLocation":"5937:4:2","nodeType":"VariableDeclaration","scope":606,"src":"5929:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":531,"name":"address","nodeType":"ElementaryTypeName","src":"5929:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":534,"mutability":"mutable","name":"to","nameLocation":"5951:2:2","nodeType":"VariableDeclaration","scope":606,"src":"5943:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":533,"name":"address","nodeType":"ElementaryTypeName","src":"5943:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":536,"mutability":"mutable","name":"value","nameLocation":"5963:5:2","nodeType":"VariableDeclaration","scope":606,"src":"5955:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":535,"name":"uint256","nodeType":"ElementaryTypeName","src":"5955:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5928:41:2"},"returnParameters":{"id":538,"nodeType":"ParameterList","parameters":[],"src":"5987:0:2"},"scope":799,"src":"5912:1107:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":638,"nodeType":"Block","src":"7418:152:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":614,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"7432:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7451:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":616,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7443:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":615,"name":"address","nodeType":"ElementaryTypeName","src":"7443:7:2","typeDescriptions":{}}},"id":618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7443:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7432:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":628,"nodeType":"IfStatement","src":"7428:91:2","trueBody":{"id":627,"nodeType":"Block","src":"7455:64:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7505:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":622,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7497:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":621,"name":"address","nodeType":"ElementaryTypeName","src":"7497:7:2","typeDescriptions":{}}},"id":624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7497:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":620,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"7476:20:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7476:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":626,"nodeType":"RevertStatement","src":"7469:39:2"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7544:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":631,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7536:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":630,"name":"address","nodeType":"ElementaryTypeName","src":"7536:7:2","typeDescriptions":{}}},"id":633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7536:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":634,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"7548:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":635,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":611,"src":"7557:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":629,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"7528:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7528:35:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":637,"nodeType":"ExpressionStatement","src":"7528:35:2"}]},"documentation":{"id":607,"nodeType":"StructuredDocumentation","src":"7025:332:2","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":639,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7371:5:2","nodeType":"FunctionDefinition","parameters":{"id":612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":609,"mutability":"mutable","name":"account","nameLocation":"7385:7:2","nodeType":"VariableDeclaration","scope":639,"src":"7377:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":608,"name":"address","nodeType":"ElementaryTypeName","src":"7377:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":611,"mutability":"mutable","name":"value","nameLocation":"7402:5:2","nodeType":"VariableDeclaration","scope":639,"src":"7394:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":610,"name":"uint256","nodeType":"ElementaryTypeName","src":"7394:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7376:32:2"},"returnParameters":{"id":613,"nodeType":"ParameterList","parameters":[],"src":"7418:0:2"},"scope":799,"src":"7362:208:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":671,"nodeType":"Block","src":"7944:150:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":647,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"7958:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7977:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":649,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7969:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":648,"name":"address","nodeType":"ElementaryTypeName","src":"7969:7:2","typeDescriptions":{}}},"id":651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7969:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7958:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":661,"nodeType":"IfStatement","src":"7954:89:2","trueBody":{"id":660,"nodeType":"Block","src":"7981:62:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8029:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":655,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8021:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":654,"name":"address","nodeType":"ElementaryTypeName","src":"8021:7:2","typeDescriptions":{}}},"id":657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8021:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":653,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":164,"src":"8002:18:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8002:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":659,"nodeType":"RevertStatement","src":"7995:37:2"}]}},{"expression":{"arguments":[{"id":663,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"8060:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8077:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":665,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8069:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":664,"name":"address","nodeType":"ElementaryTypeName","src":"8069:7:2","typeDescriptions":{}}},"id":667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8069:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":668,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":644,"src":"8081:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":662,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"8052:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8052:35:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":670,"nodeType":"ExpressionStatement","src":"8052:35:2"}]},"documentation":{"id":640,"nodeType":"StructuredDocumentation","src":"7576:307:2","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":672,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"7897:5:2","nodeType":"FunctionDefinition","parameters":{"id":645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":642,"mutability":"mutable","name":"account","nameLocation":"7911:7:2","nodeType":"VariableDeclaration","scope":672,"src":"7903:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":641,"name":"address","nodeType":"ElementaryTypeName","src":"7903:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":644,"mutability":"mutable","name":"value","nameLocation":"7928:5:2","nodeType":"VariableDeclaration","scope":672,"src":"7920:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":643,"name":"uint256","nodeType":"ElementaryTypeName","src":"7920:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7902:32:2"},"returnParameters":{"id":646,"nodeType":"ParameterList","parameters":[],"src":"7944:0:2"},"scope":799,"src":"7888:206:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":689,"nodeType":"Block","src":"8704:54:2","statements":[{"expression":{"arguments":[{"id":683,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":675,"src":"8723:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":684,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":677,"src":"8730:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":685,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":679,"src":"8739:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8746:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":682,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[690,750],"referencedDeclaration":750,"src":"8714:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8714:37:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":688,"nodeType":"ExpressionStatement","src":"8714:37:2"}]},"documentation":{"id":673,"nodeType":"StructuredDocumentation","src":"8100:525:2","text":" @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":690,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"8639:8:2","nodeType":"FunctionDefinition","parameters":{"id":680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":675,"mutability":"mutable","name":"owner","nameLocation":"8656:5:2","nodeType":"VariableDeclaration","scope":690,"src":"8648:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":674,"name":"address","nodeType":"ElementaryTypeName","src":"8648:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":677,"mutability":"mutable","name":"spender","nameLocation":"8671:7:2","nodeType":"VariableDeclaration","scope":690,"src":"8663:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":676,"name":"address","nodeType":"ElementaryTypeName","src":"8663:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":679,"mutability":"mutable","name":"value","nameLocation":"8688:5:2","nodeType":"VariableDeclaration","scope":690,"src":"8680:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":678,"name":"uint256","nodeType":"ElementaryTypeName","src":"8680:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8647:47:2"},"returnParameters":{"id":681,"nodeType":"ParameterList","parameters":[],"src":"8704:0:2"},"scope":799,"src":"8630:128:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":749,"nodeType":"Block","src":"9703:334:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":702,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":693,"src":"9717:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9734:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":704,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9726:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":703,"name":"address","nodeType":"ElementaryTypeName","src":"9726:7:2","typeDescriptions":{}}},"id":706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9726:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9717:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":716,"nodeType":"IfStatement","src":"9713:89:2","trueBody":{"id":715,"nodeType":"Block","src":"9738:64:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9788:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":710,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9780:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":709,"name":"address","nodeType":"ElementaryTypeName","src":"9780:7:2","typeDescriptions":{}}},"id":712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9780:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":708,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":183,"src":"9759:20:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9759:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":714,"nodeType":"RevertStatement","src":"9752:39:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":717,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":695,"src":"9815:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9834:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":719,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9826:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":718,"name":"address","nodeType":"ElementaryTypeName","src":"9826:7:2","typeDescriptions":{}}},"id":721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9826:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9815:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":731,"nodeType":"IfStatement","src":"9811:90:2","trueBody":{"id":730,"nodeType":"Block","src":"9838:63:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9887:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":725,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9879:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":724,"name":"address","nodeType":"ElementaryTypeName","src":"9879:7:2","typeDescriptions":{}}},"id":727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9879:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":723,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":188,"src":"9859:19:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9859:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":729,"nodeType":"RevertStatement","src":"9852:38:2"}]}},{"expression":{"id":738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":732,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":313,"src":"9910:11:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":735,"indexExpression":{"id":733,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":693,"src":"9922:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9910:18:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":736,"indexExpression":{"id":734,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":695,"src":"9929:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9910:27:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":737,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":697,"src":"9940:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9910:35:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":739,"nodeType":"ExpressionStatement","src":"9910:35:2"},{"condition":{"id":740,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":699,"src":"9959:9:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":748,"nodeType":"IfStatement","src":"9955:76:2","trueBody":{"id":747,"nodeType":"Block","src":"9970:61:2","statements":[{"eventCall":{"arguments":[{"id":742,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":693,"src":"9998:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":743,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":695,"src":"10005:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":744,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":697,"src":"10014:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":741,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":820,"src":"9989:8:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9989:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":746,"nodeType":"EmitStatement","src":"9984:36:2"}]}}]},"documentation":{"id":691,"nodeType":"StructuredDocumentation","src":"8764:836:2","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":750,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"9614:8:2","nodeType":"FunctionDefinition","parameters":{"id":700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":693,"mutability":"mutable","name":"owner","nameLocation":"9631:5:2","nodeType":"VariableDeclaration","scope":750,"src":"9623:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":692,"name":"address","nodeType":"ElementaryTypeName","src":"9623:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":695,"mutability":"mutable","name":"spender","nameLocation":"9646:7:2","nodeType":"VariableDeclaration","scope":750,"src":"9638:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":694,"name":"address","nodeType":"ElementaryTypeName","src":"9638:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":697,"mutability":"mutable","name":"value","nameLocation":"9663:5:2","nodeType":"VariableDeclaration","scope":750,"src":"9655:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":696,"name":"uint256","nodeType":"ElementaryTypeName","src":"9655:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":699,"mutability":"mutable","name":"emitEvent","nameLocation":"9675:9:2","nodeType":"VariableDeclaration","scope":750,"src":"9670:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":698,"name":"bool","nodeType":"ElementaryTypeName","src":"9670:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9622:63:2"},"returnParameters":{"id":701,"nodeType":"ParameterList","parameters":[],"src":"9703:0:2"},"scope":799,"src":"9605:432:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":797,"nodeType":"Block","src":"10408:387:2","statements":[{"assignments":[761],"declarations":[{"constant":false,"id":761,"mutability":"mutable","name":"currentAllowance","nameLocation":"10426:16:2","nodeType":"VariableDeclaration","scope":797,"src":"10418:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":760,"name":"uint256","nodeType":"ElementaryTypeName","src":"10418:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":766,"initialValue":{"arguments":[{"id":763,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"10455:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":764,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"10462:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":762,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":426,"src":"10445:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10445:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10418:52:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":767,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"10484:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"id":770,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10508:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":769,"name":"uint256","nodeType":"ElementaryTypeName","src":"10508:7:2","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":768,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10503:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10503:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":772,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10517:3:2","memberName":"max","nodeType":"MemberAccess","src":"10503:17:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10484:36:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":796,"nodeType":"IfStatement","src":"10480:309:2","trueBody":{"id":795,"nodeType":"Block","src":"10522:267:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":774,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"10540:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":775,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"10559:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10540:24:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":784,"nodeType":"IfStatement","src":"10536:130:2","trueBody":{"id":783,"nodeType":"Block","src":"10566:100:2","statements":[{"errorCall":{"arguments":[{"id":778,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"10618:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":779,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"10627:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":780,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"10645:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":777,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":178,"src":"10591:26:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10591:60:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":782,"nodeType":"RevertStatement","src":"10584:67:2"}]}},{"id":794,"nodeType":"UncheckedBlock","src":"10679:100:2","statements":[{"expression":{"arguments":[{"id":786,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"10716:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":787,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"10723:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":788,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"10732:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":789,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"10751:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10732:24:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10758:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":785,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[690,750],"referencedDeclaration":750,"src":"10707:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10707:57:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":793,"nodeType":"ExpressionStatement","src":"10707:57:2"}]}]}}]},"documentation":{"id":751,"nodeType":"StructuredDocumentation","src":"10043:271:2","text":" @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":798,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"10328:15:2","nodeType":"FunctionDefinition","parameters":{"id":758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":753,"mutability":"mutable","name":"owner","nameLocation":"10352:5:2","nodeType":"VariableDeclaration","scope":798,"src":"10344:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":752,"name":"address","nodeType":"ElementaryTypeName","src":"10344:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":755,"mutability":"mutable","name":"spender","nameLocation":"10367:7:2","nodeType":"VariableDeclaration","scope":798,"src":"10359:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":754,"name":"address","nodeType":"ElementaryTypeName","src":"10359:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":757,"mutability":"mutable","name":"value","nameLocation":"10384:5:2","nodeType":"VariableDeclaration","scope":798,"src":"10376:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":756,"name":"uint256","nodeType":"ElementaryTypeName","src":"10376:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10343:47:2"},"returnParameters":{"id":759,"nodeType":"ParameterList","parameters":[],"src":"10408:0:2"},"scope":799,"src":"10319:476:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":800,"src":"1106:9691:2","usedErrors":[159,164,169,178,183,188],"usedEvents":[811,820]}],"src":"105:10693:2"},"id":2},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[877]},"id":878,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":801,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"106:25:3"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":802,"nodeType":"StructuredDocumentation","src":"133:71:3","text":" @dev Interface of the ERC-20 standard as defined in the ERC."},"fullyImplemented":false,"id":877,"linearizedBaseContracts":[877],"name":"IERC20","nameLocation":"215:6:3","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":803,"nodeType":"StructuredDocumentation","src":"228:158:3","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":811,"name":"Transfer","nameLocation":"397:8:3","nodeType":"EventDefinition","parameters":{"id":810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":805,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"422:4:3","nodeType":"VariableDeclaration","scope":811,"src":"406:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":804,"name":"address","nodeType":"ElementaryTypeName","src":"406:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":807,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"444:2:3","nodeType":"VariableDeclaration","scope":811,"src":"428:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":806,"name":"address","nodeType":"ElementaryTypeName","src":"428:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":809,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"456:5:3","nodeType":"VariableDeclaration","scope":811,"src":"448:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":808,"name":"uint256","nodeType":"ElementaryTypeName","src":"448:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"405:57:3"},"src":"391:72:3"},{"anonymous":false,"documentation":{"id":812,"nodeType":"StructuredDocumentation","src":"469:148:3","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":820,"name":"Approval","nameLocation":"628:8:3","nodeType":"EventDefinition","parameters":{"id":819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":814,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"653:5:3","nodeType":"VariableDeclaration","scope":820,"src":"637:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":813,"name":"address","nodeType":"ElementaryTypeName","src":"637:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":816,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"676:7:3","nodeType":"VariableDeclaration","scope":820,"src":"660:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":815,"name":"address","nodeType":"ElementaryTypeName","src":"660:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":818,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"693:5:3","nodeType":"VariableDeclaration","scope":820,"src":"685:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":817,"name":"uint256","nodeType":"ElementaryTypeName","src":"685:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"636:63:3"},"src":"622:78:3"},{"documentation":{"id":821,"nodeType":"StructuredDocumentation","src":"706:65:3","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":826,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"785:11:3","nodeType":"FunctionDefinition","parameters":{"id":822,"nodeType":"ParameterList","parameters":[],"src":"796:2:3"},"returnParameters":{"id":825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":824,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":826,"src":"822:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":823,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:9:3"},"scope":877,"src":"776:55:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":827,"nodeType":"StructuredDocumentation","src":"837:71:3","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":834,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"922:9:3","nodeType":"FunctionDefinition","parameters":{"id":830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":829,"mutability":"mutable","name":"account","nameLocation":"940:7:3","nodeType":"VariableDeclaration","scope":834,"src":"932:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":828,"name":"address","nodeType":"ElementaryTypeName","src":"932:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"931:17:3"},"returnParameters":{"id":833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":832,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":834,"src":"972:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":831,"name":"uint256","nodeType":"ElementaryTypeName","src":"972:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"971:9:3"},"scope":877,"src":"913:68:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":835,"nodeType":"StructuredDocumentation","src":"987:213:3","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":844,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1214:8:3","nodeType":"FunctionDefinition","parameters":{"id":840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":837,"mutability":"mutable","name":"to","nameLocation":"1231:2:3","nodeType":"VariableDeclaration","scope":844,"src":"1223:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":836,"name":"address","nodeType":"ElementaryTypeName","src":"1223:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":839,"mutability":"mutable","name":"value","nameLocation":"1243:5:3","nodeType":"VariableDeclaration","scope":844,"src":"1235:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":838,"name":"uint256","nodeType":"ElementaryTypeName","src":"1235:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1222:27:3"},"returnParameters":{"id":843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":842,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":844,"src":"1268:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":841,"name":"bool","nodeType":"ElementaryTypeName","src":"1268:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1267:6:3"},"scope":877,"src":"1205:69:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":845,"nodeType":"StructuredDocumentation","src":"1280:264:3","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":854,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1558:9:3","nodeType":"FunctionDefinition","parameters":{"id":850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":847,"mutability":"mutable","name":"owner","nameLocation":"1576:5:3","nodeType":"VariableDeclaration","scope":854,"src":"1568:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":846,"name":"address","nodeType":"ElementaryTypeName","src":"1568:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":849,"mutability":"mutable","name":"spender","nameLocation":"1591:7:3","nodeType":"VariableDeclaration","scope":854,"src":"1583:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":848,"name":"address","nodeType":"ElementaryTypeName","src":"1583:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1567:32:3"},"returnParameters":{"id":853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":852,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":854,"src":"1623:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":851,"name":"uint256","nodeType":"ElementaryTypeName","src":"1623:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1622:9:3"},"scope":877,"src":"1549:83:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":855,"nodeType":"StructuredDocumentation","src":"1638:667:3","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":864,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2319:7:3","nodeType":"FunctionDefinition","parameters":{"id":860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":857,"mutability":"mutable","name":"spender","nameLocation":"2335:7:3","nodeType":"VariableDeclaration","scope":864,"src":"2327:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":856,"name":"address","nodeType":"ElementaryTypeName","src":"2327:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":859,"mutability":"mutable","name":"value","nameLocation":"2352:5:3","nodeType":"VariableDeclaration","scope":864,"src":"2344:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":858,"name":"uint256","nodeType":"ElementaryTypeName","src":"2344:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2326:32:3"},"returnParameters":{"id":863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":862,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":864,"src":"2377:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":861,"name":"bool","nodeType":"ElementaryTypeName","src":"2377:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2376:6:3"},"scope":877,"src":"2310:73:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":865,"nodeType":"StructuredDocumentation","src":"2389:297:3","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":876,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2700:12:3","nodeType":"FunctionDefinition","parameters":{"id":872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":867,"mutability":"mutable","name":"from","nameLocation":"2721:4:3","nodeType":"VariableDeclaration","scope":876,"src":"2713:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":866,"name":"address","nodeType":"ElementaryTypeName","src":"2713:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":869,"mutability":"mutable","name":"to","nameLocation":"2735:2:3","nodeType":"VariableDeclaration","scope":876,"src":"2727:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":868,"name":"address","nodeType":"ElementaryTypeName","src":"2727:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":871,"mutability":"mutable","name":"value","nameLocation":"2747:5:3","nodeType":"VariableDeclaration","scope":876,"src":"2739:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":870,"name":"uint256","nodeType":"ElementaryTypeName","src":"2739:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2712:41:3"},"returnParameters":{"id":875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":874,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":876,"src":"2772:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":873,"name":"bool","nodeType":"ElementaryTypeName","src":"2772:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2771:6:3"},"scope":877,"src":"2691:87:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":878,"src":"205:2575:3","usedErrors":[],"usedEvents":[811,820]}],"src":"106:2675:3"},"id":3},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[877],"IERC20Metadata":[903]},"id":904,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":879,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"125:24:4"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":881,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":904,"sourceUnit":878,"src":"151:37:4","symbolAliases":[{"foreign":{"id":880,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":877,"src":"159:6:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":883,"name":"IERC20","nameLocations":["306:6:4"],"nodeType":"IdentifierPath","referencedDeclaration":877,"src":"306:6:4"},"id":884,"nodeType":"InheritanceSpecifier","src":"306:6:4"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":882,"nodeType":"StructuredDocumentation","src":"190:87:4","text":" @dev Interface for the optional metadata functions from the ERC-20 standard."},"fullyImplemented":false,"id":903,"linearizedBaseContracts":[903,877],"name":"IERC20Metadata","nameLocation":"288:14:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":885,"nodeType":"StructuredDocumentation","src":"319:54:4","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":890,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"387:4:4","nodeType":"FunctionDefinition","parameters":{"id":886,"nodeType":"ParameterList","parameters":[],"src":"391:2:4"},"returnParameters":{"id":889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":888,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":890,"src":"417:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":887,"name":"string","nodeType":"ElementaryTypeName","src":"417:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"416:15:4"},"scope":903,"src":"378:54:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":891,"nodeType":"StructuredDocumentation","src":"438:56:4","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":896,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"508:6:4","nodeType":"FunctionDefinition","parameters":{"id":892,"nodeType":"ParameterList","parameters":[],"src":"514:2:4"},"returnParameters":{"id":895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":894,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":896,"src":"540:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":893,"name":"string","nodeType":"ElementaryTypeName","src":"540:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"539:15:4"},"scope":903,"src":"499:56:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":897,"nodeType":"StructuredDocumentation","src":"561:65:4","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":902,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"640:8:4","nodeType":"FunctionDefinition","parameters":{"id":898,"nodeType":"ParameterList","parameters":[],"src":"648:2:4"},"returnParameters":{"id":901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":900,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":902,"src":"674:5:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":899,"name":"uint8","nodeType":"ElementaryTypeName","src":"674:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"673:7:4"},"scope":903,"src":"631:50:4","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":904,"src":"278:405:4","usedErrors":[],"usedEvents":[811,820]}],"src":"125:559:4"},"id":4},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[933]},"id":934,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":905,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:5"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":906,"nodeType":"StructuredDocumentation","src":"127:496:5","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":933,"linearizedBaseContracts":[933],"name":"Context","nameLocation":"642:7:5","nodeType":"ContractDefinition","nodes":[{"body":{"id":914,"nodeType":"Block","src":"718:34:5","statements":[{"expression":{"expression":{"id":911,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:5","memberName":"sender","nodeType":"MemberAccess","src":"735:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":910,"id":913,"nodeType":"Return","src":"728:17:5"}]},"id":915,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:5","nodeType":"FunctionDefinition","parameters":{"id":907,"nodeType":"ParameterList","parameters":[],"src":"675:2:5"},"returnParameters":{"id":910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":909,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":915,"src":"709:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":908,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:5"},"scope":933,"src":"656:96:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":923,"nodeType":"Block","src":"825:32:5","statements":[{"expression":{"expression":{"id":920,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:5","memberName":"data","nodeType":"MemberAccess","src":"842:8:5","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":919,"id":922,"nodeType":"Return","src":"835:15:5"}]},"id":924,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:5","nodeType":"FunctionDefinition","parameters":{"id":916,"nodeType":"ParameterList","parameters":[],"src":"775:2:5"},"returnParameters":{"id":919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":918,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":924,"src":"809:14:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":917,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:5"},"scope":933,"src":"758:99:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":931,"nodeType":"Block","src":"935:25:5","statements":[{"expression":{"hexValue":"30","id":929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":928,"id":930,"nodeType":"Return","src":"945:8:5"}]},"id":932,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:5","nodeType":"FunctionDefinition","parameters":{"id":925,"nodeType":"ParameterList","parameters":[],"src":"892:2:5"},"returnParameters":{"id":928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":927,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":932,"src":"926:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":926,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:5"},"scope":933,"src":"863:97:5","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":934,"src":"624:338:5","usedErrors":[],"usedEvents":[]}],"src":"101:862:5"},"id":5},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[985]},"id":986,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":935,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:6"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":936,"nodeType":"StructuredDocumentation","src":"125:489:6","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":985,"linearizedBaseContracts":[985],"name":"Panic","nameLocation":"665:5:6","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":937,"nodeType":"StructuredDocumentation","src":"677:36:6","text":"@dev generic / unspecified error"},"id":940,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:6","nodeType":"VariableDeclaration","scope":985,"src":"718:40:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":938,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":941,"nodeType":"StructuredDocumentation","src":"764:37:6","text":"@dev used by the assert() builtin"},"id":944,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:6","nodeType":"VariableDeclaration","scope":985,"src":"806:39:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":942,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":945,"nodeType":"StructuredDocumentation","src":"851:41:6","text":"@dev arithmetic underflow or overflow"},"id":948,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:6","nodeType":"VariableDeclaration","scope":985,"src":"897:47:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":946,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:6","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":949,"nodeType":"StructuredDocumentation","src":"950:35:6","text":"@dev division or modulo by zero"},"id":952,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:6","nodeType":"VariableDeclaration","scope":985,"src":"990:49:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":950,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:6","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":953,"nodeType":"StructuredDocumentation","src":"1045:30:6","text":"@dev enum conversion error"},"id":956,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:6","nodeType":"VariableDeclaration","scope":985,"src":"1080:54:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":954,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:6","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":957,"nodeType":"StructuredDocumentation","src":"1140:36:6","text":"@dev invalid encoding in storage"},"id":960,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:6","nodeType":"VariableDeclaration","scope":985,"src":"1181:55:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":958,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:6","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":961,"nodeType":"StructuredDocumentation","src":"1242:24:6","text":"@dev empty array pop"},"id":964,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:6","nodeType":"VariableDeclaration","scope":985,"src":"1271:48:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":962,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:6","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":965,"nodeType":"StructuredDocumentation","src":"1325:35:6","text":"@dev array out of bounds access"},"id":968,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:6","nodeType":"VariableDeclaration","scope":985,"src":"1365:52:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":966,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:6","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":969,"nodeType":"StructuredDocumentation","src":"1423:65:6","text":"@dev resource error (too large allocation or too large array)"},"id":972,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:6","nodeType":"VariableDeclaration","scope":985,"src":"1493:47:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":970,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:6","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":973,"nodeType":"StructuredDocumentation","src":"1546:42:6","text":"@dev calling invalid internal function"},"id":976,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:6","nodeType":"VariableDeclaration","scope":985,"src":"1593:58:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":974,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:6","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":983,"nodeType":"Block","src":"1819:151:6","statements":[{"AST":{"nodeType":"YulBlock","src":"1854:110:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1875:4:6","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1881:10:6","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1868:6:6"},"nodeType":"YulFunctionCall","src":"1868:24:6"},"nodeType":"YulExpressionStatement","src":"1868:24:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1912:4:6","type":"","value":"0x20"},{"name":"code","nodeType":"YulIdentifier","src":"1918:4:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1905:6:6"},"nodeType":"YulFunctionCall","src":"1905:18:6"},"nodeType":"YulExpressionStatement","src":"1905:18:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1943:4:6","type":"","value":"0x1c"},{"kind":"number","nodeType":"YulLiteral","src":"1949:4:6","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1936:6:6"},"nodeType":"YulFunctionCall","src":"1936:18:6"},"nodeType":"YulExpressionStatement","src":"1936:18:6"}]},"evmVersion":"paris","externalReferences":[{"declaration":979,"isOffset":false,"isSlot":false,"src":"1918:4:6","valueSize":1}],"flags":["memory-safe"],"id":982,"nodeType":"InlineAssembly","src":"1829:135:6"}]},"documentation":{"id":977,"nodeType":"StructuredDocumentation","src":"1658:113:6","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":984,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:6","nodeType":"FunctionDefinition","parameters":{"id":980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":979,"mutability":"mutable","name":"code","nameLocation":"1799:4:6","nodeType":"VariableDeclaration","scope":984,"src":"1791:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":978,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:6"},"returnParameters":{"id":981,"nodeType":"ParameterList","parameters":[],"src":"1819:0:6"},"scope":985,"src":"1776:194:6","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":986,"src":"657:1315:6","usedErrors":[],"usedEvents":[]}],"src":"99:1874:6"},"id":6},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[1054]},"id":1055,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":987,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:7"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":988,"nodeType":"StructuredDocumentation","src":"135:894:7","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":1054,"linearizedBaseContracts":[1054],"name":"ReentrancyGuard","nameLocation":"1048:15:7","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":991,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1843:11:7","nodeType":"VariableDeclaration","scope":1054,"src":"1818:40:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":989,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1857:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":994,"mutability":"constant","name":"ENTERED","nameLocation":"1889:7:7","nodeType":"VariableDeclaration","scope":1054,"src":"1864:36:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":992,"name":"uint256","nodeType":"ElementaryTypeName","src":"1864:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1899:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":996,"mutability":"mutable","name":"_status","nameLocation":"1923:7:7","nodeType":"VariableDeclaration","scope":1054,"src":"1907:23:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":995,"name":"uint256","nodeType":"ElementaryTypeName","src":"1907:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"documentation":{"id":997,"nodeType":"StructuredDocumentation","src":"1937:52:7","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","id":999,"name":"ReentrancyGuardReentrantCall","nameLocation":"2000:28:7","nodeType":"ErrorDefinition","parameters":{"id":998,"nodeType":"ParameterList","parameters":[],"src":"2028:2:7"},"src":"1994:37:7"},{"body":{"id":1006,"nodeType":"Block","src":"2051:38:7","statements":[{"expression":{"id":1004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1002,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"2061:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1003,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"2071:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2061:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1005,"nodeType":"ExpressionStatement","src":"2061:21:7"}]},"id":1007,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1000,"nodeType":"ParameterList","parameters":[],"src":"2048:2:7"},"returnParameters":{"id":1001,"nodeType":"ParameterList","parameters":[],"src":"2051:0:7"},"scope":1054,"src":"2037:52:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1017,"nodeType":"Block","src":"2490:79:7","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1010,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1034,"src":"2500:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2500:21:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1012,"nodeType":"ExpressionStatement","src":"2500:21:7"},{"id":1013,"nodeType":"PlaceholderStatement","src":"2531:1:7"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1014,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1042,"src":"2542:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2542:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1016,"nodeType":"ExpressionStatement","src":"2542:20:7"}]},"documentation":{"id":1008,"nodeType":"StructuredDocumentation","src":"2095:366:7","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":1018,"name":"nonReentrant","nameLocation":"2475:12:7","nodeType":"ModifierDefinition","parameters":{"id":1009,"nodeType":"ParameterList","parameters":[],"src":"2487:2:7"},"src":"2466:103:7","virtual":false,"visibility":"internal"},{"body":{"id":1033,"nodeType":"Block","src":"2614:268:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1021,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"2702:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1022,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"2713:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2702:18:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1028,"nodeType":"IfStatement","src":"2698:86:7","trueBody":{"id":1027,"nodeType":"Block","src":"2722:62:7","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1024,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":999,"src":"2743:28:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2743:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1026,"nodeType":"RevertStatement","src":"2736:37:7"}]}},{"expression":{"id":1031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1029,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"2858:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1030,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"2868:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2858:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1032,"nodeType":"ExpressionStatement","src":"2858:17:7"}]},"id":1034,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2584:19:7","nodeType":"FunctionDefinition","parameters":{"id":1019,"nodeType":"ParameterList","parameters":[],"src":"2603:2:7"},"returnParameters":{"id":1020,"nodeType":"ParameterList","parameters":[],"src":"2614:0:7"},"scope":1054,"src":"2575:307:7","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1041,"nodeType":"Block","src":"2926:170:7","statements":[{"expression":{"id":1039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1037,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"3068:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1038,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"3078:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3068:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1040,"nodeType":"ExpressionStatement","src":"3068:21:7"}]},"id":1042,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2897:18:7","nodeType":"FunctionDefinition","parameters":{"id":1035,"nodeType":"ParameterList","parameters":[],"src":"2915:2:7"},"returnParameters":{"id":1036,"nodeType":"ParameterList","parameters":[],"src":"2926:0:7"},"scope":1054,"src":"2888:208:7","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1052,"nodeType":"Block","src":"3339:42:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1048,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"3356:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1049,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"3367:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3356:18:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1047,"id":1051,"nodeType":"Return","src":"3349:25:7"}]},"documentation":{"id":1043,"nodeType":"StructuredDocumentation","src":"3102:168:7","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":1053,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3284:23:7","nodeType":"FunctionDefinition","parameters":{"id":1044,"nodeType":"ParameterList","parameters":[],"src":"3307:2:7"},"returnParameters":{"id":1047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1046,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1053,"src":"3333:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1045,"name":"bool","nodeType":"ElementaryTypeName","src":"3333:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3332:6:7"},"scope":1054,"src":"3275:106:7","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1055,"src":"1030:2353:7","usedErrors":[999],"usedEvents":[]}],"src":"109:3275:7"},"id":7},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[2675],"Panic":[985],"SafeCast":[4440]},"id":2676,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1056,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:8"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":1058,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2676,"sourceUnit":986,"src":"129:35:8","symbolAliases":[{"foreign":{"id":1057,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"137:5:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":1060,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2676,"sourceUnit":4441,"src":"165:40:8","symbolAliases":[{"foreign":{"id":1059,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4440,"src":"173:8:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":1061,"nodeType":"StructuredDocumentation","src":"207:73:8","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":2675,"linearizedBaseContracts":[2675],"name":"Math","nameLocation":"289:4:8","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":1066,"members":[{"id":1062,"name":"Floor","nameLocation":"324:5:8","nodeType":"EnumValue","src":"324:5:8"},{"id":1063,"name":"Ceil","nameLocation":"367:4:8","nodeType":"EnumValue","src":"367:4:8"},{"id":1064,"name":"Trunc","nameLocation":"409:5:8","nodeType":"EnumValue","src":"409:5:8"},{"id":1065,"name":"Expand","nameLocation":"439:6:8","nodeType":"EnumValue","src":"439:6:8"}],"name":"Rounding","nameLocation":"305:8:8","nodeType":"EnumDefinition","src":"300:169:8"},{"body":{"id":1079,"nodeType":"Block","src":"731:112:8","statements":[{"AST":{"nodeType":"YulBlock","src":"766:71:8","statements":[{"nodeType":"YulAssignment","src":"780:16:8","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"791:1:8"},{"name":"b","nodeType":"YulIdentifier","src":"794:1:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"787:3:8"},"nodeType":"YulFunctionCall","src":"787:9:8"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"780:3:8"}]},{"nodeType":"YulAssignment","src":"809:18:8","value":{"arguments":[{"name":"low","nodeType":"YulIdentifier","src":"820:3:8"},{"name":"a","nodeType":"YulIdentifier","src":"825:1:8"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"817:2:8"},"nodeType":"YulFunctionCall","src":"817:10:8"},"variableNames":[{"name":"high","nodeType":"YulIdentifier","src":"809:4:8"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1069,"isOffset":false,"isSlot":false,"src":"791:1:8","valueSize":1},{"declaration":1069,"isOffset":false,"isSlot":false,"src":"825:1:8","valueSize":1},{"declaration":1071,"isOffset":false,"isSlot":false,"src":"794:1:8","valueSize":1},{"declaration":1074,"isOffset":false,"isSlot":false,"src":"809:4:8","valueSize":1},{"declaration":1076,"isOffset":false,"isSlot":false,"src":"780:3:8","valueSize":1},{"declaration":1076,"isOffset":false,"isSlot":false,"src":"820:3:8","valueSize":1}],"flags":["memory-safe"],"id":1078,"nodeType":"InlineAssembly","src":"741:96:8"}]},"documentation":{"id":1067,"nodeType":"StructuredDocumentation","src":"475:163:8","text":" @dev Return the 512-bit addition of two uint256.\n The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low."},"id":1080,"implemented":true,"kind":"function","modifiers":[],"name":"add512","nameLocation":"652:6:8","nodeType":"FunctionDefinition","parameters":{"id":1072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1069,"mutability":"mutable","name":"a","nameLocation":"667:1:8","nodeType":"VariableDeclaration","scope":1080,"src":"659:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1068,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1071,"mutability":"mutable","name":"b","nameLocation":"678:1:8","nodeType":"VariableDeclaration","scope":1080,"src":"670:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1070,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"658:22:8"},"returnParameters":{"id":1077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1074,"mutability":"mutable","name":"high","nameLocation":"712:4:8","nodeType":"VariableDeclaration","scope":1080,"src":"704:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1073,"name":"uint256","nodeType":"ElementaryTypeName","src":"704:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1076,"mutability":"mutable","name":"low","nameLocation":"726:3:8","nodeType":"VariableDeclaration","scope":1080,"src":"718:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1075,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"703:27:8"},"scope":2675,"src":"643:200:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1093,"nodeType":"Block","src":"1115:462:8","statements":[{"AST":{"nodeType":"YulBlock","src":"1437:134:8","statements":[{"nodeType":"YulVariableDeclaration","src":"1451:30:8","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"1468:1:8"},{"name":"b","nodeType":"YulIdentifier","src":"1471:1:8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1478:1:8","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1474:3:8"},"nodeType":"YulFunctionCall","src":"1474:6:8"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"1461:6:8"},"nodeType":"YulFunctionCall","src":"1461:20:8"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"1455:2:8","type":""}]},{"nodeType":"YulAssignment","src":"1494:16:8","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"1505:1:8"},{"name":"b","nodeType":"YulIdentifier","src":"1508:1:8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1501:3:8"},"nodeType":"YulFunctionCall","src":"1501:9:8"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"1494:3:8"}]},{"nodeType":"YulAssignment","src":"1523:38:8","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"1539:2:8"},{"name":"low","nodeType":"YulIdentifier","src":"1543:3:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1535:3:8"},"nodeType":"YulFunctionCall","src":"1535:12:8"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"1552:2:8"},{"name":"low","nodeType":"YulIdentifier","src":"1556:3:8"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1549:2:8"},"nodeType":"YulFunctionCall","src":"1549:11:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1531:3:8"},"nodeType":"YulFunctionCall","src":"1531:30:8"},"variableNames":[{"name":"high","nodeType":"YulIdentifier","src":"1523:4:8"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1083,"isOffset":false,"isSlot":false,"src":"1468:1:8","valueSize":1},{"declaration":1083,"isOffset":false,"isSlot":false,"src":"1505:1:8","valueSize":1},{"declaration":1085,"isOffset":false,"isSlot":false,"src":"1471:1:8","valueSize":1},{"declaration":1085,"isOffset":false,"isSlot":false,"src":"1508:1:8","valueSize":1},{"declaration":1088,"isOffset":false,"isSlot":false,"src":"1523:4:8","valueSize":1},{"declaration":1090,"isOffset":false,"isSlot":false,"src":"1494:3:8","valueSize":1},{"declaration":1090,"isOffset":false,"isSlot":false,"src":"1543:3:8","valueSize":1},{"declaration":1090,"isOffset":false,"isSlot":false,"src":"1556:3:8","valueSize":1}],"flags":["memory-safe"],"id":1092,"nodeType":"InlineAssembly","src":"1412:159:8"}]},"documentation":{"id":1081,"nodeType":"StructuredDocumentation","src":"849:173:8","text":" @dev Return the 512-bit multiplication of two uint256.\n The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low."},"id":1094,"implemented":true,"kind":"function","modifiers":[],"name":"mul512","nameLocation":"1036:6:8","nodeType":"FunctionDefinition","parameters":{"id":1086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1083,"mutability":"mutable","name":"a","nameLocation":"1051:1:8","nodeType":"VariableDeclaration","scope":1094,"src":"1043:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1082,"name":"uint256","nodeType":"ElementaryTypeName","src":"1043:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1085,"mutability":"mutable","name":"b","nameLocation":"1062:1:8","nodeType":"VariableDeclaration","scope":1094,"src":"1054:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1084,"name":"uint256","nodeType":"ElementaryTypeName","src":"1054:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1042:22:8"},"returnParameters":{"id":1091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1088,"mutability":"mutable","name":"high","nameLocation":"1096:4:8","nodeType":"VariableDeclaration","scope":1094,"src":"1088:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1087,"name":"uint256","nodeType":"ElementaryTypeName","src":"1088:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1090,"mutability":"mutable","name":"low","nameLocation":"1110:3:8","nodeType":"VariableDeclaration","scope":1094,"src":"1102:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1089,"name":"uint256","nodeType":"ElementaryTypeName","src":"1102:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1087:27:8"},"scope":2675,"src":"1027:550:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1128,"nodeType":"Block","src":"1784:149:8","statements":[{"id":1127,"nodeType":"UncheckedBlock","src":"1794:133:8","statements":[{"assignments":[1107],"declarations":[{"constant":false,"id":1107,"mutability":"mutable","name":"c","nameLocation":"1826:1:8","nodeType":"VariableDeclaration","scope":1127,"src":"1818:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1106,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1111,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1108,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1097,"src":"1830:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1109,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1099,"src":"1834:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1830:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1818:17:8"},{"expression":{"id":1116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1112,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1102,"src":"1849:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1113,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1107,"src":"1859:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1114,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1097,"src":"1864:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1859:6:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1849:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1117,"nodeType":"ExpressionStatement","src":"1849:16:8"},{"expression":{"id":1125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1118,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1104,"src":"1879:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1119,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1107,"src":"1888:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":1122,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1102,"src":"1908:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1120,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4440,"src":"1892:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4440_$","typeString":"type(library SafeCast)"}},"id":1121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1901:6:8","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4439,"src":"1892:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1892:24:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1888:28:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1879:37:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1126,"nodeType":"ExpressionStatement","src":"1879:37:8"}]}]},"documentation":{"id":1095,"nodeType":"StructuredDocumentation","src":"1583:105:8","text":" @dev Returns the addition of two unsigned integers, with a success flag (no overflow)."},"id":1129,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"1702:6:8","nodeType":"FunctionDefinition","parameters":{"id":1100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1097,"mutability":"mutable","name":"a","nameLocation":"1717:1:8","nodeType":"VariableDeclaration","scope":1129,"src":"1709:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1096,"name":"uint256","nodeType":"ElementaryTypeName","src":"1709:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1099,"mutability":"mutable","name":"b","nameLocation":"1728:1:8","nodeType":"VariableDeclaration","scope":1129,"src":"1720:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1098,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1708:22:8"},"returnParameters":{"id":1105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1102,"mutability":"mutable","name":"success","nameLocation":"1759:7:8","nodeType":"VariableDeclaration","scope":1129,"src":"1754:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1101,"name":"bool","nodeType":"ElementaryTypeName","src":"1754:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1104,"mutability":"mutable","name":"result","nameLocation":"1776:6:8","nodeType":"VariableDeclaration","scope":1129,"src":"1768:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1103,"name":"uint256","nodeType":"ElementaryTypeName","src":"1768:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1753:30:8"},"scope":2675,"src":"1693:240:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1163,"nodeType":"Block","src":"2143:149:8","statements":[{"id":1162,"nodeType":"UncheckedBlock","src":"2153:133:8","statements":[{"assignments":[1142],"declarations":[{"constant":false,"id":1142,"mutability":"mutable","name":"c","nameLocation":"2185:1:8","nodeType":"VariableDeclaration","scope":1162,"src":"2177:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1141,"name":"uint256","nodeType":"ElementaryTypeName","src":"2177:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1146,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1143,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1132,"src":"2189:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1144,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1134,"src":"2193:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2189:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2177:17:8"},{"expression":{"id":1151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1147,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1137,"src":"2208:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1148,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1142,"src":"2218:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":1149,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1132,"src":"2223:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2218:6:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2208:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1152,"nodeType":"ExpressionStatement","src":"2208:16:8"},{"expression":{"id":1160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1153,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"2238:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1154,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1142,"src":"2247:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":1157,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1137,"src":"2267:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1155,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4440,"src":"2251:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4440_$","typeString":"type(library SafeCast)"}},"id":1156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2260:6:8","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4439,"src":"2251:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2251:24:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2247:28:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2238:37:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1161,"nodeType":"ExpressionStatement","src":"2238:37:8"}]}]},"documentation":{"id":1130,"nodeType":"StructuredDocumentation","src":"1939:108:8","text":" @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow)."},"id":1164,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"2061:6:8","nodeType":"FunctionDefinition","parameters":{"id":1135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1132,"mutability":"mutable","name":"a","nameLocation":"2076:1:8","nodeType":"VariableDeclaration","scope":1164,"src":"2068:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1131,"name":"uint256","nodeType":"ElementaryTypeName","src":"2068:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1134,"mutability":"mutable","name":"b","nameLocation":"2087:1:8","nodeType":"VariableDeclaration","scope":1164,"src":"2079:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1133,"name":"uint256","nodeType":"ElementaryTypeName","src":"2079:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2067:22:8"},"returnParameters":{"id":1140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1137,"mutability":"mutable","name":"success","nameLocation":"2118:7:8","nodeType":"VariableDeclaration","scope":1164,"src":"2113:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1136,"name":"bool","nodeType":"ElementaryTypeName","src":"2113:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1139,"mutability":"mutable","name":"result","nameLocation":"2135:6:8","nodeType":"VariableDeclaration","scope":1164,"src":"2127:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1138,"name":"uint256","nodeType":"ElementaryTypeName","src":"2127:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2112:30:8"},"scope":2675,"src":"2052:240:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1193,"nodeType":"Block","src":"2505:391:8","statements":[{"id":1192,"nodeType":"UncheckedBlock","src":"2515:375:8","statements":[{"assignments":[1177],"declarations":[{"constant":false,"id":1177,"mutability":"mutable","name":"c","nameLocation":"2547:1:8","nodeType":"VariableDeclaration","scope":1192,"src":"2539:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1176,"name":"uint256","nodeType":"ElementaryTypeName","src":"2539:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1181,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1178,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"2551:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1179,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"2555:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2551:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2539:17:8"},{"AST":{"nodeType":"YulBlock","src":"2595:188:8","statements":[{"nodeType":"YulAssignment","src":"2727:42:8","value":{"arguments":[{"arguments":[{"arguments":[{"name":"c","nodeType":"YulIdentifier","src":"2748:1:8"},{"name":"a","nodeType":"YulIdentifier","src":"2751:1:8"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2744:3:8"},"nodeType":"YulFunctionCall","src":"2744:9:8"},{"name":"b","nodeType":"YulIdentifier","src":"2755:1:8"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2741:2:8"},"nodeType":"YulFunctionCall","src":"2741:16:8"},{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"2766:1:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2759:6:8"},"nodeType":"YulFunctionCall","src":"2759:9:8"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2738:2:8"},"nodeType":"YulFunctionCall","src":"2738:31:8"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"2727:7:8"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1167,"isOffset":false,"isSlot":false,"src":"2751:1:8","valueSize":1},{"declaration":1167,"isOffset":false,"isSlot":false,"src":"2766:1:8","valueSize":1},{"declaration":1169,"isOffset":false,"isSlot":false,"src":"2755:1:8","valueSize":1},{"declaration":1177,"isOffset":false,"isSlot":false,"src":"2748:1:8","valueSize":1},{"declaration":1172,"isOffset":false,"isSlot":false,"src":"2727:7:8","valueSize":1}],"flags":["memory-safe"],"id":1182,"nodeType":"InlineAssembly","src":"2570:213:8"},{"expression":{"id":1190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1183,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1174,"src":"2842:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1184,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1177,"src":"2851:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":1187,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1172,"src":"2871:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1185,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4440,"src":"2855:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4440_$","typeString":"type(library SafeCast)"}},"id":1186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2864:6:8","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4439,"src":"2855:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2855:24:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2851:28:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2842:37:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1191,"nodeType":"ExpressionStatement","src":"2842:37:8"}]}]},"documentation":{"id":1165,"nodeType":"StructuredDocumentation","src":"2298:111:8","text":" @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow)."},"id":1194,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"2423:6:8","nodeType":"FunctionDefinition","parameters":{"id":1170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1167,"mutability":"mutable","name":"a","nameLocation":"2438:1:8","nodeType":"VariableDeclaration","scope":1194,"src":"2430:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1166,"name":"uint256","nodeType":"ElementaryTypeName","src":"2430:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1169,"mutability":"mutable","name":"b","nameLocation":"2449:1:8","nodeType":"VariableDeclaration","scope":1194,"src":"2441:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1168,"name":"uint256","nodeType":"ElementaryTypeName","src":"2441:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2429:22:8"},"returnParameters":{"id":1175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1172,"mutability":"mutable","name":"success","nameLocation":"2480:7:8","nodeType":"VariableDeclaration","scope":1194,"src":"2475:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1171,"name":"bool","nodeType":"ElementaryTypeName","src":"2475:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1174,"mutability":"mutable","name":"result","nameLocation":"2497:6:8","nodeType":"VariableDeclaration","scope":1194,"src":"2489:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1173,"name":"uint256","nodeType":"ElementaryTypeName","src":"2489:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2474:30:8"},"scope":2675,"src":"2414:482:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1214,"nodeType":"Block","src":"3111:231:8","statements":[{"id":1213,"nodeType":"UncheckedBlock","src":"3121:215:8","statements":[{"expression":{"id":1210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1206,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1202,"src":"3145:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1207,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1199,"src":"3155:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3159:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3155:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3145:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1211,"nodeType":"ExpressionStatement","src":"3145:15:8"},{"AST":{"nodeType":"YulBlock","src":"3199:127:8","statements":[{"nodeType":"YulAssignment","src":"3293:19:8","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"3307:1:8"},{"name":"b","nodeType":"YulIdentifier","src":"3310:1:8"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3303:3:8"},"nodeType":"YulFunctionCall","src":"3303:9:8"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3293:6:8"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1197,"isOffset":false,"isSlot":false,"src":"3307:1:8","valueSize":1},{"declaration":1199,"isOffset":false,"isSlot":false,"src":"3310:1:8","valueSize":1},{"declaration":1204,"isOffset":false,"isSlot":false,"src":"3293:6:8","valueSize":1}],"flags":["memory-safe"],"id":1212,"nodeType":"InlineAssembly","src":"3174:152:8"}]}]},"documentation":{"id":1195,"nodeType":"StructuredDocumentation","src":"2902:113:8","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":1215,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"3029:6:8","nodeType":"FunctionDefinition","parameters":{"id":1200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1197,"mutability":"mutable","name":"a","nameLocation":"3044:1:8","nodeType":"VariableDeclaration","scope":1215,"src":"3036:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1196,"name":"uint256","nodeType":"ElementaryTypeName","src":"3036:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1199,"mutability":"mutable","name":"b","nameLocation":"3055:1:8","nodeType":"VariableDeclaration","scope":1215,"src":"3047:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1198,"name":"uint256","nodeType":"ElementaryTypeName","src":"3047:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3035:22:8"},"returnParameters":{"id":1205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1202,"mutability":"mutable","name":"success","nameLocation":"3086:7:8","nodeType":"VariableDeclaration","scope":1215,"src":"3081:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1201,"name":"bool","nodeType":"ElementaryTypeName","src":"3081:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1204,"mutability":"mutable","name":"result","nameLocation":"3103:6:8","nodeType":"VariableDeclaration","scope":1215,"src":"3095:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1203,"name":"uint256","nodeType":"ElementaryTypeName","src":"3095:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3080:30:8"},"scope":2675,"src":"3020:322:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1235,"nodeType":"Block","src":"3567:231:8","statements":[{"id":1234,"nodeType":"UncheckedBlock","src":"3577:215:8","statements":[{"expression":{"id":1231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1227,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1223,"src":"3601:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1228,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1220,"src":"3611:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3615:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3611:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3601:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1232,"nodeType":"ExpressionStatement","src":"3601:15:8"},{"AST":{"nodeType":"YulBlock","src":"3655:127:8","statements":[{"nodeType":"YulAssignment","src":"3749:19:8","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"3763:1:8"},{"name":"b","nodeType":"YulIdentifier","src":"3766:1:8"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"3759:3:8"},"nodeType":"YulFunctionCall","src":"3759:9:8"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3749:6:8"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1218,"isOffset":false,"isSlot":false,"src":"3763:1:8","valueSize":1},{"declaration":1220,"isOffset":false,"isSlot":false,"src":"3766:1:8","valueSize":1},{"declaration":1225,"isOffset":false,"isSlot":false,"src":"3749:6:8","valueSize":1}],"flags":["memory-safe"],"id":1233,"nodeType":"InlineAssembly","src":"3630:152:8"}]}]},"documentation":{"id":1216,"nodeType":"StructuredDocumentation","src":"3348:123:8","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":1236,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"3485:6:8","nodeType":"FunctionDefinition","parameters":{"id":1221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1218,"mutability":"mutable","name":"a","nameLocation":"3500:1:8","nodeType":"VariableDeclaration","scope":1236,"src":"3492:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1217,"name":"uint256","nodeType":"ElementaryTypeName","src":"3492:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1220,"mutability":"mutable","name":"b","nameLocation":"3511:1:8","nodeType":"VariableDeclaration","scope":1236,"src":"3503:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1219,"name":"uint256","nodeType":"ElementaryTypeName","src":"3503:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3491:22:8"},"returnParameters":{"id":1226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1223,"mutability":"mutable","name":"success","nameLocation":"3542:7:8","nodeType":"VariableDeclaration","scope":1236,"src":"3537:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1222,"name":"bool","nodeType":"ElementaryTypeName","src":"3537:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1225,"mutability":"mutable","name":"result","nameLocation":"3559:6:8","nodeType":"VariableDeclaration","scope":1236,"src":"3551:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1224,"name":"uint256","nodeType":"ElementaryTypeName","src":"3551:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3536:30:8"},"scope":2675,"src":"3476:322:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1265,"nodeType":"Block","src":"3989:122:8","statements":[{"assignments":[1247,1249],"declarations":[{"constant":false,"id":1247,"mutability":"mutable","name":"success","nameLocation":"4005:7:8","nodeType":"VariableDeclaration","scope":1265,"src":"4000:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1246,"name":"bool","nodeType":"ElementaryTypeName","src":"4000:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1249,"mutability":"mutable","name":"result","nameLocation":"4022:6:8","nodeType":"VariableDeclaration","scope":1265,"src":"4014:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1248,"name":"uint256","nodeType":"ElementaryTypeName","src":"4014:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1254,"initialValue":{"arguments":[{"id":1251,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1239,"src":"4039:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1252,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1241,"src":"4042:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1250,"name":"tryAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1129,"src":"4032:6:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":1253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4032:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"3999:45:8"},{"expression":{"arguments":[{"id":1256,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1247,"src":"4069:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1257,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1249,"src":"4078:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":1260,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4091:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1259,"name":"uint256","nodeType":"ElementaryTypeName","src":"4091:7:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":1258,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4086:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4086:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1262,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4100:3:8","memberName":"max","nodeType":"MemberAccess","src":"4086:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1255,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1343,"src":"4061:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":1263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4061:43:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1245,"id":1264,"nodeType":"Return","src":"4054:50:8"}]},"documentation":{"id":1237,"nodeType":"StructuredDocumentation","src":"3804:103:8","text":" @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":1266,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingAdd","nameLocation":"3921:13:8","nodeType":"FunctionDefinition","parameters":{"id":1242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1239,"mutability":"mutable","name":"a","nameLocation":"3943:1:8","nodeType":"VariableDeclaration","scope":1266,"src":"3935:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1238,"name":"uint256","nodeType":"ElementaryTypeName","src":"3935:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1241,"mutability":"mutable","name":"b","nameLocation":"3954:1:8","nodeType":"VariableDeclaration","scope":1266,"src":"3946:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1240,"name":"uint256","nodeType":"ElementaryTypeName","src":"3946:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3934:22:8"},"returnParameters":{"id":1245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1244,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1266,"src":"3980:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1243,"name":"uint256","nodeType":"ElementaryTypeName","src":"3980:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3979:9:8"},"scope":2675,"src":"3912:199:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1285,"nodeType":"Block","src":"4294:73:8","statements":[{"assignments":[null,1277],"declarations":[null,{"constant":false,"id":1277,"mutability":"mutable","name":"result","nameLocation":"4315:6:8","nodeType":"VariableDeclaration","scope":1285,"src":"4307:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1276,"name":"uint256","nodeType":"ElementaryTypeName","src":"4307:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1282,"initialValue":{"arguments":[{"id":1279,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1269,"src":"4332:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1280,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1271,"src":"4335:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1278,"name":"trySub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1164,"src":"4325:6:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":1281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4325:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4304:33:8"},{"expression":{"id":1283,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1277,"src":"4354:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1275,"id":1284,"nodeType":"Return","src":"4347:13:8"}]},"documentation":{"id":1267,"nodeType":"StructuredDocumentation","src":"4117:95:8","text":" @dev Unsigned saturating subtraction, bounds to zero instead of overflowing."},"id":1286,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingSub","nameLocation":"4226:13:8","nodeType":"FunctionDefinition","parameters":{"id":1272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1269,"mutability":"mutable","name":"a","nameLocation":"4248:1:8","nodeType":"VariableDeclaration","scope":1286,"src":"4240:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1268,"name":"uint256","nodeType":"ElementaryTypeName","src":"4240:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1271,"mutability":"mutable","name":"b","nameLocation":"4259:1:8","nodeType":"VariableDeclaration","scope":1286,"src":"4251:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1270,"name":"uint256","nodeType":"ElementaryTypeName","src":"4251:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4239:22:8"},"returnParameters":{"id":1275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1274,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1286,"src":"4285:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1273,"name":"uint256","nodeType":"ElementaryTypeName","src":"4285:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4284:9:8"},"scope":2675,"src":"4217:150:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1315,"nodeType":"Block","src":"4564:122:8","statements":[{"assignments":[1297,1299],"declarations":[{"constant":false,"id":1297,"mutability":"mutable","name":"success","nameLocation":"4580:7:8","nodeType":"VariableDeclaration","scope":1315,"src":"4575:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1296,"name":"bool","nodeType":"ElementaryTypeName","src":"4575:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1299,"mutability":"mutable","name":"result","nameLocation":"4597:6:8","nodeType":"VariableDeclaration","scope":1315,"src":"4589:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1298,"name":"uint256","nodeType":"ElementaryTypeName","src":"4589:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1304,"initialValue":{"arguments":[{"id":1301,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1289,"src":"4614:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1302,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1291,"src":"4617:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1300,"name":"tryMul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1194,"src":"4607:6:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":1303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4607:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4574:45:8"},{"expression":{"arguments":[{"id":1306,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1297,"src":"4644:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1307,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1299,"src":"4653:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":1310,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4666:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1309,"name":"uint256","nodeType":"ElementaryTypeName","src":"4666:7:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":1308,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4661:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4661:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1312,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4675:3:8","memberName":"max","nodeType":"MemberAccess","src":"4661:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1305,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1343,"src":"4636:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":1313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4636:43:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1295,"id":1314,"nodeType":"Return","src":"4629:50:8"}]},"documentation":{"id":1287,"nodeType":"StructuredDocumentation","src":"4373:109:8","text":" @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":1316,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingMul","nameLocation":"4496:13:8","nodeType":"FunctionDefinition","parameters":{"id":1292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1289,"mutability":"mutable","name":"a","nameLocation":"4518:1:8","nodeType":"VariableDeclaration","scope":1316,"src":"4510:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1288,"name":"uint256","nodeType":"ElementaryTypeName","src":"4510:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1291,"mutability":"mutable","name":"b","nameLocation":"4529:1:8","nodeType":"VariableDeclaration","scope":1316,"src":"4521:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1290,"name":"uint256","nodeType":"ElementaryTypeName","src":"4521:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4509:22:8"},"returnParameters":{"id":1295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1294,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1316,"src":"4555:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1293,"name":"uint256","nodeType":"ElementaryTypeName","src":"4555:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4554:9:8"},"scope":2675,"src":"4487:199:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1342,"nodeType":"Block","src":"5158:207:8","statements":[{"id":1341,"nodeType":"UncheckedBlock","src":"5168:191:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1328,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1323,"src":"5306:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1329,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1321,"src":"5312:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":1330,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1323,"src":"5316:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5312:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1332,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5311:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":1335,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1319,"src":"5337:9:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1333,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4440,"src":"5321:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4440_$","typeString":"type(library SafeCast)"}},"id":1334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5330:6:8","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4439,"src":"5321:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5321:26:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5311:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1338,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5310:38:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5306:42:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1327,"id":1340,"nodeType":"Return","src":"5299:49:8"}]}]},"documentation":{"id":1317,"nodeType":"StructuredDocumentation","src":"4692:374:8","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":1343,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"5080:7:8","nodeType":"FunctionDefinition","parameters":{"id":1324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1319,"mutability":"mutable","name":"condition","nameLocation":"5093:9:8","nodeType":"VariableDeclaration","scope":1343,"src":"5088:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1318,"name":"bool","nodeType":"ElementaryTypeName","src":"5088:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1321,"mutability":"mutable","name":"a","nameLocation":"5112:1:8","nodeType":"VariableDeclaration","scope":1343,"src":"5104:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1320,"name":"uint256","nodeType":"ElementaryTypeName","src":"5104:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1323,"mutability":"mutable","name":"b","nameLocation":"5123:1:8","nodeType":"VariableDeclaration","scope":1343,"src":"5115:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1322,"name":"uint256","nodeType":"ElementaryTypeName","src":"5115:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5087:38:8"},"returnParameters":{"id":1327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1326,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1343,"src":"5149:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1325,"name":"uint256","nodeType":"ElementaryTypeName","src":"5149:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5148:9:8"},"scope":2675,"src":"5071:294:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1361,"nodeType":"Block","src":"5502:44:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1354,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1346,"src":"5527:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1355,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1348,"src":"5531:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5527:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1357,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1346,"src":"5534:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1358,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1348,"src":"5537:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1353,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1343,"src":"5519:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":1359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5519:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1352,"id":1360,"nodeType":"Return","src":"5512:27:8"}]},"documentation":{"id":1344,"nodeType":"StructuredDocumentation","src":"5371:59:8","text":" @dev Returns the largest of two numbers."},"id":1362,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"5444:3:8","nodeType":"FunctionDefinition","parameters":{"id":1349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1346,"mutability":"mutable","name":"a","nameLocation":"5456:1:8","nodeType":"VariableDeclaration","scope":1362,"src":"5448:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1345,"name":"uint256","nodeType":"ElementaryTypeName","src":"5448:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1348,"mutability":"mutable","name":"b","nameLocation":"5467:1:8","nodeType":"VariableDeclaration","scope":1362,"src":"5459:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1347,"name":"uint256","nodeType":"ElementaryTypeName","src":"5459:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5447:22:8"},"returnParameters":{"id":1352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1351,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1362,"src":"5493:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1350,"name":"uint256","nodeType":"ElementaryTypeName","src":"5493:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5492:9:8"},"scope":2675,"src":"5435:111:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1380,"nodeType":"Block","src":"5684:44:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1373,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1365,"src":"5709:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1374,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1367,"src":"5713:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5709:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1376,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1365,"src":"5716:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1377,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1367,"src":"5719:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1372,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1343,"src":"5701:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":1378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5701:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1371,"id":1379,"nodeType":"Return","src":"5694:27:8"}]},"documentation":{"id":1363,"nodeType":"StructuredDocumentation","src":"5552:60:8","text":" @dev Returns the smallest of two numbers."},"id":1381,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"5626:3:8","nodeType":"FunctionDefinition","parameters":{"id":1368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1365,"mutability":"mutable","name":"a","nameLocation":"5638:1:8","nodeType":"VariableDeclaration","scope":1381,"src":"5630:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1364,"name":"uint256","nodeType":"ElementaryTypeName","src":"5630:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1367,"mutability":"mutable","name":"b","nameLocation":"5649:1:8","nodeType":"VariableDeclaration","scope":1381,"src":"5641:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1366,"name":"uint256","nodeType":"ElementaryTypeName","src":"5641:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5629:22:8"},"returnParameters":{"id":1371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1370,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1381,"src":"5675:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1369,"name":"uint256","nodeType":"ElementaryTypeName","src":"5675:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:9:8"},"scope":2675,"src":"5617:111:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1403,"nodeType":"Block","src":"5912:82:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1391,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"5967:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":1392,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1386,"src":"5971:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5967:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1394,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5966:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1395,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"5977:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":1396,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1386,"src":"5981:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5977:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1398,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5976:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":1399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5986:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"5976:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5966:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1390,"id":1402,"nodeType":"Return","src":"5959:28:8"}]},"documentation":{"id":1382,"nodeType":"StructuredDocumentation","src":"5734:102:8","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":1404,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"5850:7:8","nodeType":"FunctionDefinition","parameters":{"id":1387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1384,"mutability":"mutable","name":"a","nameLocation":"5866:1:8","nodeType":"VariableDeclaration","scope":1404,"src":"5858:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1383,"name":"uint256","nodeType":"ElementaryTypeName","src":"5858:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1386,"mutability":"mutable","name":"b","nameLocation":"5877:1:8","nodeType":"VariableDeclaration","scope":1404,"src":"5869:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1385,"name":"uint256","nodeType":"ElementaryTypeName","src":"5869:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5857:22:8"},"returnParameters":{"id":1390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1389,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1404,"src":"5903:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1388,"name":"uint256","nodeType":"ElementaryTypeName","src":"5903:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5902:9:8"},"scope":2675,"src":"5841:153:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1444,"nodeType":"Block","src":"6286:633:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1414,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1409,"src":"6300:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6305:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6300:6:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1425,"nodeType":"IfStatement","src":"6296:150:8","trueBody":{"id":1424,"nodeType":"Block","src":"6308:138:8","statements":[{"expression":{"arguments":[{"expression":{"id":1420,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"6412:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$985_$","typeString":"type(library Panic)"}},"id":1421,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6418:16:8","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":952,"src":"6412:22:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1417,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"6400:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$985_$","typeString":"type(library Panic)"}},"id":1419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6406:5:8","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":984,"src":"6400:11:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6400:35:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1423,"nodeType":"ExpressionStatement","src":"6400:35:8"}]}},{"id":1443,"nodeType":"UncheckedBlock","src":"6829:84:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1428,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1407,"src":"6876:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6880:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6876:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1426,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4440,"src":"6860:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4440_$","typeString":"type(library SafeCast)"}},"id":1427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6869:6:8","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4439,"src":"6860:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6860:22:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1432,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1407,"src":"6887:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6891:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6887:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1435,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6886:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1436,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1409,"src":"6896:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6886:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6900:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6886:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1440,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6885:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6860:42:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1413,"id":1442,"nodeType":"Return","src":"6853:49:8"}]}]},"documentation":{"id":1405,"nodeType":"StructuredDocumentation","src":"6000:210:8","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":1445,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"6224:7:8","nodeType":"FunctionDefinition","parameters":{"id":1410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1407,"mutability":"mutable","name":"a","nameLocation":"6240:1:8","nodeType":"VariableDeclaration","scope":1445,"src":"6232:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1406,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1409,"mutability":"mutable","name":"b","nameLocation":"6251:1:8","nodeType":"VariableDeclaration","scope":1445,"src":"6243:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1408,"name":"uint256","nodeType":"ElementaryTypeName","src":"6243:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6231:22:8"},"returnParameters":{"id":1413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1412,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1445,"src":"6277:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1411,"name":"uint256","nodeType":"ElementaryTypeName","src":"6277:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6276:9:8"},"scope":2675,"src":"6215:704:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1580,"nodeType":"Block","src":"7340:3585:8","statements":[{"id":1579,"nodeType":"UncheckedBlock","src":"7350:3569:8","statements":[{"assignments":[1458,1460],"declarations":[{"constant":false,"id":1458,"mutability":"mutable","name":"high","nameLocation":"7383:4:8","nodeType":"VariableDeclaration","scope":1579,"src":"7375:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1457,"name":"uint256","nodeType":"ElementaryTypeName","src":"7375:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1460,"mutability":"mutable","name":"low","nameLocation":"7397:3:8","nodeType":"VariableDeclaration","scope":1579,"src":"7389:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1459,"name":"uint256","nodeType":"ElementaryTypeName","src":"7389:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1465,"initialValue":{"arguments":[{"id":1462,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1448,"src":"7411:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1463,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1450,"src":"7414:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1461,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1094,"src":"7404:6:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":1464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7404:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"7374:42:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1466,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"7498:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7506:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7498:9:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1474,"nodeType":"IfStatement","src":"7494:365:8","trueBody":{"id":1473,"nodeType":"Block","src":"7509:350:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1469,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1460,"src":"7827:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1470,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1452,"src":"7833:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7827:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1456,"id":1472,"nodeType":"Return","src":"7820:24:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1475,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1452,"src":"7969:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":1476,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"7984:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7969:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1493,"nodeType":"IfStatement","src":"7965:142:8","trueBody":{"id":1492,"nodeType":"Block","src":"7990:117:8","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1482,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1452,"src":"8028:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8043:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8028:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":1485,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"8046:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$985_$","typeString":"type(library Panic)"}},"id":1486,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8052:16:8","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":952,"src":"8046:22:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1487,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"8070:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$985_$","typeString":"type(library Panic)"}},"id":1488,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8076:14:8","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":948,"src":"8070:20:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1481,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1343,"src":"8020:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":1489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8020:71:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1478,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"8008:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$985_$","typeString":"type(library Panic)"}},"id":1480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8014:5:8","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":984,"src":"8008:11:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8008:84:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1491,"nodeType":"ExpressionStatement","src":"8008:84:8"}]}},{"assignments":[1495],"declarations":[{"constant":false,"id":1495,"mutability":"mutable","name":"remainder","nameLocation":"8367:9:8","nodeType":"VariableDeclaration","scope":1579,"src":"8359:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1494,"name":"uint256","nodeType":"ElementaryTypeName","src":"8359:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1496,"nodeType":"VariableDeclarationStatement","src":"8359:17:8"},{"AST":{"nodeType":"YulBlock","src":"8415:283:8","statements":[{"nodeType":"YulAssignment","src":"8484:38:8","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8504:1:8"},{"name":"y","nodeType":"YulIdentifier","src":"8507:1:8"},{"name":"denominator","nodeType":"YulIdentifier","src":"8510:11:8"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"8497:6:8"},"nodeType":"YulFunctionCall","src":"8497:25:8"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"8484:9:8"}]},{"nodeType":"YulAssignment","src":"8604:37:8","value":{"arguments":[{"name":"high","nodeType":"YulIdentifier","src":"8616:4:8"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"8625:9:8"},{"name":"low","nodeType":"YulIdentifier","src":"8636:3:8"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8622:2:8"},"nodeType":"YulFunctionCall","src":"8622:18:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8612:3:8"},"nodeType":"YulFunctionCall","src":"8612:29:8"},"variableNames":[{"name":"high","nodeType":"YulIdentifier","src":"8604:4:8"}]},{"nodeType":"YulAssignment","src":"8658:26:8","value":{"arguments":[{"name":"low","nodeType":"YulIdentifier","src":"8669:3:8"},{"name":"remainder","nodeType":"YulIdentifier","src":"8674:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8665:3:8"},"nodeType":"YulFunctionCall","src":"8665:19:8"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"8658:3:8"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1452,"isOffset":false,"isSlot":false,"src":"8510:11:8","valueSize":1},{"declaration":1458,"isOffset":false,"isSlot":false,"src":"8604:4:8","valueSize":1},{"declaration":1458,"isOffset":false,"isSlot":false,"src":"8616:4:8","valueSize":1},{"declaration":1460,"isOffset":false,"isSlot":false,"src":"8636:3:8","valueSize":1},{"declaration":1460,"isOffset":false,"isSlot":false,"src":"8658:3:8","valueSize":1},{"declaration":1460,"isOffset":false,"isSlot":false,"src":"8669:3:8","valueSize":1},{"declaration":1495,"isOffset":false,"isSlot":false,"src":"8484:9:8","valueSize":1},{"declaration":1495,"isOffset":false,"isSlot":false,"src":"8625:9:8","valueSize":1},{"declaration":1495,"isOffset":false,"isSlot":false,"src":"8674:9:8","valueSize":1},{"declaration":1448,"isOffset":false,"isSlot":false,"src":"8504:1:8","valueSize":1},{"declaration":1450,"isOffset":false,"isSlot":false,"src":"8507:1:8","valueSize":1}],"flags":["memory-safe"],"id":1497,"nodeType":"InlineAssembly","src":"8390:308:8"},{"assignments":[1499],"declarations":[{"constant":false,"id":1499,"mutability":"mutable","name":"twos","nameLocation":"8910:4:8","nodeType":"VariableDeclaration","scope":1579,"src":"8902:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1498,"name":"uint256","nodeType":"ElementaryTypeName","src":"8902:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1506,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1500,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1452,"src":"8917:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":1501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8932:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1502,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1452,"src":"8936:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8932:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1504,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8931:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8917:31:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8902:46:8"},{"AST":{"nodeType":"YulBlock","src":"8987:359:8","statements":[{"nodeType":"YulAssignment","src":"9052:37:8","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"9071:11:8"},{"name":"twos","nodeType":"YulIdentifier","src":"9084:4:8"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9067:3:8"},"nodeType":"YulFunctionCall","src":"9067:22:8"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"9052:11:8"}]},{"nodeType":"YulAssignment","src":"9153:21:8","value":{"arguments":[{"name":"low","nodeType":"YulIdentifier","src":"9164:3:8"},{"name":"twos","nodeType":"YulIdentifier","src":"9169:4:8"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9160:3:8"},"nodeType":"YulFunctionCall","src":"9160:14:8"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"9153:3:8"}]},{"nodeType":"YulAssignment","src":"9293:39:8","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9313:1:8","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"9316:4:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9309:3:8"},"nodeType":"YulFunctionCall","src":"9309:12:8"},{"name":"twos","nodeType":"YulIdentifier","src":"9323:4:8"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9305:3:8"},"nodeType":"YulFunctionCall","src":"9305:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"9330:1:8","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9301:3:8"},"nodeType":"YulFunctionCall","src":"9301:31:8"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"9293:4:8"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1452,"isOffset":false,"isSlot":false,"src":"9052:11:8","valueSize":1},{"declaration":1452,"isOffset":false,"isSlot":false,"src":"9071:11:8","valueSize":1},{"declaration":1460,"isOffset":false,"isSlot":false,"src":"9153:3:8","valueSize":1},{"declaration":1460,"isOffset":false,"isSlot":false,"src":"9164:3:8","valueSize":1},{"declaration":1499,"isOffset":false,"isSlot":false,"src":"9084:4:8","valueSize":1},{"declaration":1499,"isOffset":false,"isSlot":false,"src":"9169:4:8","valueSize":1},{"declaration":1499,"isOffset":false,"isSlot":false,"src":"9293:4:8","valueSize":1},{"declaration":1499,"isOffset":false,"isSlot":false,"src":"9316:4:8","valueSize":1},{"declaration":1499,"isOffset":false,"isSlot":false,"src":"9323:4:8","valueSize":1}],"flags":["memory-safe"],"id":1507,"nodeType":"InlineAssembly","src":"8962:384:8"},{"expression":{"id":1512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1508,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1460,"src":"9409:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1509,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"9416:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1510,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1499,"src":"9423:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9416:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9409:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1513,"nodeType":"ExpressionStatement","src":"9409:18:8"},{"assignments":[1515],"declarations":[{"constant":false,"id":1515,"mutability":"mutable","name":"inverse","nameLocation":"9770:7:8","nodeType":"VariableDeclaration","scope":1579,"src":"9762:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1514,"name":"uint256","nodeType":"ElementaryTypeName","src":"9762:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1522,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":1516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9781:1:8","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1517,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1452,"src":"9785:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9781:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1519,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9780:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":1520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9800:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9780:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9762:39:8"},{"expression":{"id":1529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1523,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1515,"src":"10018:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10029:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1525,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1452,"src":"10033:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1526,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1515,"src":"10047:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10033:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10029:25:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10018:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1530,"nodeType":"ExpressionStatement","src":"10018:36:8"},{"expression":{"id":1537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1531,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1515,"src":"10088:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10099:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1533,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1452,"src":"10103:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1534,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1515,"src":"10117:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10099:25:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10088:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1538,"nodeType":"ExpressionStatement","src":"10088:36:8"},{"expression":{"id":1545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1539,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1515,"src":"10160:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10171:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1541,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1452,"src":"10175:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1542,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1515,"src":"10189:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10175:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10171:25:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10160:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1546,"nodeType":"ExpressionStatement","src":"10160:36:8"},{"expression":{"id":1553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1547,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1515,"src":"10231:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10242:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1549,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1452,"src":"10246:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1550,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1515,"src":"10260:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10246:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10242:25:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10231:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1554,"nodeType":"ExpressionStatement","src":"10231:36:8"},{"expression":{"id":1561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1555,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1515,"src":"10304:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10315:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1557,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1452,"src":"10319:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1558,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1515,"src":"10333:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10319:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10315:25:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10304:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1562,"nodeType":"ExpressionStatement","src":"10304:36:8"},{"expression":{"id":1569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1563,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1515,"src":"10378:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10389:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1565,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1452,"src":"10393:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1566,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1515,"src":"10407:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10393:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10389:25:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10378:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1570,"nodeType":"ExpressionStatement","src":"10378:36:8"},{"expression":{"id":1575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1571,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1455,"src":"10859:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1572,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1460,"src":"10868:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1573,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1515,"src":"10874:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10868:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10859:22:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1576,"nodeType":"ExpressionStatement","src":"10859:22:8"},{"expression":{"id":1577,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1455,"src":"10902:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1456,"id":1578,"nodeType":"Return","src":"10895:13:8"}]}]},"documentation":{"id":1446,"nodeType":"StructuredDocumentation","src":"6925:312:8","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":1581,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"7251:6:8","nodeType":"FunctionDefinition","parameters":{"id":1453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1448,"mutability":"mutable","name":"x","nameLocation":"7266:1:8","nodeType":"VariableDeclaration","scope":1581,"src":"7258:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1447,"name":"uint256","nodeType":"ElementaryTypeName","src":"7258:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1450,"mutability":"mutable","name":"y","nameLocation":"7277:1:8","nodeType":"VariableDeclaration","scope":1581,"src":"7269:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1449,"name":"uint256","nodeType":"ElementaryTypeName","src":"7269:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1452,"mutability":"mutable","name":"denominator","nameLocation":"7288:11:8","nodeType":"VariableDeclaration","scope":1581,"src":"7280:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1451,"name":"uint256","nodeType":"ElementaryTypeName","src":"7280:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7257:43:8"},"returnParameters":{"id":1456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1455,"mutability":"mutable","name":"result","nameLocation":"7332:6:8","nodeType":"VariableDeclaration","scope":1581,"src":"7324:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1454,"name":"uint256","nodeType":"ElementaryTypeName","src":"7324:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7323:16:8"},"scope":2675,"src":"7242:3683:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1617,"nodeType":"Block","src":"11164:128:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1597,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1584,"src":"11188:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1598,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1586,"src":"11191:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1599,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1588,"src":"11194:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1596,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[1581,1618],"referencedDeclaration":1581,"src":"11181:6:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11181:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1604,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1591,"src":"11242:8:8","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1066","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1066","typeString":"enum Math.Rounding"}],"id":1603,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2674,"src":"11225:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$1066_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":1605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11225:26:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1607,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1584,"src":"11262:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1608,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1586,"src":"11265:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1609,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1588,"src":"11268:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1606,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"11255:6:8","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11255:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11283:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11255:29:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11225:59:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1601,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4440,"src":"11209:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4440_$","typeString":"type(library SafeCast)"}},"id":1602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11218:6:8","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4439,"src":"11209:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11209:76:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11181:104:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1595,"id":1616,"nodeType":"Return","src":"11174:111:8"}]},"documentation":{"id":1582,"nodeType":"StructuredDocumentation","src":"10931:118:8","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":1618,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"11063:6:8","nodeType":"FunctionDefinition","parameters":{"id":1592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1584,"mutability":"mutable","name":"x","nameLocation":"11078:1:8","nodeType":"VariableDeclaration","scope":1618,"src":"11070:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1583,"name":"uint256","nodeType":"ElementaryTypeName","src":"11070:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1586,"mutability":"mutable","name":"y","nameLocation":"11089:1:8","nodeType":"VariableDeclaration","scope":1618,"src":"11081:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1585,"name":"uint256","nodeType":"ElementaryTypeName","src":"11081:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1588,"mutability":"mutable","name":"denominator","nameLocation":"11100:11:8","nodeType":"VariableDeclaration","scope":1618,"src":"11092:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1587,"name":"uint256","nodeType":"ElementaryTypeName","src":"11092:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1591,"mutability":"mutable","name":"rounding","nameLocation":"11122:8:8","nodeType":"VariableDeclaration","scope":1618,"src":"11113:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1066","typeString":"enum Math.Rounding"},"typeName":{"id":1590,"nodeType":"UserDefinedTypeName","pathNode":{"id":1589,"name":"Rounding","nameLocations":["11113:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":1066,"src":"11113:8:8"},"referencedDeclaration":1066,"src":"11113:8:8","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1066","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11069:62:8"},"returnParameters":{"id":1595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1594,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1618,"src":"11155:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1593,"name":"uint256","nodeType":"ElementaryTypeName","src":"11155:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11154:9:8"},"scope":2675,"src":"11054:238:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1667,"nodeType":"Block","src":"11500:245:8","statements":[{"id":1666,"nodeType":"UncheckedBlock","src":"11510:229:8","statements":[{"assignments":[1631,1633],"declarations":[{"constant":false,"id":1631,"mutability":"mutable","name":"high","nameLocation":"11543:4:8","nodeType":"VariableDeclaration","scope":1666,"src":"11535:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1630,"name":"uint256","nodeType":"ElementaryTypeName","src":"11535:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1633,"mutability":"mutable","name":"low","nameLocation":"11557:3:8","nodeType":"VariableDeclaration","scope":1666,"src":"11549:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1632,"name":"uint256","nodeType":"ElementaryTypeName","src":"11549:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1638,"initialValue":{"arguments":[{"id":1635,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1621,"src":"11571:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1636,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1623,"src":"11574:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1634,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1094,"src":"11564:6:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":1637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11564:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11534:42:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1639,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1631,"src":"11594:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11602:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":1641,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1625,"src":"11607:1:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11602:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11594:14:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1652,"nodeType":"IfStatement","src":"11590:86:8","trueBody":{"id":1651,"nodeType":"Block","src":"11610:66:8","statements":[{"expression":{"arguments":[{"expression":{"id":1647,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"11640:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$985_$","typeString":"type(library Panic)"}},"id":1648,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11646:14:8","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":948,"src":"11640:20:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1644,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"11628:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$985_$","typeString":"type(library Panic)"}},"id":1646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11634:5:8","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":984,"src":"11628:11:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11628:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1650,"nodeType":"ExpressionStatement","src":"11628:33:8"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1653,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1631,"src":"11697:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":1656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"323536","id":1654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11706:3:8","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1655,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1625,"src":"11712:1:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11706:7:8","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"id":1657,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11705:9:8","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"11697:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1659,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11696:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1660,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"11719:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":1661,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1625,"src":"11726:1:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11719:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1663,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11718:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11696:32:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1629,"id":1665,"nodeType":"Return","src":"11689:39:8"}]}]},"documentation":{"id":1619,"nodeType":"StructuredDocumentation","src":"11298:111:8","text":" @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256."},"id":1668,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11423:6:8","nodeType":"FunctionDefinition","parameters":{"id":1626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1621,"mutability":"mutable","name":"x","nameLocation":"11438:1:8","nodeType":"VariableDeclaration","scope":1668,"src":"11430:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1620,"name":"uint256","nodeType":"ElementaryTypeName","src":"11430:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1623,"mutability":"mutable","name":"y","nameLocation":"11449:1:8","nodeType":"VariableDeclaration","scope":1668,"src":"11441:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1622,"name":"uint256","nodeType":"ElementaryTypeName","src":"11441:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1625,"mutability":"mutable","name":"n","nameLocation":"11458:1:8","nodeType":"VariableDeclaration","scope":1668,"src":"11452:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1624,"name":"uint8","nodeType":"ElementaryTypeName","src":"11452:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"11429:31:8"},"returnParameters":{"id":1629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1628,"mutability":"mutable","name":"result","nameLocation":"11492:6:8","nodeType":"VariableDeclaration","scope":1668,"src":"11484:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1627,"name":"uint256","nodeType":"ElementaryTypeName","src":"11484:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11483:16:8"},"scope":2675,"src":"11414:331:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1706,"nodeType":"Block","src":"11963:113:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1684,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1671,"src":"11987:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1685,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1673,"src":"11990:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1686,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1675,"src":"11993:1:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1683,"name":"mulShr","nodeType":"Identifier","overloadedDeclarations":[1668,1707],"referencedDeclaration":1668,"src":"11980:6:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint8_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint8) pure returns (uint256)"}},"id":1687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11980:15:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1691,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1678,"src":"12031:8:8","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1066","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1066","typeString":"enum Math.Rounding"}],"id":1690,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2674,"src":"12014:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$1066_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":1692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12014:26:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1694,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1671,"src":"12051:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1695,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1673,"src":"12054:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12057:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":1697,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1675,"src":"12062:1:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12057:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1693,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"12044:6:8","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12044:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12067:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12044:24:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12014:54:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1688,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4440,"src":"11998:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4440_$","typeString":"type(library SafeCast)"}},"id":1689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12007:6:8","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4439,"src":"11998:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11998:71:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11980:89:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1682,"id":1705,"nodeType":"Return","src":"11973:96:8"}]},"documentation":{"id":1669,"nodeType":"StructuredDocumentation","src":"11751:109:8","text":" @dev Calculates x * y >> n with full precision, following the selected rounding direction."},"id":1707,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11874:6:8","nodeType":"FunctionDefinition","parameters":{"id":1679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1671,"mutability":"mutable","name":"x","nameLocation":"11889:1:8","nodeType":"VariableDeclaration","scope":1707,"src":"11881:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1670,"name":"uint256","nodeType":"ElementaryTypeName","src":"11881:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1673,"mutability":"mutable","name":"y","nameLocation":"11900:1:8","nodeType":"VariableDeclaration","scope":1707,"src":"11892:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1672,"name":"uint256","nodeType":"ElementaryTypeName","src":"11892:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1675,"mutability":"mutable","name":"n","nameLocation":"11909:1:8","nodeType":"VariableDeclaration","scope":1707,"src":"11903:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1674,"name":"uint8","nodeType":"ElementaryTypeName","src":"11903:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1678,"mutability":"mutable","name":"rounding","nameLocation":"11921:8:8","nodeType":"VariableDeclaration","scope":1707,"src":"11912:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1066","typeString":"enum Math.Rounding"},"typeName":{"id":1677,"nodeType":"UserDefinedTypeName","pathNode":{"id":1676,"name":"Rounding","nameLocations":["11912:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":1066,"src":"11912:8:8"},"referencedDeclaration":1066,"src":"11912:8:8","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1066","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11880:50:8"},"returnParameters":{"id":1682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1681,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1707,"src":"11954:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1680,"name":"uint256","nodeType":"ElementaryTypeName","src":"11954:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11953:9:8"},"scope":2675,"src":"11865:211:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1803,"nodeType":"Block","src":"12710:1849:8","statements":[{"id":1802,"nodeType":"UncheckedBlock","src":"12720:1833:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1717,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1712,"src":"12748:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12753:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12748:6:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1722,"nodeType":"IfStatement","src":"12744:20:8","trueBody":{"expression":{"hexValue":"30","id":1720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1716,"id":1721,"nodeType":"Return","src":"12756:8:8"}},{"assignments":[1724],"declarations":[{"constant":false,"id":1724,"mutability":"mutable","name":"remainder","nameLocation":"13243:9:8","nodeType":"VariableDeclaration","scope":1802,"src":"13235:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1723,"name":"uint256","nodeType":"ElementaryTypeName","src":"13235:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1728,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1725,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1710,"src":"13255:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":1726,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1712,"src":"13259:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13255:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13235:25:8"},{"assignments":[1730],"declarations":[{"constant":false,"id":1730,"mutability":"mutable","name":"gcd","nameLocation":"13282:3:8","nodeType":"VariableDeclaration","scope":1802,"src":"13274:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1729,"name":"uint256","nodeType":"ElementaryTypeName","src":"13274:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1732,"initialValue":{"id":1731,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1712,"src":"13288:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13274:15:8"},{"assignments":[1734],"declarations":[{"constant":false,"id":1734,"mutability":"mutable","name":"x","nameLocation":"13432:1:8","nodeType":"VariableDeclaration","scope":1802,"src":"13425:8:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1733,"name":"int256","nodeType":"ElementaryTypeName","src":"13425:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":1736,"initialValue":{"hexValue":"30","id":1735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13436:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13425:12:8"},{"assignments":[1738],"declarations":[{"constant":false,"id":1738,"mutability":"mutable","name":"y","nameLocation":"13458:1:8","nodeType":"VariableDeclaration","scope":1802,"src":"13451:8:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1737,"name":"int256","nodeType":"ElementaryTypeName","src":"13451:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":1740,"initialValue":{"hexValue":"31","id":1739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13462:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"13451:12:8"},{"body":{"id":1777,"nodeType":"Block","src":"13501:882:8","statements":[{"assignments":[1745],"declarations":[{"constant":false,"id":1745,"mutability":"mutable","name":"quotient","nameLocation":"13527:8:8","nodeType":"VariableDeclaration","scope":1777,"src":"13519:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1744,"name":"uint256","nodeType":"ElementaryTypeName","src":"13519:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1749,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1746,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1730,"src":"13538:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1747,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1724,"src":"13544:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13538:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13519:34:8"},{"expression":{"id":1760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":1750,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1730,"src":"13573:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1751,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1724,"src":"13578:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1752,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13572:16:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":1753,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1724,"src":"13678:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1754,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1730,"src":"13923:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1755,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1724,"src":"13929:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1756,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1745,"src":"13941:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13929:20:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13923:26:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1759,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13591:376:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"13572:395:8","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1761,"nodeType":"ExpressionStatement","src":"13572:395:8"},{"expression":{"id":1775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":1762,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1734,"src":"13987:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":1763,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1738,"src":"13990:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1764,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13986:6:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":1765,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1738,"src":"14072:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1766,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1734,"src":"14326:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1767,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1738,"src":"14330:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":1770,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1745,"src":"14341:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1769,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14334:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":1768,"name":"int256","nodeType":"ElementaryTypeName","src":"14334:6:8","typeDescriptions":{}}},"id":1771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14334:16:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14330:20:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14326:24:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1774,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13995:373:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"13986:382:8","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1776,"nodeType":"ExpressionStatement","src":"13986:382:8"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1741,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1724,"src":"13485:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13498:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13485:14:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1778,"nodeType":"WhileStatement","src":"13478:905:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1779,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1730,"src":"14401:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":1780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14408:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14401:8:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1784,"nodeType":"IfStatement","src":"14397:22:8","trueBody":{"expression":{"hexValue":"30","id":1782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14418:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1716,"id":1783,"nodeType":"Return","src":"14411:8:8"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1786,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1734,"src":"14470:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":1787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14474:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14470:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1789,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1712,"src":"14477:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":1793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"14489:2:8","subExpression":{"id":1792,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1734,"src":"14490:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1791,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14481:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1790,"name":"uint256","nodeType":"ElementaryTypeName","src":"14481:7:8","typeDescriptions":{}}},"id":1794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14481:11:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14477:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":1798,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1734,"src":"14502:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1797,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14494:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1796,"name":"uint256","nodeType":"ElementaryTypeName","src":"14494:7:8","typeDescriptions":{}}},"id":1799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14494:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1785,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1343,"src":"14462:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":1800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14462:43:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1716,"id":1801,"nodeType":"Return","src":"14455:50:8"}]}]},"documentation":{"id":1708,"nodeType":"StructuredDocumentation","src":"12082:553:8","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":1804,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"12649:6:8","nodeType":"FunctionDefinition","parameters":{"id":1713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1710,"mutability":"mutable","name":"a","nameLocation":"12664:1:8","nodeType":"VariableDeclaration","scope":1804,"src":"12656:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1709,"name":"uint256","nodeType":"ElementaryTypeName","src":"12656:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1712,"mutability":"mutable","name":"n","nameLocation":"12675:1:8","nodeType":"VariableDeclaration","scope":1804,"src":"12667:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1711,"name":"uint256","nodeType":"ElementaryTypeName","src":"12667:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12655:22:8"},"returnParameters":{"id":1716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1715,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1804,"src":"12701:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1714,"name":"uint256","nodeType":"ElementaryTypeName","src":"12701:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12700:9:8"},"scope":2675,"src":"12640:1919:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1824,"nodeType":"Block","src":"15159:82:8","statements":[{"id":1823,"nodeType":"UncheckedBlock","src":"15169:66:8","statements":[{"expression":{"arguments":[{"id":1816,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1807,"src":"15212:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1817,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1809,"src":"15215:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":1818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15219:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15215:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1820,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1809,"src":"15222:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1814,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2675,"src":"15200:4:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$2675_$","typeString":"type(library Math)"}},"id":1815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15205:6:8","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":1861,"src":"15200:11:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":1821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15200:24:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1813,"id":1822,"nodeType":"Return","src":"15193:31:8"}]}]},"documentation":{"id":1805,"nodeType":"StructuredDocumentation","src":"14565:514:8","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":1825,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"15093:11:8","nodeType":"FunctionDefinition","parameters":{"id":1810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1807,"mutability":"mutable","name":"a","nameLocation":"15113:1:8","nodeType":"VariableDeclaration","scope":1825,"src":"15105:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1806,"name":"uint256","nodeType":"ElementaryTypeName","src":"15105:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1809,"mutability":"mutable","name":"p","nameLocation":"15124:1:8","nodeType":"VariableDeclaration","scope":1825,"src":"15116:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1808,"name":"uint256","nodeType":"ElementaryTypeName","src":"15116:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15104:22:8"},"returnParameters":{"id":1813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1812,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1825,"src":"15150:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1811,"name":"uint256","nodeType":"ElementaryTypeName","src":"15150:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15149:9:8"},"scope":2675,"src":"15084:157:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1860,"nodeType":"Block","src":"16011:174:8","statements":[{"assignments":[1838,1840],"declarations":[{"constant":false,"id":1838,"mutability":"mutable","name":"success","nameLocation":"16027:7:8","nodeType":"VariableDeclaration","scope":1860,"src":"16022:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1837,"name":"bool","nodeType":"ElementaryTypeName","src":"16022:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1840,"mutability":"mutable","name":"result","nameLocation":"16044:6:8","nodeType":"VariableDeclaration","scope":1860,"src":"16036:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1839,"name":"uint256","nodeType":"ElementaryTypeName","src":"16036:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1846,"initialValue":{"arguments":[{"id":1842,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1828,"src":"16064:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1843,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1830,"src":"16067:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1844,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1832,"src":"16070:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1841,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[1885,1967],"referencedDeclaration":1885,"src":"16054:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":1845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"16021:51:8"},{"condition":{"id":1848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16086:8:8","subExpression":{"id":1847,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1838,"src":"16087:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1857,"nodeType":"IfStatement","src":"16082:74:8","trueBody":{"id":1856,"nodeType":"Block","src":"16096:60:8","statements":[{"expression":{"arguments":[{"expression":{"id":1852,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"16122:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$985_$","typeString":"type(library Panic)"}},"id":1853,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16128:16:8","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":952,"src":"16122:22:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1849,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"16110:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$985_$","typeString":"type(library Panic)"}},"id":1851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16116:5:8","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":984,"src":"16110:11:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16110:35:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1855,"nodeType":"ExpressionStatement","src":"16110:35:8"}]}},{"expression":{"id":1858,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1840,"src":"16172:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1836,"id":1859,"nodeType":"Return","src":"16165:13:8"}]},"documentation":{"id":1826,"nodeType":"StructuredDocumentation","src":"15247:678:8","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":1861,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"15939:6:8","nodeType":"FunctionDefinition","parameters":{"id":1833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1828,"mutability":"mutable","name":"b","nameLocation":"15954:1:8","nodeType":"VariableDeclaration","scope":1861,"src":"15946:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1827,"name":"uint256","nodeType":"ElementaryTypeName","src":"15946:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1830,"mutability":"mutable","name":"e","nameLocation":"15965:1:8","nodeType":"VariableDeclaration","scope":1861,"src":"15957:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1829,"name":"uint256","nodeType":"ElementaryTypeName","src":"15957:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1832,"mutability":"mutable","name":"m","nameLocation":"15976:1:8","nodeType":"VariableDeclaration","scope":1861,"src":"15968:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1831,"name":"uint256","nodeType":"ElementaryTypeName","src":"15968:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15945:33:8"},"returnParameters":{"id":1836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1835,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1861,"src":"16002:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1834,"name":"uint256","nodeType":"ElementaryTypeName","src":"16002:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16001:9:8"},"scope":2675,"src":"15930:255:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1884,"nodeType":"Block","src":"17039:1493:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1875,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1868,"src":"17053:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17058:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17053:6:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1882,"nodeType":"IfStatement","src":"17049:29:8","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17069:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17076:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1880,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"17068:10:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1874,"id":1881,"nodeType":"Return","src":"17061:17:8"}},{"AST":{"nodeType":"YulBlock","src":"17113:1413:8","statements":[{"nodeType":"YulVariableDeclaration","src":"17127:22:8","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17144:4:8","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17138:5:8"},"nodeType":"YulFunctionCall","src":"17138:11:8"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"17131:3:8","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18057:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"18062:4:8","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18050:6:8"},"nodeType":"YulFunctionCall","src":"18050:17:8"},"nodeType":"YulExpressionStatement","src":"18050:17:8"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18091:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"18096:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18087:3:8"},"nodeType":"YulFunctionCall","src":"18087:14:8"},{"kind":"number","nodeType":"YulLiteral","src":"18103:4:8","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18080:6:8"},"nodeType":"YulFunctionCall","src":"18080:28:8"},"nodeType":"YulExpressionStatement","src":"18080:28:8"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18132:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"18137:4:8","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18128:3:8"},"nodeType":"YulFunctionCall","src":"18128:14:8"},{"kind":"number","nodeType":"YulLiteral","src":"18144:4:8","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18121:6:8"},"nodeType":"YulFunctionCall","src":"18121:28:8"},"nodeType":"YulExpressionStatement","src":"18121:28:8"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18173:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"18178:4:8","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18169:3:8"},"nodeType":"YulFunctionCall","src":"18169:14:8"},{"name":"b","nodeType":"YulIdentifier","src":"18185:1:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18162:6:8"},"nodeType":"YulFunctionCall","src":"18162:25:8"},"nodeType":"YulExpressionStatement","src":"18162:25:8"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18211:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"18216:4:8","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18207:3:8"},"nodeType":"YulFunctionCall","src":"18207:14:8"},{"name":"e","nodeType":"YulIdentifier","src":"18223:1:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18200:6:8"},"nodeType":"YulFunctionCall","src":"18200:25:8"},"nodeType":"YulExpressionStatement","src":"18200:25:8"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18249:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"18254:4:8","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18245:3:8"},"nodeType":"YulFunctionCall","src":"18245:14:8"},{"name":"m","nodeType":"YulIdentifier","src":"18261:1:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18238:6:8"},"nodeType":"YulFunctionCall","src":"18238:25:8"},"nodeType":"YulExpressionStatement","src":"18238:25:8"},{"nodeType":"YulAssignment","src":"18425:57:8","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"18447:3:8"},"nodeType":"YulFunctionCall","src":"18447:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"18454:4:8","type":"","value":"0x05"},{"name":"ptr","nodeType":"YulIdentifier","src":"18460:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"18465:4:8","type":"","value":"0xc0"},{"kind":"number","nodeType":"YulLiteral","src":"18471:4:8","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"18477:4:8","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"18436:10:8"},"nodeType":"YulFunctionCall","src":"18436:46:8"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"18425:7:8"}]},{"nodeType":"YulAssignment","src":"18495:21:8","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18511:4:8","type":"","value":"0x00"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18505:5:8"},"nodeType":"YulFunctionCall","src":"18505:11:8"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"18495:6:8"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1864,"isOffset":false,"isSlot":false,"src":"18185:1:8","valueSize":1},{"declaration":1866,"isOffset":false,"isSlot":false,"src":"18223:1:8","valueSize":1},{"declaration":1868,"isOffset":false,"isSlot":false,"src":"18261:1:8","valueSize":1},{"declaration":1873,"isOffset":false,"isSlot":false,"src":"18495:6:8","valueSize":1},{"declaration":1871,"isOffset":false,"isSlot":false,"src":"18425:7:8","valueSize":1}],"flags":["memory-safe"],"id":1883,"nodeType":"InlineAssembly","src":"17088:1438:8"}]},"documentation":{"id":1862,"nodeType":"StructuredDocumentation","src":"16191:738:8","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":1885,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16943:9:8","nodeType":"FunctionDefinition","parameters":{"id":1869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1864,"mutability":"mutable","name":"b","nameLocation":"16961:1:8","nodeType":"VariableDeclaration","scope":1885,"src":"16953:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1863,"name":"uint256","nodeType":"ElementaryTypeName","src":"16953:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1866,"mutability":"mutable","name":"e","nameLocation":"16972:1:8","nodeType":"VariableDeclaration","scope":1885,"src":"16964:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1865,"name":"uint256","nodeType":"ElementaryTypeName","src":"16964:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1868,"mutability":"mutable","name":"m","nameLocation":"16983:1:8","nodeType":"VariableDeclaration","scope":1885,"src":"16975:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1867,"name":"uint256","nodeType":"ElementaryTypeName","src":"16975:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16952:33:8"},"returnParameters":{"id":1874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1871,"mutability":"mutable","name":"success","nameLocation":"17014:7:8","nodeType":"VariableDeclaration","scope":1885,"src":"17009:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1870,"name":"bool","nodeType":"ElementaryTypeName","src":"17009:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1873,"mutability":"mutable","name":"result","nameLocation":"17031:6:8","nodeType":"VariableDeclaration","scope":1885,"src":"17023:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1872,"name":"uint256","nodeType":"ElementaryTypeName","src":"17023:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17008:30:8"},"scope":2675,"src":"16934:1598:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1920,"nodeType":"Block","src":"18729:179:8","statements":[{"assignments":[1898,1900],"declarations":[{"constant":false,"id":1898,"mutability":"mutable","name":"success","nameLocation":"18745:7:8","nodeType":"VariableDeclaration","scope":1920,"src":"18740:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1897,"name":"bool","nodeType":"ElementaryTypeName","src":"18740:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1900,"mutability":"mutable","name":"result","nameLocation":"18767:6:8","nodeType":"VariableDeclaration","scope":1920,"src":"18754:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1899,"name":"bytes","nodeType":"ElementaryTypeName","src":"18754:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1906,"initialValue":{"arguments":[{"id":1902,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1888,"src":"18787:1:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1903,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1890,"src":"18790:1:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1904,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1892,"src":"18793:1:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1901,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[1885,1967],"referencedDeclaration":1967,"src":"18777:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":1905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18777:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"18739:56:8"},{"condition":{"id":1908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"18809:8:8","subExpression":{"id":1907,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1898,"src":"18810:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1917,"nodeType":"IfStatement","src":"18805:74:8","trueBody":{"id":1916,"nodeType":"Block","src":"18819:60:8","statements":[{"expression":{"arguments":[{"expression":{"id":1912,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"18845:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$985_$","typeString":"type(library Panic)"}},"id":1913,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"18851:16:8","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":952,"src":"18845:22:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1909,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"18833:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$985_$","typeString":"type(library Panic)"}},"id":1911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18839:5:8","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":984,"src":"18833:11:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18833:35:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1915,"nodeType":"ExpressionStatement","src":"18833:35:8"}]}},{"expression":{"id":1918,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1900,"src":"18895:6:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1896,"id":1919,"nodeType":"Return","src":"18888:13:8"}]},"documentation":{"id":1886,"nodeType":"StructuredDocumentation","src":"18538:85:8","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":1921,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"18637:6:8","nodeType":"FunctionDefinition","parameters":{"id":1893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1888,"mutability":"mutable","name":"b","nameLocation":"18657:1:8","nodeType":"VariableDeclaration","scope":1921,"src":"18644:14:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1887,"name":"bytes","nodeType":"ElementaryTypeName","src":"18644:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1890,"mutability":"mutable","name":"e","nameLocation":"18673:1:8","nodeType":"VariableDeclaration","scope":1921,"src":"18660:14:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1889,"name":"bytes","nodeType":"ElementaryTypeName","src":"18660:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1892,"mutability":"mutable","name":"m","nameLocation":"18689:1:8","nodeType":"VariableDeclaration","scope":1921,"src":"18676:14:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1891,"name":"bytes","nodeType":"ElementaryTypeName","src":"18676:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18643:48:8"},"returnParameters":{"id":1896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1895,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1921,"src":"18715:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1894,"name":"bytes","nodeType":"ElementaryTypeName","src":"18715:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18714:14:8"},"scope":2675,"src":"18628:280:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1966,"nodeType":"Block","src":"19162:771:8","statements":[{"condition":{"arguments":[{"id":1936,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1928,"src":"19187:1:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1935,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2000,"src":"19176:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":1937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19176:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1945,"nodeType":"IfStatement","src":"19172:47:8","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"19199:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":1941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19216:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1940,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"19206:9:8","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1939,"name":"bytes","nodeType":"ElementaryTypeName","src":"19210:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19206:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":1943,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19198:21:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":1934,"id":1944,"nodeType":"Return","src":"19191:28:8"}},{"assignments":[1947],"declarations":[{"constant":false,"id":1947,"mutability":"mutable","name":"mLen","nameLocation":"19238:4:8","nodeType":"VariableDeclaration","scope":1966,"src":"19230:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1946,"name":"uint256","nodeType":"ElementaryTypeName","src":"19230:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1950,"initialValue":{"expression":{"id":1948,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1928,"src":"19245:1:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19247:6:8","memberName":"length","nodeType":"MemberAccess","src":"19245:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19230:23:8"},{"expression":{"id":1963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1951,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1933,"src":"19335:6:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":1954,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1924,"src":"19361:1:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19363:6:8","memberName":"length","nodeType":"MemberAccess","src":"19361:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1956,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1926,"src":"19371:1:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19373:6:8","memberName":"length","nodeType":"MemberAccess","src":"19371:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1958,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1947,"src":"19381:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1959,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1924,"src":"19387:1:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1960,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1926,"src":"19390:1:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1961,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1928,"src":"19393:1:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1952,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"19344:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1953,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19348:12:8","memberName":"encodePacked","nodeType":"MemberAccess","src":"19344:16:8","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19344:51:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"19335:60:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1964,"nodeType":"ExpressionStatement","src":"19335:60:8"},{"AST":{"nodeType":"YulBlock","src":"19431:496:8","statements":[{"nodeType":"YulVariableDeclaration","src":"19445:32:8","value":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"19464:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"19472:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19460:3:8"},"nodeType":"YulFunctionCall","src":"19460:17:8"},"variables":[{"name":"dataPtr","nodeType":"YulTypedName","src":"19449:7:8","type":""}]},{"nodeType":"YulAssignment","src":"19567:73:8","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"19589:3:8"},"nodeType":"YulFunctionCall","src":"19589:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"19596:4:8","type":"","value":"0x05"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"19602:7:8"},{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"19617:6:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19611:5:8"},"nodeType":"YulFunctionCall","src":"19611:13:8"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"19626:7:8"},{"name":"mLen","nodeType":"YulIdentifier","src":"19635:4:8"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"19578:10:8"},"nodeType":"YulFunctionCall","src":"19578:62:8"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"19567:7:8"}]},{"expression":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"19796:6:8"},{"name":"mLen","nodeType":"YulIdentifier","src":"19804:4:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19789:6:8"},"nodeType":"YulFunctionCall","src":"19789:20:8"},"nodeType":"YulExpressionStatement","src":"19789:20:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19892:4:8","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"19902:7:8"},{"name":"mLen","nodeType":"YulIdentifier","src":"19911:4:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19898:3:8"},"nodeType":"YulFunctionCall","src":"19898:18:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19885:6:8"},"nodeType":"YulFunctionCall","src":"19885:32:8"},"nodeType":"YulExpressionStatement","src":"19885:32:8"}]},"evmVersion":"paris","externalReferences":[{"declaration":1947,"isOffset":false,"isSlot":false,"src":"19635:4:8","valueSize":1},{"declaration":1947,"isOffset":false,"isSlot":false,"src":"19804:4:8","valueSize":1},{"declaration":1947,"isOffset":false,"isSlot":false,"src":"19911:4:8","valueSize":1},{"declaration":1933,"isOffset":false,"isSlot":false,"src":"19464:6:8","valueSize":1},{"declaration":1933,"isOffset":false,"isSlot":false,"src":"19617:6:8","valueSize":1},{"declaration":1933,"isOffset":false,"isSlot":false,"src":"19796:6:8","valueSize":1},{"declaration":1931,"isOffset":false,"isSlot":false,"src":"19567:7:8","valueSize":1}],"flags":["memory-safe"],"id":1965,"nodeType":"InlineAssembly","src":"19406:521:8"}]},"documentation":{"id":1922,"nodeType":"StructuredDocumentation","src":"18914:88:8","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":1967,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"19016:9:8","nodeType":"FunctionDefinition","parameters":{"id":1929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1924,"mutability":"mutable","name":"b","nameLocation":"19048:1:8","nodeType":"VariableDeclaration","scope":1967,"src":"19035:14:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1923,"name":"bytes","nodeType":"ElementaryTypeName","src":"19035:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1926,"mutability":"mutable","name":"e","nameLocation":"19072:1:8","nodeType":"VariableDeclaration","scope":1967,"src":"19059:14:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1925,"name":"bytes","nodeType":"ElementaryTypeName","src":"19059:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1928,"mutability":"mutable","name":"m","nameLocation":"19096:1:8","nodeType":"VariableDeclaration","scope":1967,"src":"19083:14:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1927,"name":"bytes","nodeType":"ElementaryTypeName","src":"19083:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19025:78:8"},"returnParameters":{"id":1934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1931,"mutability":"mutable","name":"success","nameLocation":"19132:7:8","nodeType":"VariableDeclaration","scope":1967,"src":"19127:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1930,"name":"bool","nodeType":"ElementaryTypeName","src":"19127:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1933,"mutability":"mutable","name":"result","nameLocation":"19154:6:8","nodeType":"VariableDeclaration","scope":1967,"src":"19141:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1932,"name":"bytes","nodeType":"ElementaryTypeName","src":"19141:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19126:35:8"},"scope":2675,"src":"19007:926:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1999,"nodeType":"Block","src":"20088:176:8","statements":[{"body":{"id":1995,"nodeType":"Block","src":"20145:92:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":1990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1986,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1970,"src":"20163:9:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1988,"indexExpression":{"id":1987,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1976,"src":"20173:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20163:12:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20179:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20163:17:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1994,"nodeType":"IfStatement","src":"20159:68:8","trueBody":{"id":1993,"nodeType":"Block","src":"20182:45:8","statements":[{"expression":{"hexValue":"66616c7365","id":1991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20207:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":1974,"id":1992,"nodeType":"Return","src":"20200:12:8"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1979,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1976,"src":"20118:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1980,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1970,"src":"20122:9:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20132:6:8","memberName":"length","nodeType":"MemberAccess","src":"20122:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20118:20:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1996,"initializationExpression":{"assignments":[1976],"declarations":[{"constant":false,"id":1976,"mutability":"mutable","name":"i","nameLocation":"20111:1:8","nodeType":"VariableDeclaration","scope":1996,"src":"20103:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1975,"name":"uint256","nodeType":"ElementaryTypeName","src":"20103:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1978,"initialValue":{"hexValue":"30","id":1977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20115:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"20103:13:8"},"loopExpression":{"expression":{"id":1984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"20140:3:8","subExpression":{"id":1983,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1976,"src":"20142:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1985,"nodeType":"ExpressionStatement","src":"20140:3:8"},"nodeType":"ForStatement","src":"20098:139:8"},{"expression":{"hexValue":"74727565","id":1997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20253:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1974,"id":1998,"nodeType":"Return","src":"20246:11:8"}]},"documentation":{"id":1968,"nodeType":"StructuredDocumentation","src":"19939:72:8","text":" @dev Returns whether the provided byte array is zero."},"id":2000,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"20025:10:8","nodeType":"FunctionDefinition","parameters":{"id":1971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1970,"mutability":"mutable","name":"byteArray","nameLocation":"20049:9:8","nodeType":"VariableDeclaration","scope":2000,"src":"20036:22:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1969,"name":"bytes","nodeType":"ElementaryTypeName","src":"20036:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"20035:24:8"},"returnParameters":{"id":1974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1973,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2000,"src":"20082:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1972,"name":"bool","nodeType":"ElementaryTypeName","src":"20082:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20081:6:8"},"scope":2675,"src":"20016:248:8","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2218,"nodeType":"Block","src":"20624:5124:8","statements":[{"id":2217,"nodeType":"UncheckedBlock","src":"20634:5108:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2008,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2003,"src":"20728:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":2009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20733:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20728:6:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2014,"nodeType":"IfStatement","src":"20724:53:8","trueBody":{"id":2013,"nodeType":"Block","src":"20736:41:8","statements":[{"expression":{"id":2011,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2003,"src":"20761:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2007,"id":2012,"nodeType":"Return","src":"20754:8:8"}]}},{"assignments":[2016],"declarations":[{"constant":false,"id":2016,"mutability":"mutable","name":"aa","nameLocation":"21712:2:8","nodeType":"VariableDeclaration","scope":2217,"src":"21704:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2015,"name":"uint256","nodeType":"ElementaryTypeName","src":"21704:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2018,"initialValue":{"id":2017,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2003,"src":"21717:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21704:14:8"},{"assignments":[2020],"declarations":[{"constant":false,"id":2020,"mutability":"mutable","name":"xn","nameLocation":"21740:2:8","nodeType":"VariableDeclaration","scope":2217,"src":"21732:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2019,"name":"uint256","nodeType":"ElementaryTypeName","src":"21732:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2022,"initialValue":{"hexValue":"31","id":2021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21745:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"21732:14:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2023,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2016,"src":"21765:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":2026,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21772:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":2025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21777:3:8","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21772:8:8","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":2027,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21771:10:8","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"21765:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2038,"nodeType":"IfStatement","src":"21761:92:8","trueBody":{"id":2037,"nodeType":"Block","src":"21783:70:8","statements":[{"expression":{"id":2031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2029,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2016,"src":"21801:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":2030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21808:3:8","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21801:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2032,"nodeType":"ExpressionStatement","src":"21801:10:8"},{"expression":{"id":2035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2033,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2020,"src":"21829:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":2034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21836:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21829:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2036,"nodeType":"ExpressionStatement","src":"21829:9:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2039,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2016,"src":"21870:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":2042,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21877:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":2041,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21882:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21877:7:8","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":2043,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21876:9:8","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"21870:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2054,"nodeType":"IfStatement","src":"21866:90:8","trueBody":{"id":2053,"nodeType":"Block","src":"21887:69:8","statements":[{"expression":{"id":2047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2045,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2016,"src":"21905:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":2046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21912:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21905:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2048,"nodeType":"ExpressionStatement","src":"21905:9:8"},{"expression":{"id":2051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2049,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2020,"src":"21932:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":2050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21939:2:8","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21932:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2052,"nodeType":"ExpressionStatement","src":"21932:9:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2055,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2016,"src":"21973:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":2058,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21980:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":2057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21985:2:8","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21980:7:8","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":2059,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21979:9:8","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"21973:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2070,"nodeType":"IfStatement","src":"21969:90:8","trueBody":{"id":2069,"nodeType":"Block","src":"21990:69:8","statements":[{"expression":{"id":2063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2061,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2016,"src":"22008:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":2062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22015:2:8","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"22008:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2064,"nodeType":"ExpressionStatement","src":"22008:9:8"},{"expression":{"id":2067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2065,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2020,"src":"22035:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":2066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22042:2:8","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22035:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2068,"nodeType":"ExpressionStatement","src":"22035:9:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2071,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2016,"src":"22076:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":2074,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22083:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":2073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22088:2:8","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22083:7:8","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":2075,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22082:9:8","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"22076:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2086,"nodeType":"IfStatement","src":"22072:89:8","trueBody":{"id":2085,"nodeType":"Block","src":"22093:68:8","statements":[{"expression":{"id":2079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2077,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2016,"src":"22111:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":2078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22118:2:8","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22111:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2080,"nodeType":"ExpressionStatement","src":"22111:9:8"},{"expression":{"id":2083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2081,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2020,"src":"22138:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":2082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22145:1:8","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22138:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2084,"nodeType":"ExpressionStatement","src":"22138:8:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2087,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2016,"src":"22178:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":2090,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22185:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":2089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22190:1:8","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22185:6:8","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":2091,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22184:8:8","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"22178:14:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2102,"nodeType":"IfStatement","src":"22174:87:8","trueBody":{"id":2101,"nodeType":"Block","src":"22194:67:8","statements":[{"expression":{"id":2095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2093,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2016,"src":"22212:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":2094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22219:1:8","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22212:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2096,"nodeType":"ExpressionStatement","src":"22212:8:8"},{"expression":{"id":2099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2097,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2020,"src":"22238:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":2098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22245:1:8","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22238:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2100,"nodeType":"ExpressionStatement","src":"22238:8:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2103,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2016,"src":"22278:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":2106,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22285:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":2105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22290:1:8","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22285:6:8","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":2107,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22284:8:8","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"22278:14:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2118,"nodeType":"IfStatement","src":"22274:87:8","trueBody":{"id":2117,"nodeType":"Block","src":"22294:67:8","statements":[{"expression":{"id":2111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2109,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2016,"src":"22312:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22319:1:8","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22312:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2112,"nodeType":"ExpressionStatement","src":"22312:8:8"},{"expression":{"id":2115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2113,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2020,"src":"22338:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":2114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22345:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22338:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2116,"nodeType":"ExpressionStatement","src":"22338:8:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2119,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2016,"src":"22378:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":2122,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22385:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":2121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22390:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22385:6:8","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":2123,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22384:8:8","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"22378:14:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2130,"nodeType":"IfStatement","src":"22374:61:8","trueBody":{"id":2129,"nodeType":"Block","src":"22394:41:8","statements":[{"expression":{"id":2127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2125,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2020,"src":"22412:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":2126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22419:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22412:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2128,"nodeType":"ExpressionStatement","src":"22412:8:8"}]}},{"expression":{"id":2138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2131,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2020,"src":"22855:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":2132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22861:1:8","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2133,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2020,"src":"22865:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22861:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2135,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22860:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22872:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22860:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22855:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2139,"nodeType":"ExpressionStatement","src":"22855:18:8"},{"expression":{"id":2149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2140,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2020,"src":"24760:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2141,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2020,"src":"24766:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2142,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2003,"src":"24771:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2143,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2020,"src":"24775:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24771:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24766:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2146,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24765:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24782:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24765:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24760:23:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2150,"nodeType":"ExpressionStatement","src":"24760:23:8"},{"expression":{"id":2160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2151,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2020,"src":"24869:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2152,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2020,"src":"24875:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2153,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2003,"src":"24880:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2154,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2020,"src":"24884:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24880:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24875:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2157,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24874:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24891:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24874:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24869:23:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2161,"nodeType":"ExpressionStatement","src":"24869:23:8"},{"expression":{"id":2171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2162,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2020,"src":"24980:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2163,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2020,"src":"24986:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2164,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2003,"src":"24991:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2165,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2020,"src":"24995:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24991:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24986:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2168,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24985:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25002:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24985:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24980:23:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2172,"nodeType":"ExpressionStatement","src":"24980:23:8"},{"expression":{"id":2182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2173,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2020,"src":"25089:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2174,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2020,"src":"25095:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2175,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2003,"src":"25100:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2176,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2020,"src":"25104:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25100:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25095:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2179,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25094:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25111:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25094:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25089:23:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2183,"nodeType":"ExpressionStatement","src":"25089:23:8"},{"expression":{"id":2193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2184,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2020,"src":"25199:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2185,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2020,"src":"25205:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2186,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2003,"src":"25210:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2187,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2020,"src":"25214:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25210:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25205:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2190,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25204:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25221:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25204:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25199:23:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2194,"nodeType":"ExpressionStatement","src":"25199:23:8"},{"expression":{"id":2204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2195,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2020,"src":"25309:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2196,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2020,"src":"25315:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2197,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2003,"src":"25320:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2198,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2020,"src":"25324:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25320:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25315:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2201,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25314:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25331:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25314:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25309:23:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2205,"nodeType":"ExpressionStatement","src":"25309:23:8"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2206,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2020,"src":"25698:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2209,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2020,"src":"25719:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2210,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2003,"src":"25724:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2211,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2020,"src":"25728:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25724:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25719:11:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2207,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4440,"src":"25703:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4440_$","typeString":"type(library SafeCast)"}},"id":2208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25712:6:8","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4439,"src":"25703:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25703:28:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25698:33:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2007,"id":2216,"nodeType":"Return","src":"25691:40:8"}]}]},"documentation":{"id":2001,"nodeType":"StructuredDocumentation","src":"20270:292:8","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":2219,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"20576:4:8","nodeType":"FunctionDefinition","parameters":{"id":2004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2003,"mutability":"mutable","name":"a","nameLocation":"20589:1:8","nodeType":"VariableDeclaration","scope":2219,"src":"20581:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2002,"name":"uint256","nodeType":"ElementaryTypeName","src":"20581:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20580:11:8"},"returnParameters":{"id":2007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2006,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2219,"src":"20615:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2005,"name":"uint256","nodeType":"ElementaryTypeName","src":"20615:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20614:9:8"},"scope":2675,"src":"20567:5181:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2252,"nodeType":"Block","src":"25921:171:8","statements":[{"id":2251,"nodeType":"UncheckedBlock","src":"25931:155:8","statements":[{"assignments":[2231],"declarations":[{"constant":false,"id":2231,"mutability":"mutable","name":"result","nameLocation":"25963:6:8","nodeType":"VariableDeclaration","scope":2251,"src":"25955:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2230,"name":"uint256","nodeType":"ElementaryTypeName","src":"25955:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2235,"initialValue":{"arguments":[{"id":2233,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2222,"src":"25977:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2232,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[2219,2253],"referencedDeclaration":2219,"src":"25972:4:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25972:7:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25955:24:8"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2236,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"26000:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2240,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2225,"src":"26042:8:8","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1066","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1066","typeString":"enum Math.Rounding"}],"id":2239,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2674,"src":"26025:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$1066_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26025:26:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2242,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"26055:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2243,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"26064:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2245,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2222,"src":"26073:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26025:49:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2237,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4440,"src":"26009:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4440_$","typeString":"type(library SafeCast)"}},"id":2238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26018:6:8","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4439,"src":"26009:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26009:66:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26000:75:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2229,"id":2250,"nodeType":"Return","src":"25993:82:8"}]}]},"documentation":{"id":2220,"nodeType":"StructuredDocumentation","src":"25754:86:8","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":2253,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"25854:4:8","nodeType":"FunctionDefinition","parameters":{"id":2226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2222,"mutability":"mutable","name":"a","nameLocation":"25867:1:8","nodeType":"VariableDeclaration","scope":2253,"src":"25859:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2221,"name":"uint256","nodeType":"ElementaryTypeName","src":"25859:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2225,"mutability":"mutable","name":"rounding","nameLocation":"25879:8:8","nodeType":"VariableDeclaration","scope":2253,"src":"25870:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1066","typeString":"enum Math.Rounding"},"typeName":{"id":2224,"nodeType":"UserDefinedTypeName","pathNode":{"id":2223,"name":"Rounding","nameLocations":["25870:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":1066,"src":"25870:8:8"},"referencedDeclaration":1066,"src":"25870:8:8","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1066","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"25858:30:8"},"returnParameters":{"id":2229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2228,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2253,"src":"25912:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2227,"name":"uint256","nodeType":"ElementaryTypeName","src":"25912:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25911:9:8"},"scope":2675,"src":"25845:247:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2343,"nodeType":"Block","src":"26281:2334:8","statements":[{"expression":{"id":2270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2261,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2259,"src":"26363:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2264,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2256,"src":"26383:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":2265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26387:34:8","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"26383:38:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2262,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4440,"src":"26367:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4440_$","typeString":"type(library SafeCast)"}},"id":2263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26376:6:8","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4439,"src":"26367:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26367:55:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":2268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26426:1:8","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"26367:60:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26363:64:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2271,"nodeType":"ExpressionStatement","src":"26363:64:8"},{"expression":{"id":2284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2272,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2259,"src":"26503:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2275,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2256,"src":"26525:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":2276,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2259,"src":"26530:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26525:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2278,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26524:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":2279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26535:18:8","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"26524:29:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2273,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4440,"src":"26508:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4440_$","typeString":"type(library SafeCast)"}},"id":2274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26517:6:8","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4439,"src":"26508:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26508:46:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":2282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26558:1:8","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"26508:51:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26503:56:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2285,"nodeType":"ExpressionStatement","src":"26503:56:8"},{"expression":{"id":2298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2286,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2259,"src":"26634:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2289,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2256,"src":"26656:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":2290,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2259,"src":"26661:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26656:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2292,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26655:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":2293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26666:10:8","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"26655:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2287,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4440,"src":"26639:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4440_$","typeString":"type(library SafeCast)"}},"id":2288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26648:6:8","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4439,"src":"26639:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26639:38:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":2296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26681:1:8","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"26639:43:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26634:48:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2299,"nodeType":"ExpressionStatement","src":"26634:48:8"},{"expression":{"id":2312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2300,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2259,"src":"26757:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2303,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2256,"src":"26779:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":2304,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2259,"src":"26784:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26779:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2306,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26778:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":2307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26789:6:8","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"26778:17:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2301,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4440,"src":"26762:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4440_$","typeString":"type(library SafeCast)"}},"id":2302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26771:6:8","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4439,"src":"26762:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26762:34:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":2310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26800:1:8","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"26762:39:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26757:44:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2313,"nodeType":"ExpressionStatement","src":"26757:44:8"},{"expression":{"id":2326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2314,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2259,"src":"26874:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2317,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2256,"src":"26896:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":2318,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2259,"src":"26901:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26896:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2320,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26895:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":2321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26906:4:8","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"26895:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2315,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4440,"src":"26879:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4440_$","typeString":"type(library SafeCast)"}},"id":2316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26888:6:8","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4439,"src":"26879:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26879:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":2324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26915:1:8","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"26879:37:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26874:42:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2327,"nodeType":"ExpressionStatement","src":"26874:42:8"},{"expression":{"id":2340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2328,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2259,"src":"26988:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2331,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2256,"src":"27010:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":2332,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2259,"src":"27015:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27010:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2334,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"27009:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866","id":2335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27020:3:8","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"27009:14:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2329,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4440,"src":"26993:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4440_$","typeString":"type(library SafeCast)"}},"id":2330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27002:6:8","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4439,"src":"26993:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26993:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":2338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27028:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26993:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26988:41:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2341,"nodeType":"ExpressionStatement","src":"26988:41:8"},{"AST":{"nodeType":"YulBlock","src":"28490:119:8","statements":[{"nodeType":"YulAssignment","src":"28504:95:8","value":{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"28512:1:8"},{"arguments":[{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"28524:1:8"},{"name":"x","nodeType":"YulIdentifier","src":"28527:1:8"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"28520:3:8"},"nodeType":"YulFunctionCall","src":"28520:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"28531:66:8","type":"","value":"0x0000010102020202030303030303030300000000000000000000000000000000"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"28515:4:8"},"nodeType":"YulFunctionCall","src":"28515:83:8"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"28509:2:8"},"nodeType":"YulFunctionCall","src":"28509:90:8"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"28504:1:8"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2259,"isOffset":false,"isSlot":false,"src":"28504:1:8","valueSize":1},{"declaration":2259,"isOffset":false,"isSlot":false,"src":"28512:1:8","valueSize":1},{"declaration":2259,"isOffset":false,"isSlot":false,"src":"28524:1:8","valueSize":1},{"declaration":2256,"isOffset":false,"isSlot":false,"src":"28527:1:8","valueSize":1}],"flags":["memory-safe"],"id":2342,"nodeType":"InlineAssembly","src":"28465:144:8"}]},"documentation":{"id":2254,"nodeType":"StructuredDocumentation","src":"26098:119:8","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":2344,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"26231:4:8","nodeType":"FunctionDefinition","parameters":{"id":2257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2256,"mutability":"mutable","name":"x","nameLocation":"26244:1:8","nodeType":"VariableDeclaration","scope":2344,"src":"26236:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2255,"name":"uint256","nodeType":"ElementaryTypeName","src":"26236:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26235:11:8"},"returnParameters":{"id":2260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2259,"mutability":"mutable","name":"r","nameLocation":"26278:1:8","nodeType":"VariableDeclaration","scope":2344,"src":"26270:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2258,"name":"uint256","nodeType":"ElementaryTypeName","src":"26270:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26269:11:8"},"scope":2675,"src":"26222:2393:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2377,"nodeType":"Block","src":"28848:175:8","statements":[{"id":2376,"nodeType":"UncheckedBlock","src":"28858:159:8","statements":[{"assignments":[2356],"declarations":[{"constant":false,"id":2356,"mutability":"mutable","name":"result","nameLocation":"28890:6:8","nodeType":"VariableDeclaration","scope":2376,"src":"28882:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2355,"name":"uint256","nodeType":"ElementaryTypeName","src":"28882:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2360,"initialValue":{"arguments":[{"id":2358,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2347,"src":"28904:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2357,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[2344,2378],"referencedDeclaration":2344,"src":"28899:4:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28899:11:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"28882:28:8"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2361,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2356,"src":"28931:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2365,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2350,"src":"28973:8:8","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1066","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1066","typeString":"enum Math.Rounding"}],"id":2364,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2674,"src":"28956:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$1066_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28956:26:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28986:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":2368,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2356,"src":"28991:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2370,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2347,"src":"29000:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"28956:49:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2362,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4440,"src":"28940:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4440_$","typeString":"type(library SafeCast)"}},"id":2363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28949:6:8","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4439,"src":"28940:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28940:66:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28931:75:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2354,"id":2375,"nodeType":"Return","src":"28924:82:8"}]}]},"documentation":{"id":2345,"nodeType":"StructuredDocumentation","src":"28621:142:8","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2378,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"28777:4:8","nodeType":"FunctionDefinition","parameters":{"id":2351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2347,"mutability":"mutable","name":"value","nameLocation":"28790:5:8","nodeType":"VariableDeclaration","scope":2378,"src":"28782:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2346,"name":"uint256","nodeType":"ElementaryTypeName","src":"28782:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2350,"mutability":"mutable","name":"rounding","nameLocation":"28806:8:8","nodeType":"VariableDeclaration","scope":2378,"src":"28797:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1066","typeString":"enum Math.Rounding"},"typeName":{"id":2349,"nodeType":"UserDefinedTypeName","pathNode":{"id":2348,"name":"Rounding","nameLocations":["28797:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":1066,"src":"28797:8:8"},"referencedDeclaration":1066,"src":"28797:8:8","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1066","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28781:34:8"},"returnParameters":{"id":2354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2353,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2378,"src":"28839:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2352,"name":"uint256","nodeType":"ElementaryTypeName","src":"28839:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28838:9:8"},"scope":2675,"src":"28768:255:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2506,"nodeType":"Block","src":"29216:854:8","statements":[{"assignments":[2387],"declarations":[{"constant":false,"id":2387,"mutability":"mutable","name":"result","nameLocation":"29234:6:8","nodeType":"VariableDeclaration","scope":2506,"src":"29226:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2386,"name":"uint256","nodeType":"ElementaryTypeName","src":"29226:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2389,"initialValue":{"hexValue":"30","id":2388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29243:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"29226:18:8"},{"id":2503,"nodeType":"UncheckedBlock","src":"29254:787:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2390,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2381,"src":"29282:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":2393,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29291:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":2392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29297:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29291:8:8","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29282:17:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2406,"nodeType":"IfStatement","src":"29278:103:8","trueBody":{"id":2405,"nodeType":"Block","src":"29301:80:8","statements":[{"expression":{"id":2399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2395,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2381,"src":"29319:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":2398,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29328:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":2397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29334:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29328:8:8","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29319:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2400,"nodeType":"ExpressionStatement","src":"29319:17:8"},{"expression":{"id":2403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2401,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2387,"src":"29354:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":2402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29364:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29354:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2404,"nodeType":"ExpressionStatement","src":"29354:12:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2407,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2381,"src":"29398:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":2410,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29407:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":2409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29413:2:8","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29407:8:8","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29398:17:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2423,"nodeType":"IfStatement","src":"29394:103:8","trueBody":{"id":2422,"nodeType":"Block","src":"29417:80:8","statements":[{"expression":{"id":2416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2412,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2381,"src":"29435:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":2415,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29444:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":2414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29450:2:8","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29444:8:8","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29435:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2417,"nodeType":"ExpressionStatement","src":"29435:17:8"},{"expression":{"id":2420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2418,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2387,"src":"29470:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":2419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29480:2:8","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29470:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2421,"nodeType":"ExpressionStatement","src":"29470:12:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2424,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2381,"src":"29514:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":2427,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29523:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":2426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29529:2:8","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29523:8:8","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29514:17:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2440,"nodeType":"IfStatement","src":"29510:103:8","trueBody":{"id":2439,"nodeType":"Block","src":"29533:80:8","statements":[{"expression":{"id":2433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2429,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2381,"src":"29551:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":2432,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29560:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":2431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29566:2:8","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29560:8:8","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29551:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2434,"nodeType":"ExpressionStatement","src":"29551:17:8"},{"expression":{"id":2437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2435,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2387,"src":"29586:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29596:2:8","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29586:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2438,"nodeType":"ExpressionStatement","src":"29586:12:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2441,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2381,"src":"29630:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":2444,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29639:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":2443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29645:1:8","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29639:7:8","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29630:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2457,"nodeType":"IfStatement","src":"29626:100:8","trueBody":{"id":2456,"nodeType":"Block","src":"29648:78:8","statements":[{"expression":{"id":2450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2446,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2381,"src":"29666:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":2449,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29675:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":2448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29681:1:8","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29675:7:8","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29666:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2451,"nodeType":"ExpressionStatement","src":"29666:16:8"},{"expression":{"id":2454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2452,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2387,"src":"29700:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29710:1:8","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29700:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2455,"nodeType":"ExpressionStatement","src":"29700:11:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2458,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2381,"src":"29743:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":2461,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29752:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":2460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29758:1:8","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29752:7:8","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29743:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2474,"nodeType":"IfStatement","src":"29739:100:8","trueBody":{"id":2473,"nodeType":"Block","src":"29761:78:8","statements":[{"expression":{"id":2467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2463,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2381,"src":"29779:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":2466,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29788:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":2465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29794:1:8","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29788:7:8","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29779:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2468,"nodeType":"ExpressionStatement","src":"29779:16:8"},{"expression":{"id":2471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2469,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2387,"src":"29813:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29823:1:8","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29813:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2472,"nodeType":"ExpressionStatement","src":"29813:11:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2475,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2381,"src":"29856:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":2478,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29865:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":2477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29871:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29865:7:8","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29856:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2491,"nodeType":"IfStatement","src":"29852:100:8","trueBody":{"id":2490,"nodeType":"Block","src":"29874:78:8","statements":[{"expression":{"id":2484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2480,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2381,"src":"29892:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":2483,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29901:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":2482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29907:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29901:7:8","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29892:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2485,"nodeType":"ExpressionStatement","src":"29892:16:8"},{"expression":{"id":2488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2486,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2387,"src":"29926:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29936:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29926:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2489,"nodeType":"ExpressionStatement","src":"29926:11:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2492,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2381,"src":"29969:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":2495,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29978:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":2494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29984:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"29978:7:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"29969:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2502,"nodeType":"IfStatement","src":"29965:66:8","trueBody":{"id":2501,"nodeType":"Block","src":"29987:44:8","statements":[{"expression":{"id":2499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2497,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2387,"src":"30005:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30015:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"30005:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2500,"nodeType":"ExpressionStatement","src":"30005:11:8"}]}}]},{"expression":{"id":2504,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2387,"src":"30057:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2385,"id":2505,"nodeType":"Return","src":"30050:13:8"}]},"documentation":{"id":2379,"nodeType":"StructuredDocumentation","src":"29029:120:8","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":2507,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"29163:5:8","nodeType":"FunctionDefinition","parameters":{"id":2382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2381,"mutability":"mutable","name":"value","nameLocation":"29177:5:8","nodeType":"VariableDeclaration","scope":2507,"src":"29169:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2380,"name":"uint256","nodeType":"ElementaryTypeName","src":"29169:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29168:15:8"},"returnParameters":{"id":2385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2384,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2507,"src":"29207:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2383,"name":"uint256","nodeType":"ElementaryTypeName","src":"29207:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29206:9:8"},"scope":2675,"src":"29154:916:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2540,"nodeType":"Block","src":"30305:177:8","statements":[{"id":2539,"nodeType":"UncheckedBlock","src":"30315:161:8","statements":[{"assignments":[2519],"declarations":[{"constant":false,"id":2519,"mutability":"mutable","name":"result","nameLocation":"30347:6:8","nodeType":"VariableDeclaration","scope":2539,"src":"30339:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2518,"name":"uint256","nodeType":"ElementaryTypeName","src":"30339:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2523,"initialValue":{"arguments":[{"id":2521,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2510,"src":"30362:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2520,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[2507,2541],"referencedDeclaration":2507,"src":"30356:5:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30356:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"30339:29:8"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2524,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2519,"src":"30389:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2528,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2513,"src":"30431:8:8","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1066","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1066","typeString":"enum Math.Rounding"}],"id":2527,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2674,"src":"30414:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$1066_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30414:26:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30444:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":2531,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2519,"src":"30450:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2533,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2510,"src":"30459:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:20:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"30414:50:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2525,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4440,"src":"30398:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4440_$","typeString":"type(library SafeCast)"}},"id":2526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30407:6:8","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4439,"src":"30398:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30398:67:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30389:76:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2517,"id":2538,"nodeType":"Return","src":"30382:83:8"}]}]},"documentation":{"id":2508,"nodeType":"StructuredDocumentation","src":"30076:143:8","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2541,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"30233:5:8","nodeType":"FunctionDefinition","parameters":{"id":2514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2510,"mutability":"mutable","name":"value","nameLocation":"30247:5:8","nodeType":"VariableDeclaration","scope":2541,"src":"30239:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2509,"name":"uint256","nodeType":"ElementaryTypeName","src":"30239:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2513,"mutability":"mutable","name":"rounding","nameLocation":"30263:8:8","nodeType":"VariableDeclaration","scope":2541,"src":"30254:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1066","typeString":"enum Math.Rounding"},"typeName":{"id":2512,"nodeType":"UserDefinedTypeName","pathNode":{"id":2511,"name":"Rounding","nameLocations":["30254:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":1066,"src":"30254:8:8"},"referencedDeclaration":1066,"src":"30254:8:8","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1066","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"30238:34:8"},"returnParameters":{"id":2517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2516,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2541,"src":"30296:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2515,"name":"uint256","nodeType":"ElementaryTypeName","src":"30296:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30295:9:8"},"scope":2675,"src":"30224:258:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2617,"nodeType":"Block","src":"30800:675:8","statements":[{"expression":{"id":2558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2549,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2547,"src":"30882:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2552,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2544,"src":"30902:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":2553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30906:34:8","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"30902:38:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2550,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4440,"src":"30886:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4440_$","typeString":"type(library SafeCast)"}},"id":2551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30895:6:8","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4439,"src":"30886:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30886:55:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":2556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30945:1:8","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"30886:60:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30882:64:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2559,"nodeType":"ExpressionStatement","src":"30882:64:8"},{"expression":{"id":2572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2560,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2547,"src":"31022:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2563,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2544,"src":"31044:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":2564,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2547,"src":"31049:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31044:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2566,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31043:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":2567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31054:18:8","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"31043:29:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2561,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4440,"src":"31027:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4440_$","typeString":"type(library SafeCast)"}},"id":2562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31036:6:8","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4439,"src":"31027:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31027:46:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":2570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31077:1:8","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"31027:51:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31022:56:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2573,"nodeType":"ExpressionStatement","src":"31022:56:8"},{"expression":{"id":2586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2574,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2547,"src":"31153:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2577,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2544,"src":"31175:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":2578,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2547,"src":"31180:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31175:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2580,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31174:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":2581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31185:10:8","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"31174:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2575,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4440,"src":"31158:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4440_$","typeString":"type(library SafeCast)"}},"id":2576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31167:6:8","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4439,"src":"31158:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31158:38:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":2584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31200:1:8","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"31158:43:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31153:48:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2587,"nodeType":"ExpressionStatement","src":"31153:48:8"},{"expression":{"id":2600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2588,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2547,"src":"31276:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2591,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2544,"src":"31298:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":2592,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2547,"src":"31303:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31298:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2594,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31297:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":2595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31308:6:8","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"31297:17:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2589,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4440,"src":"31281:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4440_$","typeString":"type(library SafeCast)"}},"id":2590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31290:6:8","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4439,"src":"31281:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31281:34:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":2598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31319:1:8","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"31281:39:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31276:44:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2601,"nodeType":"ExpressionStatement","src":"31276:44:8"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2602,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2547,"src":"31426:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"33","id":2603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31431:1:8","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31426:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2605,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31425:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2608,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2544,"src":"31453:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":2609,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2547,"src":"31458:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31453:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2611,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31452:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":2612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31463:4:8","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"31452:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2606,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4440,"src":"31436:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4440_$","typeString":"type(library SafeCast)"}},"id":2607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31445:6:8","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4439,"src":"31436:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31436:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31425:43:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2548,"id":2616,"nodeType":"Return","src":"31418:50:8"}]},"documentation":{"id":2542,"nodeType":"StructuredDocumentation","src":"30488:246:8","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":2618,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"30748:6:8","nodeType":"FunctionDefinition","parameters":{"id":2545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2544,"mutability":"mutable","name":"x","nameLocation":"30763:1:8","nodeType":"VariableDeclaration","scope":2618,"src":"30755:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2543,"name":"uint256","nodeType":"ElementaryTypeName","src":"30755:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30754:11:8"},"returnParameters":{"id":2548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2547,"mutability":"mutable","name":"r","nameLocation":"30797:1:8","nodeType":"VariableDeclaration","scope":2618,"src":"30789:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2546,"name":"uint256","nodeType":"ElementaryTypeName","src":"30789:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30788:11:8"},"scope":2675,"src":"30739:736:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2654,"nodeType":"Block","src":"31712:184:8","statements":[{"id":2653,"nodeType":"UncheckedBlock","src":"31722:168:8","statements":[{"assignments":[2630],"declarations":[{"constant":false,"id":2630,"mutability":"mutable","name":"result","nameLocation":"31754:6:8","nodeType":"VariableDeclaration","scope":2653,"src":"31746:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2629,"name":"uint256","nodeType":"ElementaryTypeName","src":"31746:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2634,"initialValue":{"arguments":[{"id":2632,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2621,"src":"31770:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2631,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[2618,2655],"referencedDeclaration":2618,"src":"31763:6:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31763:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"31746:30:8"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2635,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2630,"src":"31797:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2639,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2624,"src":"31839:8:8","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1066","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1066","typeString":"enum Math.Rounding"}],"id":2638,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2674,"src":"31822:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$1066_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31822:26:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31852:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2642,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2630,"src":"31858:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":2643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31868:1:8","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31858:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2645,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31857:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2647,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2621,"src":"31873:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:26:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"31822:56:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2636,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4440,"src":"31806:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4440_$","typeString":"type(library SafeCast)"}},"id":2637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31815:6:8","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4439,"src":"31806:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31806:73:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31797:82:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2628,"id":2652,"nodeType":"Return","src":"31790:89:8"}]}]},"documentation":{"id":2619,"nodeType":"StructuredDocumentation","src":"31481:144:8","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2655,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"31639:6:8","nodeType":"FunctionDefinition","parameters":{"id":2625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2621,"mutability":"mutable","name":"value","nameLocation":"31654:5:8","nodeType":"VariableDeclaration","scope":2655,"src":"31646:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2620,"name":"uint256","nodeType":"ElementaryTypeName","src":"31646:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2624,"mutability":"mutable","name":"rounding","nameLocation":"31670:8:8","nodeType":"VariableDeclaration","scope":2655,"src":"31661:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1066","typeString":"enum Math.Rounding"},"typeName":{"id":2623,"nodeType":"UserDefinedTypeName","pathNode":{"id":2622,"name":"Rounding","nameLocations":["31661:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":1066,"src":"31661:8:8"},"referencedDeclaration":1066,"src":"31661:8:8","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1066","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"31645:34:8"},"returnParameters":{"id":2628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2627,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2655,"src":"31703:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2626,"name":"uint256","nodeType":"ElementaryTypeName","src":"31703:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"31702:9:8"},"scope":2675,"src":"31630:266:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2673,"nodeType":"Block","src":"32094:48:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2666,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2659,"src":"32117:8:8","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1066","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1066","typeString":"enum Math.Rounding"}],"id":2665,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32111:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2664,"name":"uint8","nodeType":"ElementaryTypeName","src":"32111:5:8","typeDescriptions":{}}},"id":2667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32111:15:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":2668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32129:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"32111:19:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":2670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32134:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"32111:24:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2663,"id":2672,"nodeType":"Return","src":"32104:31:8"}]},"documentation":{"id":2656,"nodeType":"StructuredDocumentation","src":"31902:113:8","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":2674,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"32029:16:8","nodeType":"FunctionDefinition","parameters":{"id":2660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2659,"mutability":"mutable","name":"rounding","nameLocation":"32055:8:8","nodeType":"VariableDeclaration","scope":2674,"src":"32046:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1066","typeString":"enum Math.Rounding"},"typeName":{"id":2658,"nodeType":"UserDefinedTypeName","pathNode":{"id":2657,"name":"Rounding","nameLocations":["32046:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":1066,"src":"32046:8:8"},"referencedDeclaration":1066,"src":"32046:8:8","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1066","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"32045:19:8"},"returnParameters":{"id":2663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2662,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2674,"src":"32088:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2661,"name":"bool","nodeType":"ElementaryTypeName","src":"32088:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"32087:6:8"},"scope":2675,"src":"32020:122:8","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2676,"src":"281:31863:8","usedErrors":[],"usedEvents":[]}],"src":"103:32042:8"},"id":8},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[4440]},"id":4441,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2677,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:9"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":2678,"nodeType":"StructuredDocumentation","src":"218:550:9","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":4440,"linearizedBaseContracts":[4440],"name":"SafeCast","nameLocation":"777:8:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2679,"nodeType":"StructuredDocumentation","src":"792:68:9","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":2685,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:9","nodeType":"ErrorDefinition","parameters":{"id":2684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2681,"mutability":"mutable","name":"bits","nameLocation":"908:4:9","nodeType":"VariableDeclaration","scope":2685,"src":"902:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2680,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2683,"mutability":"mutable","name":"value","nameLocation":"922:5:9","nodeType":"VariableDeclaration","scope":2685,"src":"914:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2682,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:9"},"src":"865:64:9"},{"documentation":{"id":2686,"nodeType":"StructuredDocumentation","src":"935:75:9","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":2690,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:9","nodeType":"ErrorDefinition","parameters":{"id":2689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2688,"mutability":"mutable","name":"value","nameLocation":"1056:5:9","nodeType":"VariableDeclaration","scope":2690,"src":"1049:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2687,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:9"},"src":"1015:48:9"},{"documentation":{"id":2691,"nodeType":"StructuredDocumentation","src":"1069:67:9","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":2697,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:9","nodeType":"ErrorDefinition","parameters":{"id":2696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2693,"mutability":"mutable","name":"bits","nameLocation":"1183:4:9","nodeType":"VariableDeclaration","scope":2697,"src":"1177:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2692,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2695,"mutability":"mutable","name":"value","nameLocation":"1196:5:9","nodeType":"VariableDeclaration","scope":2697,"src":"1189:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2694,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:9"},"src":"1141:62:9"},{"documentation":{"id":2698,"nodeType":"StructuredDocumentation","src":"1209:75:9","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":2702,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:9","nodeType":"ErrorDefinition","parameters":{"id":2701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2700,"mutability":"mutable","name":"value","nameLocation":"1331:5:9","nodeType":"VariableDeclaration","scope":2702,"src":"1323:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2699,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:9"},"src":"1289:49:9"},{"body":{"id":2729,"nodeType":"Block","src":"1695:152:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2710,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2705,"src":"1709:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2713,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":2712,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":2711,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":2715,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:9","memberName":"max","nodeType":"MemberAccess","src":"1717:17:9","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2723,"nodeType":"IfStatement","src":"1705:105:9","trueBody":{"id":2722,"nodeType":"Block","src":"1736:74:9","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":2718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:9","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":2719,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2705,"src":"1793:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2717,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2685,"src":"1757:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":2720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2721,"nodeType":"RevertStatement","src":"1750:49:9"}]}},{"expression":{"arguments":[{"id":2726,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2705,"src":"1834:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2725,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":2724,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:9","typeDescriptions":{}}},"id":2727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":2709,"id":2728,"nodeType":"Return","src":"1819:21:9"}]},"documentation":{"id":2703,"nodeType":"StructuredDocumentation","src":"1344:280:9","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":2730,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:9","nodeType":"FunctionDefinition","parameters":{"id":2706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2705,"mutability":"mutable","name":"value","nameLocation":"1656:5:9","nodeType":"VariableDeclaration","scope":2730,"src":"1648:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2704,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:9"},"returnParameters":{"id":2709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2708,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2730,"src":"1686:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":2707,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:9","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:9"},"scope":4440,"src":"1629:218:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2757,"nodeType":"Block","src":"2204:152:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2738,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2733,"src":"2218:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2741,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":2740,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":2739,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":2743,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:9","memberName":"max","nodeType":"MemberAccess","src":"2226:17:9","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2751,"nodeType":"IfStatement","src":"2214:105:9","trueBody":{"id":2750,"nodeType":"Block","src":"2245:74:9","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":2746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:9","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":2747,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2733,"src":"2302:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2745,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2685,"src":"2266:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":2748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2749,"nodeType":"RevertStatement","src":"2259:49:9"}]}},{"expression":{"arguments":[{"id":2754,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2733,"src":"2343:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2753,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":2752,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:9","typeDescriptions":{}}},"id":2755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":2737,"id":2756,"nodeType":"Return","src":"2328:21:9"}]},"documentation":{"id":2731,"nodeType":"StructuredDocumentation","src":"1853:280:9","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":2758,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:9","nodeType":"FunctionDefinition","parameters":{"id":2734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2733,"mutability":"mutable","name":"value","nameLocation":"2165:5:9","nodeType":"VariableDeclaration","scope":2758,"src":"2157:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2732,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:9"},"returnParameters":{"id":2737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2736,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2758,"src":"2195:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":2735,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:9","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:9"},"scope":4440,"src":"2138:218:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2785,"nodeType":"Block","src":"2713:152:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2766,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2761,"src":"2727:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2769,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":2768,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":2767,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":2771,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:9","memberName":"max","nodeType":"MemberAccess","src":"2735:17:9","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2779,"nodeType":"IfStatement","src":"2723:105:9","trueBody":{"id":2778,"nodeType":"Block","src":"2754:74:9","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":2774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:9","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":2775,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2761,"src":"2811:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2773,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2685,"src":"2775:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":2776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2777,"nodeType":"RevertStatement","src":"2768:49:9"}]}},{"expression":{"arguments":[{"id":2782,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2761,"src":"2852:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2781,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":2780,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:9","typeDescriptions":{}}},"id":2783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":2765,"id":2784,"nodeType":"Return","src":"2837:21:9"}]},"documentation":{"id":2759,"nodeType":"StructuredDocumentation","src":"2362:280:9","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":2786,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:9","nodeType":"FunctionDefinition","parameters":{"id":2762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2761,"mutability":"mutable","name":"value","nameLocation":"2674:5:9","nodeType":"VariableDeclaration","scope":2786,"src":"2666:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2760,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:9"},"returnParameters":{"id":2765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2764,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2786,"src":"2704:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":2763,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:9","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:9"},"scope":4440,"src":"2647:218:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2813,"nodeType":"Block","src":"3222:152:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2794,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2789,"src":"3236:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2797,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":2796,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":2795,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":2799,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:9","memberName":"max","nodeType":"MemberAccess","src":"3244:17:9","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2807,"nodeType":"IfStatement","src":"3232:105:9","trueBody":{"id":2806,"nodeType":"Block","src":"3263:74:9","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":2802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:9","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":2803,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2789,"src":"3320:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2801,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2685,"src":"3284:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":2804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2805,"nodeType":"RevertStatement","src":"3277:49:9"}]}},{"expression":{"arguments":[{"id":2810,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2789,"src":"3361:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2809,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":2808,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:9","typeDescriptions":{}}},"id":2811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":2793,"id":2812,"nodeType":"Return","src":"3346:21:9"}]},"documentation":{"id":2787,"nodeType":"StructuredDocumentation","src":"2871:280:9","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":2814,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:9","nodeType":"FunctionDefinition","parameters":{"id":2790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2789,"mutability":"mutable","name":"value","nameLocation":"3183:5:9","nodeType":"VariableDeclaration","scope":2814,"src":"3175:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2788,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:9"},"returnParameters":{"id":2793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2792,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2814,"src":"3213:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":2791,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:9","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:9"},"scope":4440,"src":"3156:218:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2841,"nodeType":"Block","src":"3731:152:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2822,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2817,"src":"3745:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2825,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":2824,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":2823,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":2827,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:9","memberName":"max","nodeType":"MemberAccess","src":"3753:17:9","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2835,"nodeType":"IfStatement","src":"3741:105:9","trueBody":{"id":2834,"nodeType":"Block","src":"3772:74:9","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":2830,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:9","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":2831,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2817,"src":"3829:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2829,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2685,"src":"3793:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":2832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2833,"nodeType":"RevertStatement","src":"3786:49:9"}]}},{"expression":{"arguments":[{"id":2838,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2817,"src":"3870:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2837,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":2836,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:9","typeDescriptions":{}}},"id":2839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":2821,"id":2840,"nodeType":"Return","src":"3855:21:9"}]},"documentation":{"id":2815,"nodeType":"StructuredDocumentation","src":"3380:280:9","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":2842,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:9","nodeType":"FunctionDefinition","parameters":{"id":2818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2817,"mutability":"mutable","name":"value","nameLocation":"3692:5:9","nodeType":"VariableDeclaration","scope":2842,"src":"3684:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2816,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:9"},"returnParameters":{"id":2821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2820,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2842,"src":"3722:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":2819,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:9","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:9"},"scope":4440,"src":"3665:218:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2869,"nodeType":"Block","src":"4240:152:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2850,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2845,"src":"4254:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2853,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":2852,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":2851,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":2855,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:9","memberName":"max","nodeType":"MemberAccess","src":"4262:17:9","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2863,"nodeType":"IfStatement","src":"4250:105:9","trueBody":{"id":2862,"nodeType":"Block","src":"4281:74:9","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":2858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:9","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":2859,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2845,"src":"4338:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2857,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2685,"src":"4302:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":2860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2861,"nodeType":"RevertStatement","src":"4295:49:9"}]}},{"expression":{"arguments":[{"id":2866,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2845,"src":"4379:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2865,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":2864,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:9","typeDescriptions":{}}},"id":2867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":2849,"id":2868,"nodeType":"Return","src":"4364:21:9"}]},"documentation":{"id":2843,"nodeType":"StructuredDocumentation","src":"3889:280:9","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":2870,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:9","nodeType":"FunctionDefinition","parameters":{"id":2846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2845,"mutability":"mutable","name":"value","nameLocation":"4201:5:9","nodeType":"VariableDeclaration","scope":2870,"src":"4193:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2844,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:9"},"returnParameters":{"id":2849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2848,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2870,"src":"4231:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":2847,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:9","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:9"},"scope":4440,"src":"4174:218:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2897,"nodeType":"Block","src":"4749:152:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2878,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2873,"src":"4763:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2881,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":2880,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":2879,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":2883,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:9","memberName":"max","nodeType":"MemberAccess","src":"4771:17:9","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2891,"nodeType":"IfStatement","src":"4759:105:9","trueBody":{"id":2890,"nodeType":"Block","src":"4790:74:9","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":2886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:9","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":2887,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2873,"src":"4847:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2885,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2685,"src":"4811:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":2888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2889,"nodeType":"RevertStatement","src":"4804:49:9"}]}},{"expression":{"arguments":[{"id":2894,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2873,"src":"4888:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2893,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":2892,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:9","typeDescriptions":{}}},"id":2895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":2877,"id":2896,"nodeType":"Return","src":"4873:21:9"}]},"documentation":{"id":2871,"nodeType":"StructuredDocumentation","src":"4398:280:9","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":2898,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:9","nodeType":"FunctionDefinition","parameters":{"id":2874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2873,"mutability":"mutable","name":"value","nameLocation":"4710:5:9","nodeType":"VariableDeclaration","scope":2898,"src":"4702:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2872,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:9"},"returnParameters":{"id":2877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2876,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2898,"src":"4740:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":2875,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:9","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:9"},"scope":4440,"src":"4683:218:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2925,"nodeType":"Block","src":"5258:152:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2906,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2901,"src":"5272:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2909,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":2908,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":2907,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":2911,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:9","memberName":"max","nodeType":"MemberAccess","src":"5280:17:9","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2919,"nodeType":"IfStatement","src":"5268:105:9","trueBody":{"id":2918,"nodeType":"Block","src":"5299:74:9","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":2914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:9","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":2915,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2901,"src":"5356:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2913,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2685,"src":"5320:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":2916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2917,"nodeType":"RevertStatement","src":"5313:49:9"}]}},{"expression":{"arguments":[{"id":2922,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2901,"src":"5397:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2921,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":2920,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:9","typeDescriptions":{}}},"id":2923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":2905,"id":2924,"nodeType":"Return","src":"5382:21:9"}]},"documentation":{"id":2899,"nodeType":"StructuredDocumentation","src":"4907:280:9","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":2926,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:9","nodeType":"FunctionDefinition","parameters":{"id":2902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2901,"mutability":"mutable","name":"value","nameLocation":"5219:5:9","nodeType":"VariableDeclaration","scope":2926,"src":"5211:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2900,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:9"},"returnParameters":{"id":2905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2904,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2926,"src":"5249:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":2903,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:9","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:9"},"scope":4440,"src":"5192:218:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2953,"nodeType":"Block","src":"5767:152:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2934,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2929,"src":"5781:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2937,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":2936,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":2935,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":2939,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:9","memberName":"max","nodeType":"MemberAccess","src":"5789:17:9","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2947,"nodeType":"IfStatement","src":"5777:105:9","trueBody":{"id":2946,"nodeType":"Block","src":"5808:74:9","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":2942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:9","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":2943,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2929,"src":"5865:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2941,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2685,"src":"5829:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":2944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2945,"nodeType":"RevertStatement","src":"5822:49:9"}]}},{"expression":{"arguments":[{"id":2950,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2929,"src":"5906:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2949,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":2948,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:9","typeDescriptions":{}}},"id":2951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":2933,"id":2952,"nodeType":"Return","src":"5891:21:9"}]},"documentation":{"id":2927,"nodeType":"StructuredDocumentation","src":"5416:280:9","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":2954,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:9","nodeType":"FunctionDefinition","parameters":{"id":2930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2929,"mutability":"mutable","name":"value","nameLocation":"5728:5:9","nodeType":"VariableDeclaration","scope":2954,"src":"5720:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2928,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:9"},"returnParameters":{"id":2933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2932,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2954,"src":"5758:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":2931,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:9","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:9"},"scope":4440,"src":"5701:218:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2981,"nodeType":"Block","src":"6276:152:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2962,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2957,"src":"6290:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2965,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":2964,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":2963,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":2967,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:9","memberName":"max","nodeType":"MemberAccess","src":"6298:17:9","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2975,"nodeType":"IfStatement","src":"6286:105:9","trueBody":{"id":2974,"nodeType":"Block","src":"6317:74:9","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":2970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:9","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":2971,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2957,"src":"6374:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2969,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2685,"src":"6338:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":2972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2973,"nodeType":"RevertStatement","src":"6331:49:9"}]}},{"expression":{"arguments":[{"id":2978,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2957,"src":"6415:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2977,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":2976,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:9","typeDescriptions":{}}},"id":2979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":2961,"id":2980,"nodeType":"Return","src":"6400:21:9"}]},"documentation":{"id":2955,"nodeType":"StructuredDocumentation","src":"5925:280:9","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":2982,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:9","nodeType":"FunctionDefinition","parameters":{"id":2958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2957,"mutability":"mutable","name":"value","nameLocation":"6237:5:9","nodeType":"VariableDeclaration","scope":2982,"src":"6229:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2956,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:9"},"returnParameters":{"id":2961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2960,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2982,"src":"6267:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":2959,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:9","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:9"},"scope":4440,"src":"6210:218:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3009,"nodeType":"Block","src":"6785:152:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2990,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2985,"src":"6799:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2993,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":2992,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":2991,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":2995,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:9","memberName":"max","nodeType":"MemberAccess","src":"6807:17:9","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3003,"nodeType":"IfStatement","src":"6795:105:9","trueBody":{"id":3002,"nodeType":"Block","src":"6826:74:9","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":2998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:9","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":2999,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2985,"src":"6883:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2997,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2685,"src":"6847:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3001,"nodeType":"RevertStatement","src":"6840:49:9"}]}},{"expression":{"arguments":[{"id":3006,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2985,"src":"6924:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3005,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":3004,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:9","typeDescriptions":{}}},"id":3007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":2989,"id":3008,"nodeType":"Return","src":"6909:21:9"}]},"documentation":{"id":2983,"nodeType":"StructuredDocumentation","src":"6434:280:9","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":3010,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:9","nodeType":"FunctionDefinition","parameters":{"id":2986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2985,"mutability":"mutable","name":"value","nameLocation":"6746:5:9","nodeType":"VariableDeclaration","scope":3010,"src":"6738:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2984,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:9"},"returnParameters":{"id":2989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2988,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3010,"src":"6776:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":2987,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:9","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:9"},"scope":4440,"src":"6719:218:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3037,"nodeType":"Block","src":"7294:152:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3018,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3013,"src":"7308:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3021,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3020,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":3019,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":3023,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:9","memberName":"max","nodeType":"MemberAccess","src":"7316:17:9","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3031,"nodeType":"IfStatement","src":"7304:105:9","trueBody":{"id":3030,"nodeType":"Block","src":"7335:74:9","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":3026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:9","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":3027,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3013,"src":"7392:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3025,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2685,"src":"7356:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3029,"nodeType":"RevertStatement","src":"7349:49:9"}]}},{"expression":{"arguments":[{"id":3034,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3013,"src":"7433:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3033,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3032,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:9","typeDescriptions":{}}},"id":3035,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":3017,"id":3036,"nodeType":"Return","src":"7418:21:9"}]},"documentation":{"id":3011,"nodeType":"StructuredDocumentation","src":"6943:280:9","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":3038,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:9","nodeType":"FunctionDefinition","parameters":{"id":3014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3013,"mutability":"mutable","name":"value","nameLocation":"7255:5:9","nodeType":"VariableDeclaration","scope":3038,"src":"7247:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3012,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:9"},"returnParameters":{"id":3017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3016,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3038,"src":"7285:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":3015,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:9","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:9"},"scope":4440,"src":"7228:218:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3065,"nodeType":"Block","src":"7803:152:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3046,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3041,"src":"7817:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3049,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":3048,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":3047,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":3051,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:9","memberName":"max","nodeType":"MemberAccess","src":"7825:17:9","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3059,"nodeType":"IfStatement","src":"7813:105:9","trueBody":{"id":3058,"nodeType":"Block","src":"7844:74:9","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":3054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:9","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":3055,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3041,"src":"7901:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3053,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2685,"src":"7865:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3057,"nodeType":"RevertStatement","src":"7858:49:9"}]}},{"expression":{"arguments":[{"id":3062,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3041,"src":"7942:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3061,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":3060,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:9","typeDescriptions":{}}},"id":3063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":3045,"id":3064,"nodeType":"Return","src":"7927:21:9"}]},"documentation":{"id":3039,"nodeType":"StructuredDocumentation","src":"7452:280:9","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":3066,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:9","nodeType":"FunctionDefinition","parameters":{"id":3042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3041,"mutability":"mutable","name":"value","nameLocation":"7764:5:9","nodeType":"VariableDeclaration","scope":3066,"src":"7756:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3040,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:9"},"returnParameters":{"id":3045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3044,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3066,"src":"7794:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":3043,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:9","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:9"},"scope":4440,"src":"7737:218:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3093,"nodeType":"Block","src":"8312:152:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3074,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3069,"src":"8326:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3077,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":3076,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":3075,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":3079,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:9","memberName":"max","nodeType":"MemberAccess","src":"8334:17:9","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3087,"nodeType":"IfStatement","src":"8322:105:9","trueBody":{"id":3086,"nodeType":"Block","src":"8353:74:9","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":3082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:9","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":3083,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3069,"src":"8410:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3081,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2685,"src":"8374:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3085,"nodeType":"RevertStatement","src":"8367:49:9"}]}},{"expression":{"arguments":[{"id":3090,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3069,"src":"8451:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3089,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":3088,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:9","typeDescriptions":{}}},"id":3091,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":3073,"id":3092,"nodeType":"Return","src":"8436:21:9"}]},"documentation":{"id":3067,"nodeType":"StructuredDocumentation","src":"7961:280:9","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":3094,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:9","nodeType":"FunctionDefinition","parameters":{"id":3070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3069,"mutability":"mutable","name":"value","nameLocation":"8273:5:9","nodeType":"VariableDeclaration","scope":3094,"src":"8265:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3068,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:9"},"returnParameters":{"id":3073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3072,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3094,"src":"8303:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":3071,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:9","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:9"},"scope":4440,"src":"8246:218:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3121,"nodeType":"Block","src":"8821:152:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3102,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3097,"src":"8835:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3105,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":3104,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":3103,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":3107,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:9","memberName":"max","nodeType":"MemberAccess","src":"8843:17:9","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3115,"nodeType":"IfStatement","src":"8831:105:9","trueBody":{"id":3114,"nodeType":"Block","src":"8862:74:9","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":3110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:9","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":3111,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3097,"src":"8919:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3109,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2685,"src":"8883:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3113,"nodeType":"RevertStatement","src":"8876:49:9"}]}},{"expression":{"arguments":[{"id":3118,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3097,"src":"8960:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3117,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":3116,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:9","typeDescriptions":{}}},"id":3119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":3101,"id":3120,"nodeType":"Return","src":"8945:21:9"}]},"documentation":{"id":3095,"nodeType":"StructuredDocumentation","src":"8470:280:9","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":3122,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:9","nodeType":"FunctionDefinition","parameters":{"id":3098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3097,"mutability":"mutable","name":"value","nameLocation":"8782:5:9","nodeType":"VariableDeclaration","scope":3122,"src":"8774:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3096,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:9"},"returnParameters":{"id":3101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3100,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3122,"src":"8812:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":3099,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:9","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:9"},"scope":4440,"src":"8755:218:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3149,"nodeType":"Block","src":"9330:152:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3130,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3125,"src":"9344:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3133,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":3132,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":3131,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":3135,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:9","memberName":"max","nodeType":"MemberAccess","src":"9352:17:9","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3143,"nodeType":"IfStatement","src":"9340:105:9","trueBody":{"id":3142,"nodeType":"Block","src":"9371:74:9","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":3138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:9","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":3139,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3125,"src":"9428:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3137,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2685,"src":"9392:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3141,"nodeType":"RevertStatement","src":"9385:49:9"}]}},{"expression":{"arguments":[{"id":3146,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3125,"src":"9469:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3145,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":3144,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:9","typeDescriptions":{}}},"id":3147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":3129,"id":3148,"nodeType":"Return","src":"9454:21:9"}]},"documentation":{"id":3123,"nodeType":"StructuredDocumentation","src":"8979:280:9","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":3150,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:9","nodeType":"FunctionDefinition","parameters":{"id":3126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3125,"mutability":"mutable","name":"value","nameLocation":"9291:5:9","nodeType":"VariableDeclaration","scope":3150,"src":"9283:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3124,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:9"},"returnParameters":{"id":3129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3128,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3150,"src":"9321:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":3127,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:9","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:9"},"scope":4440,"src":"9264:218:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3177,"nodeType":"Block","src":"9839:152:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3158,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3153,"src":"9853:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3161,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":3160,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":3159,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":3163,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:9","memberName":"max","nodeType":"MemberAccess","src":"9861:17:9","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3171,"nodeType":"IfStatement","src":"9849:105:9","trueBody":{"id":3170,"nodeType":"Block","src":"9880:74:9","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":3166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:9","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":3167,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3153,"src":"9937:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3165,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2685,"src":"9901:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3169,"nodeType":"RevertStatement","src":"9894:49:9"}]}},{"expression":{"arguments":[{"id":3174,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3153,"src":"9978:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3173,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":3172,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:9","typeDescriptions":{}}},"id":3175,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":3157,"id":3176,"nodeType":"Return","src":"9963:21:9"}]},"documentation":{"id":3151,"nodeType":"StructuredDocumentation","src":"9488:280:9","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":3178,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:9","nodeType":"FunctionDefinition","parameters":{"id":3154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3153,"mutability":"mutable","name":"value","nameLocation":"9800:5:9","nodeType":"VariableDeclaration","scope":3178,"src":"9792:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3152,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:9"},"returnParameters":{"id":3157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3156,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3178,"src":"9830:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":3155,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:9","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:9"},"scope":4440,"src":"9773:218:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3205,"nodeType":"Block","src":"10348:152:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3186,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3181,"src":"10362:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3189,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":3188,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":3187,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":3191,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:9","memberName":"max","nodeType":"MemberAccess","src":"10370:17:9","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3199,"nodeType":"IfStatement","src":"10358:105:9","trueBody":{"id":3198,"nodeType":"Block","src":"10389:74:9","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":3194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:9","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":3195,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3181,"src":"10446:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3193,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2685,"src":"10410:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3197,"nodeType":"RevertStatement","src":"10403:49:9"}]}},{"expression":{"arguments":[{"id":3202,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3181,"src":"10487:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3201,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":3200,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:9","typeDescriptions":{}}},"id":3203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":3185,"id":3204,"nodeType":"Return","src":"10472:21:9"}]},"documentation":{"id":3179,"nodeType":"StructuredDocumentation","src":"9997:280:9","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":3206,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:9","nodeType":"FunctionDefinition","parameters":{"id":3182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3181,"mutability":"mutable","name":"value","nameLocation":"10309:5:9","nodeType":"VariableDeclaration","scope":3206,"src":"10301:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3180,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:9"},"returnParameters":{"id":3185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3184,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3206,"src":"10339:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":3183,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:9","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:9"},"scope":4440,"src":"10282:218:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3233,"nodeType":"Block","src":"10857:152:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3214,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3209,"src":"10871:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3217,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":3216,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":3215,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":3219,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:9","memberName":"max","nodeType":"MemberAccess","src":"10879:17:9","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3227,"nodeType":"IfStatement","src":"10867:105:9","trueBody":{"id":3226,"nodeType":"Block","src":"10898:74:9","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":3222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:9","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":3223,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3209,"src":"10955:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3221,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2685,"src":"10919:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3225,"nodeType":"RevertStatement","src":"10912:49:9"}]}},{"expression":{"arguments":[{"id":3230,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3209,"src":"10996:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3229,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":3228,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:9","typeDescriptions":{}}},"id":3231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":3213,"id":3232,"nodeType":"Return","src":"10981:21:9"}]},"documentation":{"id":3207,"nodeType":"StructuredDocumentation","src":"10506:280:9","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":3234,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:9","nodeType":"FunctionDefinition","parameters":{"id":3210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3209,"mutability":"mutable","name":"value","nameLocation":"10818:5:9","nodeType":"VariableDeclaration","scope":3234,"src":"10810:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3208,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:9"},"returnParameters":{"id":3213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3212,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3234,"src":"10848:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":3211,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:9","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:9"},"scope":4440,"src":"10791:218:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3261,"nodeType":"Block","src":"11360:149:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3242,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3237,"src":"11374:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3245,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":3244,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":3243,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":3247,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:9","memberName":"max","nodeType":"MemberAccess","src":"11382:16:9","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3255,"nodeType":"IfStatement","src":"11370:103:9","trueBody":{"id":3254,"nodeType":"Block","src":"11400:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":3250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:9","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":3251,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3237,"src":"11456:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3249,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2685,"src":"11421:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3253,"nodeType":"RevertStatement","src":"11414:48:9"}]}},{"expression":{"arguments":[{"id":3258,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3237,"src":"11496:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3257,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":3256,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:9","typeDescriptions":{}}},"id":3259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":3241,"id":3260,"nodeType":"Return","src":"11482:20:9"}]},"documentation":{"id":3235,"nodeType":"StructuredDocumentation","src":"11015:276:9","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":3262,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:9","nodeType":"FunctionDefinition","parameters":{"id":3238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3237,"mutability":"mutable","name":"value","nameLocation":"11322:5:9","nodeType":"VariableDeclaration","scope":3262,"src":"11314:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3236,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:9"},"returnParameters":{"id":3241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3240,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3262,"src":"11352:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":3239,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:9","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:9"},"scope":4440,"src":"11296:213:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3289,"nodeType":"Block","src":"11860:149:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3270,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3265,"src":"11874:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3273,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":3272,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":3271,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":3275,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:9","memberName":"max","nodeType":"MemberAccess","src":"11882:16:9","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3283,"nodeType":"IfStatement","src":"11870:103:9","trueBody":{"id":3282,"nodeType":"Block","src":"11900:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":3278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:9","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":3279,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3265,"src":"11956:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3277,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2685,"src":"11921:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3281,"nodeType":"RevertStatement","src":"11914:48:9"}]}},{"expression":{"arguments":[{"id":3286,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3265,"src":"11996:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3285,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":3284,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:9","typeDescriptions":{}}},"id":3287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":3269,"id":3288,"nodeType":"Return","src":"11982:20:9"}]},"documentation":{"id":3263,"nodeType":"StructuredDocumentation","src":"11515:276:9","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":3290,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:9","nodeType":"FunctionDefinition","parameters":{"id":3266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3265,"mutability":"mutable","name":"value","nameLocation":"11822:5:9","nodeType":"VariableDeclaration","scope":3290,"src":"11814:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3264,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:9"},"returnParameters":{"id":3269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3268,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3290,"src":"11852:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":3267,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:9","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:9"},"scope":4440,"src":"11796:213:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3317,"nodeType":"Block","src":"12360:149:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3298,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3293,"src":"12374:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3301,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":3300,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":3299,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":3303,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:9","memberName":"max","nodeType":"MemberAccess","src":"12382:16:9","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3311,"nodeType":"IfStatement","src":"12370:103:9","trueBody":{"id":3310,"nodeType":"Block","src":"12400:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":3306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:9","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":3307,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3293,"src":"12456:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3305,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2685,"src":"12421:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3309,"nodeType":"RevertStatement","src":"12414:48:9"}]}},{"expression":{"arguments":[{"id":3314,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3293,"src":"12496:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3313,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":3312,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:9","typeDescriptions":{}}},"id":3315,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":3297,"id":3316,"nodeType":"Return","src":"12482:20:9"}]},"documentation":{"id":3291,"nodeType":"StructuredDocumentation","src":"12015:276:9","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":3318,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:9","nodeType":"FunctionDefinition","parameters":{"id":3294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3293,"mutability":"mutable","name":"value","nameLocation":"12322:5:9","nodeType":"VariableDeclaration","scope":3318,"src":"12314:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3292,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:9"},"returnParameters":{"id":3297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3296,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3318,"src":"12352:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":3295,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:9","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:9"},"scope":4440,"src":"12296:213:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3345,"nodeType":"Block","src":"12860:149:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3326,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3321,"src":"12874:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3329,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":3328,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":3327,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":3331,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:9","memberName":"max","nodeType":"MemberAccess","src":"12882:16:9","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3339,"nodeType":"IfStatement","src":"12870:103:9","trueBody":{"id":3338,"nodeType":"Block","src":"12900:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":3334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:9","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":3335,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3321,"src":"12956:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3333,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2685,"src":"12921:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3337,"nodeType":"RevertStatement","src":"12914:48:9"}]}},{"expression":{"arguments":[{"id":3342,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3321,"src":"12996:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3341,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":3340,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:9","typeDescriptions":{}}},"id":3343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":3325,"id":3344,"nodeType":"Return","src":"12982:20:9"}]},"documentation":{"id":3319,"nodeType":"StructuredDocumentation","src":"12515:276:9","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":3346,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:9","nodeType":"FunctionDefinition","parameters":{"id":3322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3321,"mutability":"mutable","name":"value","nameLocation":"12822:5:9","nodeType":"VariableDeclaration","scope":3346,"src":"12814:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3320,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:9"},"returnParameters":{"id":3325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3324,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3346,"src":"12852:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":3323,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:9","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:9"},"scope":4440,"src":"12796:213:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3373,"nodeType":"Block","src":"13360:149:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3354,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3349,"src":"13374:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3357,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":3356,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":3355,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":3359,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:9","memberName":"max","nodeType":"MemberAccess","src":"13382:16:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3367,"nodeType":"IfStatement","src":"13370:103:9","trueBody":{"id":3366,"nodeType":"Block","src":"13400:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":3362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:9","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":3363,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3349,"src":"13456:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3361,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2685,"src":"13421:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3365,"nodeType":"RevertStatement","src":"13414:48:9"}]}},{"expression":{"arguments":[{"id":3370,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3349,"src":"13496:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3369,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":3368,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:9","typeDescriptions":{}}},"id":3371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":3353,"id":3372,"nodeType":"Return","src":"13482:20:9"}]},"documentation":{"id":3347,"nodeType":"StructuredDocumentation","src":"13015:276:9","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":3374,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:9","nodeType":"FunctionDefinition","parameters":{"id":3350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3349,"mutability":"mutable","name":"value","nameLocation":"13322:5:9","nodeType":"VariableDeclaration","scope":3374,"src":"13314:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3348,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:9"},"returnParameters":{"id":3353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3352,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3374,"src":"13352:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3351,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:9"},"scope":4440,"src":"13296:213:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3401,"nodeType":"Block","src":"13860:149:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3382,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3377,"src":"13874:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3385,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":3384,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":3383,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":3387,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:9","memberName":"max","nodeType":"MemberAccess","src":"13882:16:9","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3395,"nodeType":"IfStatement","src":"13870:103:9","trueBody":{"id":3394,"nodeType":"Block","src":"13900:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":3390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:9","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":3391,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3377,"src":"13956:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3389,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2685,"src":"13921:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3393,"nodeType":"RevertStatement","src":"13914:48:9"}]}},{"expression":{"arguments":[{"id":3398,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3377,"src":"13996:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3397,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":3396,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:9","typeDescriptions":{}}},"id":3399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":3381,"id":3400,"nodeType":"Return","src":"13982:20:9"}]},"documentation":{"id":3375,"nodeType":"StructuredDocumentation","src":"13515:276:9","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":3402,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:9","nodeType":"FunctionDefinition","parameters":{"id":3378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3377,"mutability":"mutable","name":"value","nameLocation":"13822:5:9","nodeType":"VariableDeclaration","scope":3402,"src":"13814:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3376,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:9"},"returnParameters":{"id":3381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3380,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3402,"src":"13852:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":3379,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:9","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:9"},"scope":4440,"src":"13796:213:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3429,"nodeType":"Block","src":"14360:149:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3410,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3405,"src":"14374:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3413,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":3412,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":3411,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":3415,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:9","memberName":"max","nodeType":"MemberAccess","src":"14382:16:9","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3423,"nodeType":"IfStatement","src":"14370:103:9","trueBody":{"id":3422,"nodeType":"Block","src":"14400:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":3418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:9","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":3419,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3405,"src":"14456:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3417,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2685,"src":"14421:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3421,"nodeType":"RevertStatement","src":"14414:48:9"}]}},{"expression":{"arguments":[{"id":3426,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3405,"src":"14496:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3425,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":3424,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:9","typeDescriptions":{}}},"id":3427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":3409,"id":3428,"nodeType":"Return","src":"14482:20:9"}]},"documentation":{"id":3403,"nodeType":"StructuredDocumentation","src":"14015:276:9","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":3430,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:9","nodeType":"FunctionDefinition","parameters":{"id":3406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3405,"mutability":"mutable","name":"value","nameLocation":"14322:5:9","nodeType":"VariableDeclaration","scope":3430,"src":"14314:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3404,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:9"},"returnParameters":{"id":3409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3408,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3430,"src":"14352:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":3407,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:9","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:9"},"scope":4440,"src":"14296:213:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3457,"nodeType":"Block","src":"14860:149:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3438,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3433,"src":"14874:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3441,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":3440,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":3439,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":3443,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:9","memberName":"max","nodeType":"MemberAccess","src":"14882:16:9","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3451,"nodeType":"IfStatement","src":"14870:103:9","trueBody":{"id":3450,"nodeType":"Block","src":"14900:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":3446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:9","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":3447,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3433,"src":"14956:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3445,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2685,"src":"14921:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3449,"nodeType":"RevertStatement","src":"14914:48:9"}]}},{"expression":{"arguments":[{"id":3454,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3433,"src":"14996:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3453,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":3452,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:9","typeDescriptions":{}}},"id":3455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":3437,"id":3456,"nodeType":"Return","src":"14982:20:9"}]},"documentation":{"id":3431,"nodeType":"StructuredDocumentation","src":"14515:276:9","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":3458,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:9","nodeType":"FunctionDefinition","parameters":{"id":3434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3433,"mutability":"mutable","name":"value","nameLocation":"14822:5:9","nodeType":"VariableDeclaration","scope":3458,"src":"14814:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3432,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:9"},"returnParameters":{"id":3437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3436,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3458,"src":"14852:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":3435,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:9","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:9"},"scope":4440,"src":"14796:213:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3485,"nodeType":"Block","src":"15360:149:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3466,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3461,"src":"15374:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3469,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":3468,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":3467,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":3471,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:9","memberName":"max","nodeType":"MemberAccess","src":"15382:16:9","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3479,"nodeType":"IfStatement","src":"15370:103:9","trueBody":{"id":3478,"nodeType":"Block","src":"15400:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":3474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:9","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":3475,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3461,"src":"15456:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3473,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2685,"src":"15421:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3477,"nodeType":"RevertStatement","src":"15414:48:9"}]}},{"expression":{"arguments":[{"id":3482,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3461,"src":"15496:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3481,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":3480,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:9","typeDescriptions":{}}},"id":3483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":3465,"id":3484,"nodeType":"Return","src":"15482:20:9"}]},"documentation":{"id":3459,"nodeType":"StructuredDocumentation","src":"15015:276:9","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":3486,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:9","nodeType":"FunctionDefinition","parameters":{"id":3462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3461,"mutability":"mutable","name":"value","nameLocation":"15322:5:9","nodeType":"VariableDeclaration","scope":3486,"src":"15314:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3460,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:9"},"returnParameters":{"id":3465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3464,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3486,"src":"15352:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3463,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:9","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:9"},"scope":4440,"src":"15296:213:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3513,"nodeType":"Block","src":"15860:149:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3494,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3489,"src":"15874:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3497,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":3496,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":3495,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":3499,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:9","memberName":"max","nodeType":"MemberAccess","src":"15882:16:9","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3507,"nodeType":"IfStatement","src":"15870:103:9","trueBody":{"id":3506,"nodeType":"Block","src":"15900:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":3502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:9","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":3503,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3489,"src":"15956:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3501,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2685,"src":"15921:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3505,"nodeType":"RevertStatement","src":"15914:48:9"}]}},{"expression":{"arguments":[{"id":3510,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3489,"src":"15996:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3509,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":3508,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:9","typeDescriptions":{}}},"id":3511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":3493,"id":3512,"nodeType":"Return","src":"15982:20:9"}]},"documentation":{"id":3487,"nodeType":"StructuredDocumentation","src":"15515:276:9","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":3514,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:9","nodeType":"FunctionDefinition","parameters":{"id":3490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3489,"mutability":"mutable","name":"value","nameLocation":"15822:5:9","nodeType":"VariableDeclaration","scope":3514,"src":"15814:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3488,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:9"},"returnParameters":{"id":3493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3492,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3514,"src":"15852:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":3491,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:9","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:9"},"scope":4440,"src":"15796:213:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3541,"nodeType":"Block","src":"16360:149:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3522,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3517,"src":"16374:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3525,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":3524,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":3523,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":3527,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:9","memberName":"max","nodeType":"MemberAccess","src":"16382:16:9","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3535,"nodeType":"IfStatement","src":"16370:103:9","trueBody":{"id":3534,"nodeType":"Block","src":"16400:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":3530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:9","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":3531,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3517,"src":"16456:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3529,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2685,"src":"16421:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3533,"nodeType":"RevertStatement","src":"16414:48:9"}]}},{"expression":{"arguments":[{"id":3538,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3517,"src":"16496:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3537,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":3536,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:9","typeDescriptions":{}}},"id":3539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":3521,"id":3540,"nodeType":"Return","src":"16482:20:9"}]},"documentation":{"id":3515,"nodeType":"StructuredDocumentation","src":"16015:276:9","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":3542,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:9","nodeType":"FunctionDefinition","parameters":{"id":3518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3517,"mutability":"mutable","name":"value","nameLocation":"16322:5:9","nodeType":"VariableDeclaration","scope":3542,"src":"16314:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3516,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:9"},"returnParameters":{"id":3521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3520,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3542,"src":"16352:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3519,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:9","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:9"},"scope":4440,"src":"16296:213:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3569,"nodeType":"Block","src":"16854:146:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3550,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3545,"src":"16868:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3553,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3552,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":3551,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":3555,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:9","memberName":"max","nodeType":"MemberAccess","src":"16876:15:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3563,"nodeType":"IfStatement","src":"16864:101:9","trueBody":{"id":3562,"nodeType":"Block","src":"16893:72:9","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":3558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:9","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":3559,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3545,"src":"16948:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3557,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2685,"src":"16914:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3561,"nodeType":"RevertStatement","src":"16907:47:9"}]}},{"expression":{"arguments":[{"id":3566,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3545,"src":"16987:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3565,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3564,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:9","typeDescriptions":{}}},"id":3567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":3549,"id":3568,"nodeType":"Return","src":"16974:19:9"}]},"documentation":{"id":3543,"nodeType":"StructuredDocumentation","src":"16515:272:9","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":3570,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:9","nodeType":"FunctionDefinition","parameters":{"id":3546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3545,"mutability":"mutable","name":"value","nameLocation":"16817:5:9","nodeType":"VariableDeclaration","scope":3570,"src":"16809:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3544,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:9"},"returnParameters":{"id":3549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3548,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3570,"src":"16847:5:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3547,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:9"},"scope":4440,"src":"16792:208:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3592,"nodeType":"Block","src":"17236:128:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3578,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3573,"src":"17250:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":3579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3586,"nodeType":"IfStatement","src":"17246:81:9","trueBody":{"id":3585,"nodeType":"Block","src":"17261:66:9","statements":[{"errorCall":{"arguments":[{"id":3582,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3573,"src":"17310:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3581,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2690,"src":"17282:27:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$__$","typeString":"function (int256) pure"}},"id":3583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3584,"nodeType":"RevertStatement","src":"17275:41:9"}]}},{"expression":{"arguments":[{"id":3589,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3573,"src":"17351:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3588,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3587,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:9","typeDescriptions":{}}},"id":3590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3577,"id":3591,"nodeType":"Return","src":"17336:21:9"}]},"documentation":{"id":3571,"nodeType":"StructuredDocumentation","src":"17006:160:9","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":3593,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:9","nodeType":"FunctionDefinition","parameters":{"id":3574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3573,"mutability":"mutable","name":"value","nameLocation":"17197:5:9","nodeType":"VariableDeclaration","scope":3593,"src":"17190:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3572,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:9"},"returnParameters":{"id":3577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3576,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3593,"src":"17227:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3575,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:9"},"scope":4440,"src":"17171:193:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3618,"nodeType":"Block","src":"17761:150:9","statements":[{"expression":{"id":3606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3601,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3599,"src":"17771:10:9","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3604,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3596,"src":"17791:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3603,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":3602,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:9","typeDescriptions":{}}},"id":3605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:9","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":3607,"nodeType":"ExpressionStatement","src":"17771:26:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3608,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3599,"src":"17811:10:9","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3609,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3596,"src":"17825:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3617,"nodeType":"IfStatement","src":"17807:98:9","trueBody":{"id":3616,"nodeType":"Block","src":"17832:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":3612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:9","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":3613,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3596,"src":"17888:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3611,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2697,"src":"17853:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3615,"nodeType":"RevertStatement","src":"17846:48:9"}]}}]},"documentation":{"id":3594,"nodeType":"StructuredDocumentation","src":"17370:312:9","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":3619,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:9","nodeType":"FunctionDefinition","parameters":{"id":3597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3596,"mutability":"mutable","name":"value","nameLocation":"17712:5:9","nodeType":"VariableDeclaration","scope":3619,"src":"17705:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3595,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:9"},"returnParameters":{"id":3600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3599,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:9","nodeType":"VariableDeclaration","scope":3619,"src":"17742:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":3598,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:9","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:9"},"scope":4440,"src":"17687:224:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3644,"nodeType":"Block","src":"18308:150:9","statements":[{"expression":{"id":3632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3627,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3625,"src":"18318:10:9","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3630,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3622,"src":"18338:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3629,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":3628,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:9","typeDescriptions":{}}},"id":3631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:9","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":3633,"nodeType":"ExpressionStatement","src":"18318:26:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3634,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3625,"src":"18358:10:9","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3635,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3622,"src":"18372:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3643,"nodeType":"IfStatement","src":"18354:98:9","trueBody":{"id":3642,"nodeType":"Block","src":"18379:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":3638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:9","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":3639,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3622,"src":"18435:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3637,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2697,"src":"18400:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3641,"nodeType":"RevertStatement","src":"18393:48:9"}]}}]},"documentation":{"id":3620,"nodeType":"StructuredDocumentation","src":"17917:312:9","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":3645,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:9","nodeType":"FunctionDefinition","parameters":{"id":3623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3622,"mutability":"mutable","name":"value","nameLocation":"18259:5:9","nodeType":"VariableDeclaration","scope":3645,"src":"18252:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3621,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:9"},"returnParameters":{"id":3626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3625,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:9","nodeType":"VariableDeclaration","scope":3645,"src":"18289:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":3624,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:9","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:9"},"scope":4440,"src":"18234:224:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3670,"nodeType":"Block","src":"18855:150:9","statements":[{"expression":{"id":3658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3653,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3651,"src":"18865:10:9","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3656,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3648,"src":"18885:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3655,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":3654,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:9","typeDescriptions":{}}},"id":3657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:9","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":3659,"nodeType":"ExpressionStatement","src":"18865:26:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3660,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3651,"src":"18905:10:9","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3661,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3648,"src":"18919:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3669,"nodeType":"IfStatement","src":"18901:98:9","trueBody":{"id":3668,"nodeType":"Block","src":"18926:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":3664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:9","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":3665,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3648,"src":"18982:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3663,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2697,"src":"18947:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3667,"nodeType":"RevertStatement","src":"18940:48:9"}]}}]},"documentation":{"id":3646,"nodeType":"StructuredDocumentation","src":"18464:312:9","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":3671,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:9","nodeType":"FunctionDefinition","parameters":{"id":3649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3648,"mutability":"mutable","name":"value","nameLocation":"18806:5:9","nodeType":"VariableDeclaration","scope":3671,"src":"18799:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3647,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:9"},"returnParameters":{"id":3652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3651,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:9","nodeType":"VariableDeclaration","scope":3671,"src":"18836:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":3650,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:9","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:9"},"scope":4440,"src":"18781:224:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3696,"nodeType":"Block","src":"19402:150:9","statements":[{"expression":{"id":3684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3679,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3677,"src":"19412:10:9","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3682,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3674,"src":"19432:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3681,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":3680,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:9","typeDescriptions":{}}},"id":3683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:9","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":3685,"nodeType":"ExpressionStatement","src":"19412:26:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3686,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3677,"src":"19452:10:9","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3687,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3674,"src":"19466:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3695,"nodeType":"IfStatement","src":"19448:98:9","trueBody":{"id":3694,"nodeType":"Block","src":"19473:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":3690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:9","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":3691,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3674,"src":"19529:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3689,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2697,"src":"19494:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3693,"nodeType":"RevertStatement","src":"19487:48:9"}]}}]},"documentation":{"id":3672,"nodeType":"StructuredDocumentation","src":"19011:312:9","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":3697,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:9","nodeType":"FunctionDefinition","parameters":{"id":3675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3674,"mutability":"mutable","name":"value","nameLocation":"19353:5:9","nodeType":"VariableDeclaration","scope":3697,"src":"19346:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3673,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:9"},"returnParameters":{"id":3678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3677,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:9","nodeType":"VariableDeclaration","scope":3697,"src":"19383:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":3676,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:9","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:9"},"scope":4440,"src":"19328:224:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3722,"nodeType":"Block","src":"19949:150:9","statements":[{"expression":{"id":3710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3705,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3703,"src":"19959:10:9","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3708,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3700,"src":"19979:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3707,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":3706,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:9","typeDescriptions":{}}},"id":3709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:9","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":3711,"nodeType":"ExpressionStatement","src":"19959:26:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3712,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3703,"src":"19999:10:9","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3713,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3700,"src":"20013:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3721,"nodeType":"IfStatement","src":"19995:98:9","trueBody":{"id":3720,"nodeType":"Block","src":"20020:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":3716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:9","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":3717,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3700,"src":"20076:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3715,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2697,"src":"20041:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3719,"nodeType":"RevertStatement","src":"20034:48:9"}]}}]},"documentation":{"id":3698,"nodeType":"StructuredDocumentation","src":"19558:312:9","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":3723,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:9","nodeType":"FunctionDefinition","parameters":{"id":3701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3700,"mutability":"mutable","name":"value","nameLocation":"19900:5:9","nodeType":"VariableDeclaration","scope":3723,"src":"19893:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3699,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:9"},"returnParameters":{"id":3704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3703,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:9","nodeType":"VariableDeclaration","scope":3723,"src":"19930:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":3702,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:9","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:9"},"scope":4440,"src":"19875:224:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3748,"nodeType":"Block","src":"20496:150:9","statements":[{"expression":{"id":3736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3731,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3729,"src":"20506:10:9","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3734,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3726,"src":"20526:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3733,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":3732,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:9","typeDescriptions":{}}},"id":3735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:9","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":3737,"nodeType":"ExpressionStatement","src":"20506:26:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3738,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3729,"src":"20546:10:9","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3739,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3726,"src":"20560:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3747,"nodeType":"IfStatement","src":"20542:98:9","trueBody":{"id":3746,"nodeType":"Block","src":"20567:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":3742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:9","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":3743,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3726,"src":"20623:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3741,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2697,"src":"20588:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3745,"nodeType":"RevertStatement","src":"20581:48:9"}]}}]},"documentation":{"id":3724,"nodeType":"StructuredDocumentation","src":"20105:312:9","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":3749,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:9","nodeType":"FunctionDefinition","parameters":{"id":3727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3726,"mutability":"mutable","name":"value","nameLocation":"20447:5:9","nodeType":"VariableDeclaration","scope":3749,"src":"20440:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3725,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:9"},"returnParameters":{"id":3730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3729,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:9","nodeType":"VariableDeclaration","scope":3749,"src":"20477:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":3728,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:9","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:9"},"scope":4440,"src":"20422:224:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3774,"nodeType":"Block","src":"21043:150:9","statements":[{"expression":{"id":3762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3757,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3755,"src":"21053:10:9","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3760,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3752,"src":"21073:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3759,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":3758,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:9","typeDescriptions":{}}},"id":3761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:9","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":3763,"nodeType":"ExpressionStatement","src":"21053:26:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3764,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3755,"src":"21093:10:9","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3765,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3752,"src":"21107:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3773,"nodeType":"IfStatement","src":"21089:98:9","trueBody":{"id":3772,"nodeType":"Block","src":"21114:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":3768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:9","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":3769,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3752,"src":"21170:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3767,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2697,"src":"21135:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3771,"nodeType":"RevertStatement","src":"21128:48:9"}]}}]},"documentation":{"id":3750,"nodeType":"StructuredDocumentation","src":"20652:312:9","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":3775,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:9","nodeType":"FunctionDefinition","parameters":{"id":3753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3752,"mutability":"mutable","name":"value","nameLocation":"20994:5:9","nodeType":"VariableDeclaration","scope":3775,"src":"20987:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3751,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:9"},"returnParameters":{"id":3756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3755,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:9","nodeType":"VariableDeclaration","scope":3775,"src":"21024:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":3754,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:9","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:9"},"scope":4440,"src":"20969:224:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3800,"nodeType":"Block","src":"21590:150:9","statements":[{"expression":{"id":3788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3783,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3781,"src":"21600:10:9","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3786,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3778,"src":"21620:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3785,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":3784,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:9","typeDescriptions":{}}},"id":3787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:9","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":3789,"nodeType":"ExpressionStatement","src":"21600:26:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3790,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3781,"src":"21640:10:9","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3791,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3778,"src":"21654:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3799,"nodeType":"IfStatement","src":"21636:98:9","trueBody":{"id":3798,"nodeType":"Block","src":"21661:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":3794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:9","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":3795,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3778,"src":"21717:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3793,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2697,"src":"21682:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3797,"nodeType":"RevertStatement","src":"21675:48:9"}]}}]},"documentation":{"id":3776,"nodeType":"StructuredDocumentation","src":"21199:312:9","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":3801,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:9","nodeType":"FunctionDefinition","parameters":{"id":3779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3778,"mutability":"mutable","name":"value","nameLocation":"21541:5:9","nodeType":"VariableDeclaration","scope":3801,"src":"21534:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3777,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:9"},"returnParameters":{"id":3782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3781,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:9","nodeType":"VariableDeclaration","scope":3801,"src":"21571:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":3780,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:9","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:9"},"scope":4440,"src":"21516:224:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3826,"nodeType":"Block","src":"22137:150:9","statements":[{"expression":{"id":3814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3809,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3807,"src":"22147:10:9","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3812,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3804,"src":"22167:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3811,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":3810,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:9","typeDescriptions":{}}},"id":3813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:9","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":3815,"nodeType":"ExpressionStatement","src":"22147:26:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3816,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3807,"src":"22187:10:9","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3817,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3804,"src":"22201:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3825,"nodeType":"IfStatement","src":"22183:98:9","trueBody":{"id":3824,"nodeType":"Block","src":"22208:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":3820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:9","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":3821,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3804,"src":"22264:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3819,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2697,"src":"22229:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3823,"nodeType":"RevertStatement","src":"22222:48:9"}]}}]},"documentation":{"id":3802,"nodeType":"StructuredDocumentation","src":"21746:312:9","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":3827,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:9","nodeType":"FunctionDefinition","parameters":{"id":3805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3804,"mutability":"mutable","name":"value","nameLocation":"22088:5:9","nodeType":"VariableDeclaration","scope":3827,"src":"22081:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3803,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:9"},"returnParameters":{"id":3808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3807,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:9","nodeType":"VariableDeclaration","scope":3827,"src":"22118:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":3806,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:9","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:9"},"scope":4440,"src":"22063:224:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3852,"nodeType":"Block","src":"22684:150:9","statements":[{"expression":{"id":3840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3835,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3833,"src":"22694:10:9","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3838,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3830,"src":"22714:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3837,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":3836,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:9","typeDescriptions":{}}},"id":3839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:9","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":3841,"nodeType":"ExpressionStatement","src":"22694:26:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3842,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3833,"src":"22734:10:9","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3843,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3830,"src":"22748:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3851,"nodeType":"IfStatement","src":"22730:98:9","trueBody":{"id":3850,"nodeType":"Block","src":"22755:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":3846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:9","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":3847,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3830,"src":"22811:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3845,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2697,"src":"22776:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3849,"nodeType":"RevertStatement","src":"22769:48:9"}]}}]},"documentation":{"id":3828,"nodeType":"StructuredDocumentation","src":"22293:312:9","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":3853,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:9","nodeType":"FunctionDefinition","parameters":{"id":3831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3830,"mutability":"mutable","name":"value","nameLocation":"22635:5:9","nodeType":"VariableDeclaration","scope":3853,"src":"22628:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3829,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:9"},"returnParameters":{"id":3834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3833,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:9","nodeType":"VariableDeclaration","scope":3853,"src":"22665:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":3832,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:9","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:9"},"scope":4440,"src":"22610:224:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3878,"nodeType":"Block","src":"23231:150:9","statements":[{"expression":{"id":3866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3861,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3859,"src":"23241:10:9","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3864,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3856,"src":"23261:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3863,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":3862,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:9","typeDescriptions":{}}},"id":3865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:9","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":3867,"nodeType":"ExpressionStatement","src":"23241:26:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3868,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3859,"src":"23281:10:9","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3869,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3856,"src":"23295:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3877,"nodeType":"IfStatement","src":"23277:98:9","trueBody":{"id":3876,"nodeType":"Block","src":"23302:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":3872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:9","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":3873,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3856,"src":"23358:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3871,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2697,"src":"23323:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3875,"nodeType":"RevertStatement","src":"23316:48:9"}]}}]},"documentation":{"id":3854,"nodeType":"StructuredDocumentation","src":"22840:312:9","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":3879,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:9","nodeType":"FunctionDefinition","parameters":{"id":3857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3856,"mutability":"mutable","name":"value","nameLocation":"23182:5:9","nodeType":"VariableDeclaration","scope":3879,"src":"23175:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3855,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:9"},"returnParameters":{"id":3860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3859,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:9","nodeType":"VariableDeclaration","scope":3879,"src":"23212:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":3858,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:9","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:9"},"scope":4440,"src":"23157:224:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3904,"nodeType":"Block","src":"23778:150:9","statements":[{"expression":{"id":3892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3887,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3885,"src":"23788:10:9","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3890,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3882,"src":"23808:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3889,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":3888,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:9","typeDescriptions":{}}},"id":3891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:9","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":3893,"nodeType":"ExpressionStatement","src":"23788:26:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3894,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3885,"src":"23828:10:9","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3895,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3882,"src":"23842:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3903,"nodeType":"IfStatement","src":"23824:98:9","trueBody":{"id":3902,"nodeType":"Block","src":"23849:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":3898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:9","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":3899,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3882,"src":"23905:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3897,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2697,"src":"23870:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3900,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3901,"nodeType":"RevertStatement","src":"23863:48:9"}]}}]},"documentation":{"id":3880,"nodeType":"StructuredDocumentation","src":"23387:312:9","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":3905,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:9","nodeType":"FunctionDefinition","parameters":{"id":3883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3882,"mutability":"mutable","name":"value","nameLocation":"23729:5:9","nodeType":"VariableDeclaration","scope":3905,"src":"23722:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3881,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:9"},"returnParameters":{"id":3886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3885,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:9","nodeType":"VariableDeclaration","scope":3905,"src":"23759:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":3884,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:9","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:9"},"scope":4440,"src":"23704:224:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3930,"nodeType":"Block","src":"24325:150:9","statements":[{"expression":{"id":3918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3913,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3911,"src":"24335:10:9","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3916,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3908,"src":"24355:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3915,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":3914,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:9","typeDescriptions":{}}},"id":3917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:9","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":3919,"nodeType":"ExpressionStatement","src":"24335:26:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3920,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3911,"src":"24375:10:9","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3921,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3908,"src":"24389:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3929,"nodeType":"IfStatement","src":"24371:98:9","trueBody":{"id":3928,"nodeType":"Block","src":"24396:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":3924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:9","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":3925,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3908,"src":"24452:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3923,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2697,"src":"24417:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3927,"nodeType":"RevertStatement","src":"24410:48:9"}]}}]},"documentation":{"id":3906,"nodeType":"StructuredDocumentation","src":"23934:312:9","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":3931,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:9","nodeType":"FunctionDefinition","parameters":{"id":3909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3908,"mutability":"mutable","name":"value","nameLocation":"24276:5:9","nodeType":"VariableDeclaration","scope":3931,"src":"24269:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3907,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:9"},"returnParameters":{"id":3912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3911,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:9","nodeType":"VariableDeclaration","scope":3931,"src":"24306:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":3910,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:9","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:9"},"scope":4440,"src":"24251:224:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3956,"nodeType":"Block","src":"24872:150:9","statements":[{"expression":{"id":3944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3939,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3937,"src":"24882:10:9","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3942,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3934,"src":"24902:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3941,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":3940,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:9","typeDescriptions":{}}},"id":3943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:9","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":3945,"nodeType":"ExpressionStatement","src":"24882:26:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3946,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3937,"src":"24922:10:9","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3947,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3934,"src":"24936:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3955,"nodeType":"IfStatement","src":"24918:98:9","trueBody":{"id":3954,"nodeType":"Block","src":"24943:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":3950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:9","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":3951,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3934,"src":"24999:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3949,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2697,"src":"24964:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3952,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3953,"nodeType":"RevertStatement","src":"24957:48:9"}]}}]},"documentation":{"id":3932,"nodeType":"StructuredDocumentation","src":"24481:312:9","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":3957,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:9","nodeType":"FunctionDefinition","parameters":{"id":3935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3934,"mutability":"mutable","name":"value","nameLocation":"24823:5:9","nodeType":"VariableDeclaration","scope":3957,"src":"24816:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3933,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:9"},"returnParameters":{"id":3938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3937,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:9","nodeType":"VariableDeclaration","scope":3957,"src":"24853:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":3936,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:9","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:9"},"scope":4440,"src":"24798:224:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3982,"nodeType":"Block","src":"25419:150:9","statements":[{"expression":{"id":3970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3965,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3963,"src":"25429:10:9","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3968,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3960,"src":"25449:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3967,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":3966,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:9","typeDescriptions":{}}},"id":3969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:9","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":3971,"nodeType":"ExpressionStatement","src":"25429:26:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3972,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3963,"src":"25469:10:9","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3973,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3960,"src":"25483:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3981,"nodeType":"IfStatement","src":"25465:98:9","trueBody":{"id":3980,"nodeType":"Block","src":"25490:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":3976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:9","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":3977,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3960,"src":"25546:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3975,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2697,"src":"25511:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3979,"nodeType":"RevertStatement","src":"25504:48:9"}]}}]},"documentation":{"id":3958,"nodeType":"StructuredDocumentation","src":"25028:312:9","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":3983,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:9","nodeType":"FunctionDefinition","parameters":{"id":3961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3960,"mutability":"mutable","name":"value","nameLocation":"25370:5:9","nodeType":"VariableDeclaration","scope":3983,"src":"25363:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3959,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:9"},"returnParameters":{"id":3964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3963,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:9","nodeType":"VariableDeclaration","scope":3983,"src":"25400:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":3962,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:9","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:9"},"scope":4440,"src":"25345:224:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4008,"nodeType":"Block","src":"25966:150:9","statements":[{"expression":{"id":3996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3991,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3989,"src":"25976:10:9","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3994,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3986,"src":"25996:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3993,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":3992,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:9","typeDescriptions":{}}},"id":3995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:9","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":3997,"nodeType":"ExpressionStatement","src":"25976:26:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3998,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3989,"src":"26016:10:9","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3999,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3986,"src":"26030:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4007,"nodeType":"IfStatement","src":"26012:98:9","trueBody":{"id":4006,"nodeType":"Block","src":"26037:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":4002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:9","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":4003,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3986,"src":"26093:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4001,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2697,"src":"26058:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4005,"nodeType":"RevertStatement","src":"26051:48:9"}]}}]},"documentation":{"id":3984,"nodeType":"StructuredDocumentation","src":"25575:312:9","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":4009,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:9","nodeType":"FunctionDefinition","parameters":{"id":3987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3986,"mutability":"mutable","name":"value","nameLocation":"25917:5:9","nodeType":"VariableDeclaration","scope":4009,"src":"25910:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3985,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:9"},"returnParameters":{"id":3990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3989,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:9","nodeType":"VariableDeclaration","scope":4009,"src":"25947:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":3988,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:9","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:9"},"scope":4440,"src":"25892:224:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4034,"nodeType":"Block","src":"26513:150:9","statements":[{"expression":{"id":4022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4017,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4015,"src":"26523:10:9","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4020,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4012,"src":"26543:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4019,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":4018,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:9","typeDescriptions":{}}},"id":4021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:9","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":4023,"nodeType":"ExpressionStatement","src":"26523:26:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4024,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4015,"src":"26563:10:9","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4025,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4012,"src":"26577:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4033,"nodeType":"IfStatement","src":"26559:98:9","trueBody":{"id":4032,"nodeType":"Block","src":"26584:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":4028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:9","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":4029,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4012,"src":"26640:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4027,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2697,"src":"26605:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4031,"nodeType":"RevertStatement","src":"26598:48:9"}]}}]},"documentation":{"id":4010,"nodeType":"StructuredDocumentation","src":"26122:312:9","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":4035,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:9","nodeType":"FunctionDefinition","parameters":{"id":4013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4012,"mutability":"mutable","name":"value","nameLocation":"26464:5:9","nodeType":"VariableDeclaration","scope":4035,"src":"26457:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4011,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:9"},"returnParameters":{"id":4016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4015,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:9","nodeType":"VariableDeclaration","scope":4035,"src":"26494:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":4014,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:9","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:9"},"scope":4440,"src":"26439:224:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4060,"nodeType":"Block","src":"27060:150:9","statements":[{"expression":{"id":4048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4043,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4041,"src":"27070:10:9","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4046,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4038,"src":"27090:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4045,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":4044,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:9","typeDescriptions":{}}},"id":4047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:9","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":4049,"nodeType":"ExpressionStatement","src":"27070:26:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4050,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4041,"src":"27110:10:9","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4051,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4038,"src":"27124:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4059,"nodeType":"IfStatement","src":"27106:98:9","trueBody":{"id":4058,"nodeType":"Block","src":"27131:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":4054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:9","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":4055,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4038,"src":"27187:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4053,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2697,"src":"27152:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4057,"nodeType":"RevertStatement","src":"27145:48:9"}]}}]},"documentation":{"id":4036,"nodeType":"StructuredDocumentation","src":"26669:312:9","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":4061,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:9","nodeType":"FunctionDefinition","parameters":{"id":4039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4038,"mutability":"mutable","name":"value","nameLocation":"27011:5:9","nodeType":"VariableDeclaration","scope":4061,"src":"27004:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4037,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:9"},"returnParameters":{"id":4042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4041,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:9","nodeType":"VariableDeclaration","scope":4061,"src":"27041:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":4040,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:9","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:9"},"scope":4440,"src":"26986:224:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4086,"nodeType":"Block","src":"27607:150:9","statements":[{"expression":{"id":4074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4069,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4067,"src":"27617:10:9","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4072,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4064,"src":"27637:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4071,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":4070,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:9","typeDescriptions":{}}},"id":4073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:9","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":4075,"nodeType":"ExpressionStatement","src":"27617:26:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4076,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4067,"src":"27657:10:9","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4077,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4064,"src":"27671:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4085,"nodeType":"IfStatement","src":"27653:98:9","trueBody":{"id":4084,"nodeType":"Block","src":"27678:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":4080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:9","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":4081,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4064,"src":"27734:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4079,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2697,"src":"27699:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4083,"nodeType":"RevertStatement","src":"27692:48:9"}]}}]},"documentation":{"id":4062,"nodeType":"StructuredDocumentation","src":"27216:312:9","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":4087,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:9","nodeType":"FunctionDefinition","parameters":{"id":4065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4064,"mutability":"mutable","name":"value","nameLocation":"27558:5:9","nodeType":"VariableDeclaration","scope":4087,"src":"27551:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4063,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:9"},"returnParameters":{"id":4068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4067,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:9","nodeType":"VariableDeclaration","scope":4087,"src":"27588:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":4066,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:9","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:9"},"scope":4440,"src":"27533:224:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4112,"nodeType":"Block","src":"28147:148:9","statements":[{"expression":{"id":4100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4095,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4093,"src":"28157:10:9","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4098,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4090,"src":"28176:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4097,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":4096,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:9","typeDescriptions":{}}},"id":4099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:9","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":4101,"nodeType":"ExpressionStatement","src":"28157:25:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4102,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4093,"src":"28196:10:9","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4103,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4090,"src":"28210:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4111,"nodeType":"IfStatement","src":"28192:97:9","trueBody":{"id":4110,"nodeType":"Block","src":"28217:72:9","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":4106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:9","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":4107,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4090,"src":"28272:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4105,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2697,"src":"28238:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4109,"nodeType":"RevertStatement","src":"28231:47:9"}]}}]},"documentation":{"id":4088,"nodeType":"StructuredDocumentation","src":"27763:307:9","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":4113,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:9","nodeType":"FunctionDefinition","parameters":{"id":4091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4090,"mutability":"mutable","name":"value","nameLocation":"28099:5:9","nodeType":"VariableDeclaration","scope":4113,"src":"28092:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4089,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:9"},"returnParameters":{"id":4094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4093,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:9","nodeType":"VariableDeclaration","scope":4113,"src":"28129:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":4092,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:9","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:9"},"scope":4440,"src":"28075:220:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4138,"nodeType":"Block","src":"28685:148:9","statements":[{"expression":{"id":4126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4121,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4119,"src":"28695:10:9","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4124,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4116,"src":"28714:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4123,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":4122,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:9","typeDescriptions":{}}},"id":4125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:9","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":4127,"nodeType":"ExpressionStatement","src":"28695:25:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4128,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4119,"src":"28734:10:9","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4129,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4116,"src":"28748:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4137,"nodeType":"IfStatement","src":"28730:97:9","trueBody":{"id":4136,"nodeType":"Block","src":"28755:72:9","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":4132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:9","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":4133,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4116,"src":"28810:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4131,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2697,"src":"28776:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4135,"nodeType":"RevertStatement","src":"28769:47:9"}]}}]},"documentation":{"id":4114,"nodeType":"StructuredDocumentation","src":"28301:307:9","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":4139,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:9","nodeType":"FunctionDefinition","parameters":{"id":4117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4116,"mutability":"mutable","name":"value","nameLocation":"28637:5:9","nodeType":"VariableDeclaration","scope":4139,"src":"28630:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4115,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:9"},"returnParameters":{"id":4120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4119,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:9","nodeType":"VariableDeclaration","scope":4139,"src":"28667:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":4118,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:9","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:9"},"scope":4440,"src":"28613:220:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4164,"nodeType":"Block","src":"29223:148:9","statements":[{"expression":{"id":4152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4147,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4145,"src":"29233:10:9","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4150,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4142,"src":"29252:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4149,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":4148,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:9","typeDescriptions":{}}},"id":4151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:9","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":4153,"nodeType":"ExpressionStatement","src":"29233:25:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4154,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4145,"src":"29272:10:9","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4155,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4142,"src":"29286:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4163,"nodeType":"IfStatement","src":"29268:97:9","trueBody":{"id":4162,"nodeType":"Block","src":"29293:72:9","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":4158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:9","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":4159,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4142,"src":"29348:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4157,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2697,"src":"29314:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4161,"nodeType":"RevertStatement","src":"29307:47:9"}]}}]},"documentation":{"id":4140,"nodeType":"StructuredDocumentation","src":"28839:307:9","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":4165,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:9","nodeType":"FunctionDefinition","parameters":{"id":4143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4142,"mutability":"mutable","name":"value","nameLocation":"29175:5:9","nodeType":"VariableDeclaration","scope":4165,"src":"29168:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4141,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:9"},"returnParameters":{"id":4146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4145,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:9","nodeType":"VariableDeclaration","scope":4165,"src":"29205:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":4144,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:9","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:9"},"scope":4440,"src":"29151:220:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4190,"nodeType":"Block","src":"29761:148:9","statements":[{"expression":{"id":4178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4173,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4171,"src":"29771:10:9","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4176,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4168,"src":"29790:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4175,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":4174,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:9","typeDescriptions":{}}},"id":4177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:9","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":4179,"nodeType":"ExpressionStatement","src":"29771:25:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4180,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4171,"src":"29810:10:9","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4181,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4168,"src":"29824:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4189,"nodeType":"IfStatement","src":"29806:97:9","trueBody":{"id":4188,"nodeType":"Block","src":"29831:72:9","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":4184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:9","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":4185,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4168,"src":"29886:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4183,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2697,"src":"29852:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4187,"nodeType":"RevertStatement","src":"29845:47:9"}]}}]},"documentation":{"id":4166,"nodeType":"StructuredDocumentation","src":"29377:307:9","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":4191,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:9","nodeType":"FunctionDefinition","parameters":{"id":4169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4168,"mutability":"mutable","name":"value","nameLocation":"29713:5:9","nodeType":"VariableDeclaration","scope":4191,"src":"29706:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4167,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:9"},"returnParameters":{"id":4172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4171,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:9","nodeType":"VariableDeclaration","scope":4191,"src":"29743:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":4170,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:9","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:9"},"scope":4440,"src":"29689:220:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4216,"nodeType":"Block","src":"30299:148:9","statements":[{"expression":{"id":4204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4199,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4197,"src":"30309:10:9","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4202,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4194,"src":"30328:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4201,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":4200,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:9","typeDescriptions":{}}},"id":4203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:9","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":4205,"nodeType":"ExpressionStatement","src":"30309:25:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4206,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4197,"src":"30348:10:9","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4207,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4194,"src":"30362:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4215,"nodeType":"IfStatement","src":"30344:97:9","trueBody":{"id":4214,"nodeType":"Block","src":"30369:72:9","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":4210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:9","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":4211,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4194,"src":"30424:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4209,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2697,"src":"30390:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4213,"nodeType":"RevertStatement","src":"30383:47:9"}]}}]},"documentation":{"id":4192,"nodeType":"StructuredDocumentation","src":"29915:307:9","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":4217,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:9","nodeType":"FunctionDefinition","parameters":{"id":4195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4194,"mutability":"mutable","name":"value","nameLocation":"30251:5:9","nodeType":"VariableDeclaration","scope":4217,"src":"30244:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4193,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:9"},"returnParameters":{"id":4198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4197,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:9","nodeType":"VariableDeclaration","scope":4217,"src":"30281:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":4196,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:9","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:9"},"scope":4440,"src":"30227:220:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4242,"nodeType":"Block","src":"30837:148:9","statements":[{"expression":{"id":4230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4225,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4223,"src":"30847:10:9","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4228,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4220,"src":"30866:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4227,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":4226,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:9","typeDescriptions":{}}},"id":4229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:9","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":4231,"nodeType":"ExpressionStatement","src":"30847:25:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4232,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4223,"src":"30886:10:9","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4233,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4220,"src":"30900:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4241,"nodeType":"IfStatement","src":"30882:97:9","trueBody":{"id":4240,"nodeType":"Block","src":"30907:72:9","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":4236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:9","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":4237,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4220,"src":"30962:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4235,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2697,"src":"30928:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4239,"nodeType":"RevertStatement","src":"30921:47:9"}]}}]},"documentation":{"id":4218,"nodeType":"StructuredDocumentation","src":"30453:307:9","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":4243,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:9","nodeType":"FunctionDefinition","parameters":{"id":4221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4220,"mutability":"mutable","name":"value","nameLocation":"30789:5:9","nodeType":"VariableDeclaration","scope":4243,"src":"30782:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4219,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:9"},"returnParameters":{"id":4224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4223,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:9","nodeType":"VariableDeclaration","scope":4243,"src":"30819:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":4222,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:9","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:9"},"scope":4440,"src":"30765:220:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4268,"nodeType":"Block","src":"31375:148:9","statements":[{"expression":{"id":4256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4251,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4249,"src":"31385:10:9","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4254,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4246,"src":"31404:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4253,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":4252,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:9","typeDescriptions":{}}},"id":4255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:9","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":4257,"nodeType":"ExpressionStatement","src":"31385:25:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4258,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4249,"src":"31424:10:9","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4259,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4246,"src":"31438:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4267,"nodeType":"IfStatement","src":"31420:97:9","trueBody":{"id":4266,"nodeType":"Block","src":"31445:72:9","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":4262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:9","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":4263,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4246,"src":"31500:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4261,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2697,"src":"31466:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4265,"nodeType":"RevertStatement","src":"31459:47:9"}]}}]},"documentation":{"id":4244,"nodeType":"StructuredDocumentation","src":"30991:307:9","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":4269,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:9","nodeType":"FunctionDefinition","parameters":{"id":4247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4246,"mutability":"mutable","name":"value","nameLocation":"31327:5:9","nodeType":"VariableDeclaration","scope":4269,"src":"31320:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4245,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:9"},"returnParameters":{"id":4250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4249,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:9","nodeType":"VariableDeclaration","scope":4269,"src":"31357:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":4248,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:9","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:9"},"scope":4440,"src":"31303:220:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4294,"nodeType":"Block","src":"31913:148:9","statements":[{"expression":{"id":4282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4277,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4275,"src":"31923:10:9","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4280,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4272,"src":"31942:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4279,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":4278,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:9","typeDescriptions":{}}},"id":4281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:9","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":4283,"nodeType":"ExpressionStatement","src":"31923:25:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4284,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4275,"src":"31962:10:9","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4285,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4272,"src":"31976:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4293,"nodeType":"IfStatement","src":"31958:97:9","trueBody":{"id":4292,"nodeType":"Block","src":"31983:72:9","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":4288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:9","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":4289,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4272,"src":"32038:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4287,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2697,"src":"32004:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4291,"nodeType":"RevertStatement","src":"31997:47:9"}]}}]},"documentation":{"id":4270,"nodeType":"StructuredDocumentation","src":"31529:307:9","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":4295,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:9","nodeType":"FunctionDefinition","parameters":{"id":4273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4272,"mutability":"mutable","name":"value","nameLocation":"31865:5:9","nodeType":"VariableDeclaration","scope":4295,"src":"31858:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4271,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:9"},"returnParameters":{"id":4276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4275,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:9","nodeType":"VariableDeclaration","scope":4295,"src":"31895:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":4274,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:9","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:9"},"scope":4440,"src":"31841:220:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4320,"nodeType":"Block","src":"32451:148:9","statements":[{"expression":{"id":4308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4303,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4301,"src":"32461:10:9","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4306,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4298,"src":"32480:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4305,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":4304,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:9","typeDescriptions":{}}},"id":4307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:9","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":4309,"nodeType":"ExpressionStatement","src":"32461:25:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4310,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4301,"src":"32500:10:9","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4311,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4298,"src":"32514:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4319,"nodeType":"IfStatement","src":"32496:97:9","trueBody":{"id":4318,"nodeType":"Block","src":"32521:72:9","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":4314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:9","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":4315,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4298,"src":"32576:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4313,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2697,"src":"32542:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4317,"nodeType":"RevertStatement","src":"32535:47:9"}]}}]},"documentation":{"id":4296,"nodeType":"StructuredDocumentation","src":"32067:307:9","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":4321,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:9","nodeType":"FunctionDefinition","parameters":{"id":4299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4298,"mutability":"mutable","name":"value","nameLocation":"32403:5:9","nodeType":"VariableDeclaration","scope":4321,"src":"32396:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4297,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:9"},"returnParameters":{"id":4302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4301,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:9","nodeType":"VariableDeclaration","scope":4321,"src":"32433:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":4300,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:9","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:9"},"scope":4440,"src":"32379:220:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4346,"nodeType":"Block","src":"32989:148:9","statements":[{"expression":{"id":4334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4329,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4327,"src":"32999:10:9","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4332,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4324,"src":"33018:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4331,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":4330,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:9","typeDescriptions":{}}},"id":4333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:9","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":4335,"nodeType":"ExpressionStatement","src":"32999:25:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4336,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4327,"src":"33038:10:9","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4337,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4324,"src":"33052:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4345,"nodeType":"IfStatement","src":"33034:97:9","trueBody":{"id":4344,"nodeType":"Block","src":"33059:72:9","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":4340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:9","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":4341,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4324,"src":"33114:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4339,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2697,"src":"33080:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4343,"nodeType":"RevertStatement","src":"33073:47:9"}]}}]},"documentation":{"id":4322,"nodeType":"StructuredDocumentation","src":"32605:307:9","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":4347,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:9","nodeType":"FunctionDefinition","parameters":{"id":4325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4324,"mutability":"mutable","name":"value","nameLocation":"32941:5:9","nodeType":"VariableDeclaration","scope":4347,"src":"32934:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4323,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:9"},"returnParameters":{"id":4328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4327,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:9","nodeType":"VariableDeclaration","scope":4347,"src":"32971:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":4326,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:9","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:9"},"scope":4440,"src":"32917:220:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4372,"nodeType":"Block","src":"33527:148:9","statements":[{"expression":{"id":4360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4355,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4353,"src":"33537:10:9","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4358,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4350,"src":"33556:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4357,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":4356,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:9","typeDescriptions":{}}},"id":4359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:9","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":4361,"nodeType":"ExpressionStatement","src":"33537:25:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4362,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4353,"src":"33576:10:9","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4363,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4350,"src":"33590:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4371,"nodeType":"IfStatement","src":"33572:97:9","trueBody":{"id":4370,"nodeType":"Block","src":"33597:72:9","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":4366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:9","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":4367,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4350,"src":"33652:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4365,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2697,"src":"33618:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4369,"nodeType":"RevertStatement","src":"33611:47:9"}]}}]},"documentation":{"id":4348,"nodeType":"StructuredDocumentation","src":"33143:307:9","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":4373,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:9","nodeType":"FunctionDefinition","parameters":{"id":4351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4350,"mutability":"mutable","name":"value","nameLocation":"33479:5:9","nodeType":"VariableDeclaration","scope":4373,"src":"33472:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4349,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:9"},"returnParameters":{"id":4354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4353,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:9","nodeType":"VariableDeclaration","scope":4373,"src":"33509:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":4352,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:9","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:9"},"scope":4440,"src":"33455:220:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4398,"nodeType":"Block","src":"34058:146:9","statements":[{"expression":{"id":4386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4381,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4379,"src":"34068:10:9","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4384,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4376,"src":"34086:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4383,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":4382,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:9","typeDescriptions":{}}},"id":4385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:9","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":4387,"nodeType":"ExpressionStatement","src":"34068:24:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4388,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4379,"src":"34106:10:9","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4389,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4376,"src":"34120:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4397,"nodeType":"IfStatement","src":"34102:96:9","trueBody":{"id":4396,"nodeType":"Block","src":"34127:71:9","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":4392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:9","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":4393,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4376,"src":"34181:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4391,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2697,"src":"34148:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4395,"nodeType":"RevertStatement","src":"34141:46:9"}]}}]},"documentation":{"id":4374,"nodeType":"StructuredDocumentation","src":"33681:302:9","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":4399,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:9","nodeType":"FunctionDefinition","parameters":{"id":4377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4376,"mutability":"mutable","name":"value","nameLocation":"34011:5:9","nodeType":"VariableDeclaration","scope":4399,"src":"34004:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4375,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:9"},"returnParameters":{"id":4380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4379,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:9","nodeType":"VariableDeclaration","scope":4399,"src":"34041:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":4378,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:9","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:9"},"scope":4440,"src":"33988:216:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4428,"nodeType":"Block","src":"34444:250:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4407,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4402,"src":"34557:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":4412,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4411,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":4410,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":4414,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:9","memberName":"max","nodeType":"MemberAccess","src":"34573:16:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4409,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4408,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:9","typeDescriptions":{}}},"id":4415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4422,"nodeType":"IfStatement","src":"34553:105:9","trueBody":{"id":4421,"nodeType":"Block","src":"34592:66:9","statements":[{"errorCall":{"arguments":[{"id":4418,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4402,"src":"34641:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4417,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2702,"src":"34613:27:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4420,"nodeType":"RevertStatement","src":"34606:41:9"}]}},{"expression":{"arguments":[{"id":4425,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4402,"src":"34681:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4424,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4423,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:9","typeDescriptions":{}}},"id":4426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":4406,"id":4427,"nodeType":"Return","src":"34667:20:9"}]},"documentation":{"id":4400,"nodeType":"StructuredDocumentation","src":"34210:165:9","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":4429,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:9","nodeType":"FunctionDefinition","parameters":{"id":4403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4402,"mutability":"mutable","name":"value","nameLocation":"34406:5:9","nodeType":"VariableDeclaration","scope":4429,"src":"34398:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4401,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:9"},"returnParameters":{"id":4406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4405,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4429,"src":"34436:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4404,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:9"},"scope":4440,"src":"34380:314:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4438,"nodeType":"Block","src":"34853:87:9","statements":[{"AST":{"nodeType":"YulBlock","src":"34888:46:9","statements":[{"nodeType":"YulAssignment","src":"34902:22:9","value":{"arguments":[{"arguments":[{"name":"b","nodeType":"YulIdentifier","src":"34921:1:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34914:6:9"},"nodeType":"YulFunctionCall","src":"34914:9:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34907:6:9"},"nodeType":"YulFunctionCall","src":"34907:17:9"},"variableNames":[{"name":"u","nodeType":"YulIdentifier","src":"34902:1:9"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4432,"isOffset":false,"isSlot":false,"src":"34921:1:9","valueSize":1},{"declaration":4435,"isOffset":false,"isSlot":false,"src":"34902:1:9","valueSize":1}],"flags":["memory-safe"],"id":4437,"nodeType":"InlineAssembly","src":"34863:71:9"}]},"documentation":{"id":4430,"nodeType":"StructuredDocumentation","src":"34700:90:9","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":4439,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:9","nodeType":"FunctionDefinition","parameters":{"id":4433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4432,"mutability":"mutable","name":"b","nameLocation":"34816:1:9","nodeType":"VariableDeclaration","scope":4439,"src":"34811:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4431,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:9"},"returnParameters":{"id":4436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4435,"mutability":"mutable","name":"u","nameLocation":"34850:1:9","nodeType":"VariableDeclaration","scope":4439,"src":"34842:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4434,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:9"},"scope":4440,"src":"34795:145:9","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4441,"src":"769:34173:9","usedErrors":[2685,2690,2697,2702],"usedEvents":[]}],"src":"192:34751:9"},"id":9},"contracts/DEFIMONEquityToken.sol":{"ast":{"absolutePath":"contracts/DEFIMONEquityToken.sol","exportedSymbols":{"Context":[933],"DEFIMONEquityToken":[5178],"ERC20":[799],"IERC20":[877],"IERC20Errors":[189],"IERC20Metadata":[903],"Math":[2675],"Ownable":[147],"Panic":[985],"ReentrancyGuard":[1054],"SafeCast":[4440]},"id":5179,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4442,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:10"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":4443,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5179,"sourceUnit":800,"src":"58:55:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":4444,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5179,"sourceUnit":148,"src":"114:52:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":4445,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5179,"sourceUnit":1055,"src":"167:59:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"@openzeppelin/contracts/utils/math/Math.sol","id":4446,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5179,"sourceUnit":2676,"src":"227:53:10","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":4448,"name":"ERC20","nameLocations":["524:5:10"],"nodeType":"IdentifierPath","referencedDeclaration":799,"src":"524:5:10"},"id":4449,"nodeType":"InheritanceSpecifier","src":"524:5:10"},{"baseName":{"id":4450,"name":"Ownable","nameLocations":["531:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"531:7:10"},"id":4451,"nodeType":"InheritanceSpecifier","src":"531:7:10"},{"baseName":{"id":4452,"name":"ReentrancyGuard","nameLocations":["540:15:10"],"nodeType":"IdentifierPath","referencedDeclaration":1054,"src":"540:15:10"},"id":4453,"nodeType":"InheritanceSpecifier","src":"540:15:10"}],"canonicalName":"DEFIMONEquityToken","contractDependencies":[],"contractKind":"contract","documentation":{"id":4447,"nodeType":"StructuredDocumentation","src":"282:210:10","text":" @title DEFIMON Equity Token\n @dev ERC-20 токен с механизмом вестинга для распределения долей между основателями\n @author DEFIMON Team"},"fullyImplemented":true,"id":5178,"linearizedBaseContracts":[5178,1054,147,799,189,903,877,933],"name":"DEFIMONEquityToken","nameLocation":"502:18:10","nodeType":"ContractDefinition","nodes":[{"canonicalName":"DEFIMONEquityToken.Participant","id":4474,"members":[{"constant":false,"id":4455,"mutability":"mutable","name":"firstName","nameLocation":"645:9:10","nodeType":"VariableDeclaration","scope":4474,"src":"638:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":4454,"name":"string","nodeType":"ElementaryTypeName","src":"638:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4457,"mutability":"mutable","name":"lastName","nameLocation":"671:8:10","nodeType":"VariableDeclaration","scope":4474,"src":"664:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":4456,"name":"string","nodeType":"ElementaryTypeName","src":"664:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4459,"mutability":"mutable","name":"wallet","nameLocation":"697:6:10","nodeType":"VariableDeclaration","scope":4474,"src":"689:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4458,"name":"address","nodeType":"ElementaryTypeName","src":"689:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4461,"mutability":"mutable","name":"totalAllocation","nameLocation":"721:15:10","nodeType":"VariableDeclaration","scope":4474,"src":"713:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4460,"name":"uint256","nodeType":"ElementaryTypeName","src":"713:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4463,"mutability":"mutable","name":"claimedAmount","nameLocation":"800:13:10","nodeType":"VariableDeclaration","scope":4474,"src":"792:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4462,"name":"uint256","nodeType":"ElementaryTypeName","src":"792:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4465,"mutability":"mutable","name":"vestingStartTime","nameLocation":"882:16:10","nodeType":"VariableDeclaration","scope":4474,"src":"874:24:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4464,"name":"uint256","nodeType":"ElementaryTypeName","src":"874:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4467,"mutability":"mutable","name":"cliffDuration","nameLocation":"964:13:10","nodeType":"VariableDeclaration","scope":4474,"src":"956:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4466,"name":"uint256","nodeType":"ElementaryTypeName","src":"956:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4469,"mutability":"mutable","name":"vestingDuration","nameLocation":"1065:15:10","nodeType":"VariableDeclaration","scope":4474,"src":"1057:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4468,"name":"uint256","nodeType":"ElementaryTypeName","src":"1057:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4471,"mutability":"mutable","name":"isActive","nameLocation":"1178:8:10","nodeType":"VariableDeclaration","scope":4474,"src":"1173:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4470,"name":"bool","nodeType":"ElementaryTypeName","src":"1173:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4473,"mutability":"mutable","name":"isLeaver","nameLocation":"1256:8:10","nodeType":"VariableDeclaration","scope":4474,"src":"1251:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4472,"name":"bool","nodeType":"ElementaryTypeName","src":"1251:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"Participant","nameLocation":"616:11:10","nodeType":"StructDefinition","scope":5178,"src":"609:713:10","visibility":"public"},{"constant":true,"functionSelector":"902d55a5","id":4481,"mutability":"constant","name":"TOTAL_SUPPLY","nameLocation":"1378:12:10","nodeType":"VariableDeclaration","scope":5178,"src":"1354:58:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4475,"name":"uint256","nodeType":"ElementaryTypeName","src":"1354:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000_by_1","typeString":"int_const 10000000000000000000000000"},"id":4480,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31305f3030305f303030","id":4476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1393:10:10","typeDescriptions":{"typeIdentifier":"t_rational_10000000_by_1","typeString":"int_const 10000000"},"value":"10_000_000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":4479,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1406:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":4478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1410:2:10","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"1406:6:10","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"1393:19:10","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000_by_1","typeString":"int_const 10000000000000000000000000"}},"visibility":"public"},{"constant":true,"functionSelector":"0197d972","id":4492,"mutability":"constant","name":"VESTING_PERIOD","nameLocation":"1508:14:10","nodeType":"VariableDeclaration","scope":5178,"src":"1484:63:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4482,"name":"uint256","nodeType":"ElementaryTypeName","src":"1484:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_126144000_by_1","typeString":"int_const 126144000"},"id":4491,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_2102400_by_1","typeString":"int_const 2102400"},"id":4489,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_35040_by_1","typeString":"int_const 35040"},"id":4487,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_1460_by_1","typeString":"int_const 1460"},"id":4485,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"34","id":4483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1525:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"333635","id":4484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1529:3:10","typeDescriptions":{"typeIdentifier":"t_rational_365_by_1","typeString":"int_const 365"},"value":"365"},"src":"1525:7:10","typeDescriptions":{"typeIdentifier":"t_rational_1460_by_1","typeString":"int_const 1460"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3234","id":4486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1535:2:10","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},"src":"1525:12:10","typeDescriptions":{"typeIdentifier":"t_rational_35040_by_1","typeString":"int_const 35040"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3630","id":4488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1540:2:10","typeDescriptions":{"typeIdentifier":"t_rational_60_by_1","typeString":"int_const 60"},"value":"60"},"src":"1525:17:10","typeDescriptions":{"typeIdentifier":"t_rational_2102400_by_1","typeString":"int_const 2102400"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3630","id":4490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1545:2:10","typeDescriptions":{"typeIdentifier":"t_rational_60_by_1","typeString":"int_const 60"},"value":"60"},"src":"1525:22:10","typeDescriptions":{"typeIdentifier":"t_rational_126144000_by_1","typeString":"int_const 126144000"}},"visibility":"public"},{"constant":true,"functionSelector":"8cad856f","id":4503,"mutability":"constant","name":"CLIFF_PERIOD","nameLocation":"1611:12:10","nodeType":"VariableDeclaration","scope":5178,"src":"1587:61:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4493,"name":"uint256","nodeType":"ElementaryTypeName","src":"1587:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_31536000_by_1","typeString":"int_const 31536000"},"id":4502,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_525600_by_1","typeString":"int_const 525600"},"id":4500,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_8760_by_1","typeString":"int_const 8760"},"id":4498,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_365_by_1","typeString":"int_const 365"},"id":4496,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1626:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"333635","id":4495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1630:3:10","typeDescriptions":{"typeIdentifier":"t_rational_365_by_1","typeString":"int_const 365"},"value":"365"},"src":"1626:7:10","typeDescriptions":{"typeIdentifier":"t_rational_365_by_1","typeString":"int_const 365"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3234","id":4497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1636:2:10","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},"src":"1626:12:10","typeDescriptions":{"typeIdentifier":"t_rational_8760_by_1","typeString":"int_const 8760"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3630","id":4499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1641:2:10","typeDescriptions":{"typeIdentifier":"t_rational_60_by_1","typeString":"int_const 60"},"value":"60"},"src":"1626:17:10","typeDescriptions":{"typeIdentifier":"t_rational_525600_by_1","typeString":"int_const 525600"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3630","id":4501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1646:2:10","typeDescriptions":{"typeIdentifier":"t_rational_60_by_1","typeString":"int_const 60"},"value":"60"},"src":"1626:22:10","typeDescriptions":{"typeIdentifier":"t_rational_31536000_by_1","typeString":"int_const 31536000"}},"visibility":"public"},{"constant":true,"functionSelector":"0369d64e","id":4506,"mutability":"constant","name":"CLIFF_PERCENTAGE","nameLocation":"1712:16:10","nodeType":"VariableDeclaration","scope":5178,"src":"1688:45:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4504,"name":"uint256","nodeType":"ElementaryTypeName","src":"1688:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3235","id":4505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1731:2:10","typeDescriptions":{"typeIdentifier":"t_rational_25_by_1","typeString":"int_const 25"},"value":"25"},"visibility":"public"},{"constant":false,"functionSelector":"09e69ede","id":4511,"mutability":"mutable","name":"participants","nameLocation":"1903:12:10","nodeType":"VariableDeclaration","scope":5178,"src":"1864:51:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Participant_$4474_storage_$","typeString":"mapping(address => struct DEFIMONEquityToken.Participant)"},"typeName":{"id":4510,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4507,"name":"address","nodeType":"ElementaryTypeName","src":"1872:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1864:31:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Participant_$4474_storage_$","typeString":"mapping(address => struct DEFIMONEquityToken.Participant)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4509,"nodeType":"UserDefinedTypeName","pathNode":{"id":4508,"name":"Participant","nameLocations":["1883:11:10"],"nodeType":"IdentifierPath","referencedDeclaration":4474,"src":"1883:11:10"},"referencedDeclaration":4474,"src":"1883:11:10","typeDescriptions":{"typeIdentifier":"t_struct$_Participant_$4474_storage_ptr","typeString":"struct DEFIMONEquityToken.Participant"}}},"visibility":"public"},{"constant":false,"functionSelector":"54ffbddb","id":4514,"mutability":"mutable","name":"participantAddresses","nameLocation":"1938:20:10","nodeType":"VariableDeclaration","scope":5178,"src":"1921:37:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[]"},"typeName":{"baseType":{"id":4512,"name":"address","nodeType":"ElementaryTypeName","src":"1921:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4513,"nodeType":"ArrayTypeName","src":"1921:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"public"},{"constant":false,"functionSelector":"0c195d99","id":4516,"mutability":"mutable","name":"totalAllocatedTokens","nameLocation":"1979:20:10","nodeType":"VariableDeclaration","scope":5178,"src":"1964:35:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4515,"name":"uint256","nodeType":"ElementaryTypeName","src":"1964:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"454f7edd","id":4519,"mutability":"mutable","name":"projectValuation","nameLocation":"2020:16:10","nodeType":"VariableDeclaration","scope":5178,"src":"2005:44:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4517,"name":"uint256","nodeType":"ElementaryTypeName","src":"2005:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31305f3030305f303030","id":4518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2039:10:10","typeDescriptions":{"typeIdentifier":"t_rational_10000000_by_1","typeString":"int_const 10000000"},"value":"10_000_000"},"visibility":"public"},{"anonymous":false,"eventSelector":"f022b46c0cbb6c0b8c6b656714a8b3ae81d620f3cd91677f11e3d5f12a9ac7b2","id":4529,"name":"ParticipantAdded","nameLocation":"2112:16:10","nodeType":"EventDefinition","parameters":{"id":4528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4521,"indexed":true,"mutability":"mutable","name":"wallet","nameLocation":"2145:6:10","nodeType":"VariableDeclaration","scope":4529,"src":"2129:22:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4520,"name":"address","nodeType":"ElementaryTypeName","src":"2129:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4523,"indexed":false,"mutability":"mutable","name":"firstName","nameLocation":"2160:9:10","nodeType":"VariableDeclaration","scope":4529,"src":"2153:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4522,"name":"string","nodeType":"ElementaryTypeName","src":"2153:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4525,"indexed":false,"mutability":"mutable","name":"lastName","nameLocation":"2178:8:10","nodeType":"VariableDeclaration","scope":4529,"src":"2171:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4524,"name":"string","nodeType":"ElementaryTypeName","src":"2171:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4527,"indexed":false,"mutability":"mutable","name":"allocation","nameLocation":"2196:10:10","nodeType":"VariableDeclaration","scope":4529,"src":"2188:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4526,"name":"uint256","nodeType":"ElementaryTypeName","src":"2188:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2128:79:10"},"src":"2106:102:10"},{"anonymous":false,"eventSelector":"896e034966eaaf1adc54acc0f257056febbd300c9e47182cf761982cf1f5e430","id":4535,"name":"TokensClaimed","nameLocation":"2219:13:10","nodeType":"EventDefinition","parameters":{"id":4534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4531,"indexed":true,"mutability":"mutable","name":"participant","nameLocation":"2249:11:10","nodeType":"VariableDeclaration","scope":4535,"src":"2233:27:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4530,"name":"address","nodeType":"ElementaryTypeName","src":"2233:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4533,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2270:6:10","nodeType":"VariableDeclaration","scope":4535,"src":"2262:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4532,"name":"uint256","nodeType":"ElementaryTypeName","src":"2262:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2232:45:10"},"src":"2213:65:10"},{"anonymous":false,"eventSelector":"1141d7a121d08ec2ee81022d7b170a7da04182cfbc14498eefcbc65dcb8cf8fb","id":4543,"name":"ParticipantStatusChanged","nameLocation":"2289:24:10","nodeType":"EventDefinition","parameters":{"id":4542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4537,"indexed":true,"mutability":"mutable","name":"participant","nameLocation":"2330:11:10","nodeType":"VariableDeclaration","scope":4543,"src":"2314:27:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4536,"name":"address","nodeType":"ElementaryTypeName","src":"2314:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4539,"indexed":false,"mutability":"mutable","name":"isActive","nameLocation":"2348:8:10","nodeType":"VariableDeclaration","scope":4543,"src":"2343:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4538,"name":"bool","nodeType":"ElementaryTypeName","src":"2343:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4541,"indexed":false,"mutability":"mutable","name":"isLeaver","nameLocation":"2363:8:10","nodeType":"VariableDeclaration","scope":4543,"src":"2358:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4540,"name":"bool","nodeType":"ElementaryTypeName","src":"2358:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2313:59:10"},"src":"2283:90:10"},{"anonymous":false,"eventSelector":"3930f04857ba592ba0a6a96942f8350c2415c0a4aa849021aeefee98bb55b122","id":4547,"name":"VestingStarted","nameLocation":"2384:14:10","nodeType":"EventDefinition","parameters":{"id":4546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4545,"indexed":false,"mutability":"mutable","name":"startTime","nameLocation":"2407:9:10","nodeType":"VariableDeclaration","scope":4547,"src":"2399:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4544,"name":"uint256","nodeType":"ElementaryTypeName","src":"2399:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2398:19:10"},"src":"2378:40:10"},{"body":{"id":4583,"nodeType":"Block","src":"2483:273:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":4550,"name":"participants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4511,"src":"2501:12:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Participant_$4474_storage_$","typeString":"mapping(address => struct DEFIMONEquityToken.Participant storage ref)"}},"id":4553,"indexExpression":{"expression":{"id":4551,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2514:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2518:6:10","memberName":"sender","nodeType":"MemberAccess","src":"2514:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2501:24:10","typeDescriptions":{"typeIdentifier":"t_struct$_Participant_$4474_storage","typeString":"struct DEFIMONEquityToken.Participant storage ref"}},"id":4554,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2526:6:10","memberName":"wallet","nodeType":"MemberAccess","referencedDeclaration":4459,"src":"2501:31:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":4557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2544:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4556,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2536:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4555,"name":"address","nodeType":"ElementaryTypeName","src":"2536:7:10","typeDescriptions":{}}},"id":4558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2536:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2501:45:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f742061207061727469636970616e74","id":4560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2548:19:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_11f62d0fb8618a929bf1cf2b60befadc2f28b23a8c72ce2e7904e6a75d66ecd7","typeString":"literal_string \"Not a participant\""},"value":"Not a participant"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_11f62d0fb8618a929bf1cf2b60befadc2f28b23a8c72ce2e7904e6a75d66ecd7","typeString":"literal_string \"Not a participant\""}],"id":4549,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2493:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2493:75:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4562,"nodeType":"ExpressionStatement","src":"2493:75:10"},{"expression":{"arguments":[{"expression":{"baseExpression":{"id":4564,"name":"participants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4511,"src":"2586:12:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Participant_$4474_storage_$","typeString":"mapping(address => struct DEFIMONEquityToken.Participant storage ref)"}},"id":4567,"indexExpression":{"expression":{"id":4565,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2599:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2603:6:10","memberName":"sender","nodeType":"MemberAccess","src":"2599:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2586:24:10","typeDescriptions":{"typeIdentifier":"t_struct$_Participant_$4474_storage","typeString":"struct DEFIMONEquityToken.Participant storage ref"}},"id":4568,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2611:8:10","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":4471,"src":"2586:33:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061727469636970616e74206973206e6f7420616374697665","id":4569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2621:27:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_ba931d06c9e8c3c863beb457700c9a59ea91d428f30af1b525bf5885a1c343a1","typeString":"literal_string \"Participant is not active\""},"value":"Participant is not active"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ba931d06c9e8c3c863beb457700c9a59ea91d428f30af1b525bf5885a1c343a1","typeString":"literal_string \"Participant is not active\""}],"id":4563,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2578:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2578:71:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4571,"nodeType":"ExpressionStatement","src":"2578:71:10"},{"expression":{"arguments":[{"id":4578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2667:34:10","subExpression":{"expression":{"baseExpression":{"id":4573,"name":"participants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4511,"src":"2668:12:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Participant_$4474_storage_$","typeString":"mapping(address => struct DEFIMONEquityToken.Participant storage ref)"}},"id":4576,"indexExpression":{"expression":{"id":4574,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2681:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2685:6:10","memberName":"sender","nodeType":"MemberAccess","src":"2681:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2668:24:10","typeDescriptions":{"typeIdentifier":"t_struct$_Participant_$4474_storage","typeString":"struct DEFIMONEquityToken.Participant storage ref"}},"id":4577,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2693:8:10","memberName":"isLeaver","nodeType":"MemberAccess","referencedDeclaration":4473,"src":"2668:33:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061727469636970616e7420686173206c656674207468652070726f6a656374","id":4579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2703:34:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_ad0541420148dbb2367eac08105a1bad9f8841b2d3b4ac3c8b42a0aa83e9855f","typeString":"literal_string \"Participant has left the project\""},"value":"Participant has left the project"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ad0541420148dbb2367eac08105a1bad9f8841b2d3b4ac3c8b42a0aa83e9855f","typeString":"literal_string \"Participant has left the project\""}],"id":4572,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2659:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2659:79:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4581,"nodeType":"ExpressionStatement","src":"2659:79:10"},{"id":4582,"nodeType":"PlaceholderStatement","src":"2748:1:10"}]},"id":4584,"name":"onlyParticipant","nameLocation":"2465:15:10","nodeType":"ModifierDefinition","parameters":{"id":4548,"nodeType":"ParameterList","parameters":[],"src":"2480:2:10"},"src":"2456:300:10","virtual":false,"visibility":"internal"},{"body":{"id":4610,"nodeType":"Block","src":"2814:186:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":4589,"name":"participants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4511,"src":"2832:12:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Participant_$4474_storage_$","typeString":"mapping(address => struct DEFIMONEquityToken.Participant storage ref)"}},"id":4591,"indexExpression":{"id":4590,"name":"participant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4586,"src":"2845:11:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2832:25:10","typeDescriptions":{"typeIdentifier":"t_struct$_Participant_$4474_storage","typeString":"struct DEFIMONEquityToken.Participant storage ref"}},"id":4592,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2858:6:10","memberName":"wallet","nodeType":"MemberAccess","referencedDeclaration":4459,"src":"2832:32:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":4595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2876:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4594,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2868:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4593,"name":"address","nodeType":"ElementaryTypeName","src":"2868:7:10","typeDescriptions":{}}},"id":4596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2868:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2832:46:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f742061207061727469636970616e74","id":4598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2880:19:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_11f62d0fb8618a929bf1cf2b60befadc2f28b23a8c72ce2e7904e6a75d66ecd7","typeString":"literal_string \"Not a participant\""},"value":"Not a participant"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_11f62d0fb8618a929bf1cf2b60befadc2f28b23a8c72ce2e7904e6a75d66ecd7","typeString":"literal_string \"Not a participant\""}],"id":4588,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2824:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2824:76:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4600,"nodeType":"ExpressionStatement","src":"2824:76:10"},{"expression":{"arguments":[{"expression":{"baseExpression":{"id":4602,"name":"participants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4511,"src":"2918:12:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Participant_$4474_storage_$","typeString":"mapping(address => struct DEFIMONEquityToken.Participant storage ref)"}},"id":4604,"indexExpression":{"id":4603,"name":"participant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4586,"src":"2931:11:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2918:25:10","typeDescriptions":{"typeIdentifier":"t_struct$_Participant_$4474_storage","typeString":"struct DEFIMONEquityToken.Participant storage ref"}},"id":4605,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2944:8:10","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":4471,"src":"2918:34:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061727469636970616e74206973206e6f7420616374697665","id":4606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2954:27:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_ba931d06c9e8c3c863beb457700c9a59ea91d428f30af1b525bf5885a1c343a1","typeString":"literal_string \"Participant is not active\""},"value":"Participant is not active"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ba931d06c9e8c3c863beb457700c9a59ea91d428f30af1b525bf5885a1c343a1","typeString":"literal_string \"Participant is not active\""}],"id":4601,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2910:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2910:72:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4608,"nodeType":"ExpressionStatement","src":"2910:72:10"},{"id":4609,"nodeType":"PlaceholderStatement","src":"2992:1:10"}]},"id":4611,"name":"onlyActiveParticipant","nameLocation":"2771:21:10","nodeType":"ModifierDefinition","parameters":{"id":4587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4586,"mutability":"mutable","name":"participant","nameLocation":"2801:11:10","nodeType":"VariableDeclaration","scope":4611,"src":"2793:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4585,"name":"address","nodeType":"ElementaryTypeName","src":"2793:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2792:21:10"},"src":"2762:238:10","virtual":false,"visibility":"internal"},{"body":{"id":4632,"nodeType":"Block","src":"3227:51:10","statements":[{"expression":{"arguments":[{"arguments":[{"id":4627,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3251:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_DEFIMONEquityToken_$5178","typeString":"contract DEFIMONEquityToken"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_DEFIMONEquityToken_$5178","typeString":"contract DEFIMONEquityToken"}],"id":4626,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3243:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4625,"name":"address","nodeType":"ElementaryTypeName","src":"3243:7:10","typeDescriptions":{}}},"id":4628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3243:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4629,"name":"TOTAL_SUPPLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4481,"src":"3258:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4624,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"3237:5:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":4630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3237:34:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4631,"nodeType":"ExpressionStatement","src":"3237:34:10"}]},"documentation":{"id":4612,"nodeType":"StructuredDocumentation","src":"3006:135:10","text":" @dev Конструктор контракта\n @param _owner Адрес владельца контракта"},"id":4633,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"444546494d4f4e2045717569747920546f6b656e","id":4617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3180:22:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_75f8d7694284f66e069d911d70fd752c6ea9c505eaba87a06f171248371397d6","typeString":"literal_string \"DEFIMON Equity Token\""},"value":"DEFIMON Equity Token"},{"hexValue":"444658","id":4618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3204:5:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_171b584fadc9741f766345036fc6844cae075220d9b518430fabe4767450cbe9","typeString":"literal_string \"DFX\""},"value":"DFX"}],"id":4619,"kind":"baseConstructorSpecifier","modifierName":{"id":4616,"name":"ERC20","nameLocations":["3174:5:10"],"nodeType":"IdentifierPath","referencedDeclaration":799,"src":"3174:5:10"},"nodeType":"ModifierInvocation","src":"3174:36:10"},{"arguments":[{"id":4621,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4614,"src":"3219:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":4622,"kind":"baseConstructorSpecifier","modifierName":{"id":4620,"name":"Ownable","nameLocations":["3211:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"3211:7:10"},"nodeType":"ModifierInvocation","src":"3211:15:10"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4614,"mutability":"mutable","name":"_owner","nameLocation":"3166:6:10","nodeType":"VariableDeclaration","scope":4633,"src":"3158:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4613,"name":"address","nodeType":"ElementaryTypeName","src":"3158:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3157:16:10"},"returnParameters":{"id":4623,"nodeType":"ParameterList","parameters":[],"src":"3227:0:10"},"scope":5178,"src":"3146:132:10","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4734,"nodeType":"Block","src":"3822:1113:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4648,"name":"_wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4640,"src":"3840:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":4651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3859:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4650,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3851:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4649,"name":"address","nodeType":"ElementaryTypeName","src":"3851:7:10","typeDescriptions":{}}},"id":4652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3851:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3840:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642077616c6c65742061646472657373","id":4654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3863:24:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_dd128e933d077647bedee942f8fad0896dbcf403dd101362daa9f1ef97dd6adf","typeString":"literal_string \"Invalid wallet address\""},"value":"Invalid wallet address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dd128e933d077647bedee942f8fad0896dbcf403dd101362daa9f1ef97dd6adf","typeString":"literal_string \"Invalid wallet address\""}],"id":4647,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3832:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3832:56:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4656,"nodeType":"ExpressionStatement","src":"3832:56:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4658,"name":"_allocationPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4642,"src":"3906:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3930:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3906:25:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4661,"name":"_allocationPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4642,"src":"3935:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"313030","id":4662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3960:3:10","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"3935:28:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3906:57:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420616c6c6f636174696f6e2070657263656e74616765","id":4665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3965:31:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_63e9229a8fa1f95078a5177d9a88a047bdea7f35bc1d19b14eee40f939d3a995","typeString":"literal_string \"Invalid allocation percentage\""},"value":"Invalid allocation percentage"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_63e9229a8fa1f95078a5177d9a88a047bdea7f35bc1d19b14eee40f939d3a995","typeString":"literal_string \"Invalid allocation percentage\""}],"id":4657,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3898:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3898:99:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4667,"nodeType":"ExpressionStatement","src":"3898:99:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":4669,"name":"participants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4511,"src":"4015:12:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Participant_$4474_storage_$","typeString":"mapping(address => struct DEFIMONEquityToken.Participant storage ref)"}},"id":4671,"indexExpression":{"id":4670,"name":"_wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4640,"src":"4028:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4015:21:10","typeDescriptions":{"typeIdentifier":"t_struct$_Participant_$4474_storage","typeString":"struct DEFIMONEquityToken.Participant storage ref"}},"id":4672,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4037:6:10","memberName":"wallet","nodeType":"MemberAccess","referencedDeclaration":4459,"src":"4015:28:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":4675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4055:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4674,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4047:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4673,"name":"address","nodeType":"ElementaryTypeName","src":"4047:7:10","typeDescriptions":{}}},"id":4676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4047:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4015:42:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061727469636970616e7420616c726561647920657869737473","id":4678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4059:28:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_36294eea575da5f966433b0b292d82b2b7eeb81a34c05d7a6850129b8879662c","typeString":"literal_string \"Participant already exists\""},"value":"Participant already exists"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_36294eea575da5f966433b0b292d82b2b7eeb81a34c05d7a6850129b8879662c","typeString":"literal_string \"Participant already exists\""}],"id":4668,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4007:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4007:81:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4680,"nodeType":"ExpressionStatement","src":"4007:81:10"},{"assignments":[4682],"declarations":[{"constant":false,"id":4682,"mutability":"mutable","name":"allocation","nameLocation":"4107:10:10","nodeType":"VariableDeclaration","scope":4734,"src":"4099:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4681,"name":"uint256","nodeType":"ElementaryTypeName","src":"4099:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4688,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4683,"name":"TOTAL_SUPPLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4481,"src":"4120:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4684,"name":"_allocationPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4642,"src":"4135:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4120:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":4686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4159:3:10","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"4120:42:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4099:63:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4690,"name":"totalAllocatedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4516,"src":"4180:20:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4691,"name":"allocation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4682,"src":"4203:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4180:33:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4693,"name":"TOTAL_SUPPLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4481,"src":"4217:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4180:49:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f74616c20616c6c6f636174696f6e206578636565647320737570706c79","id":4695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4231:33:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_39380453c9f7800ce01faa0ded64f5e5e58b5e83489ff3b955fa5b4d55cad1f5","typeString":"literal_string \"Total allocation exceeds supply\""},"value":"Total allocation exceeds supply"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_39380453c9f7800ce01faa0ded64f5e5e58b5e83489ff3b955fa5b4d55cad1f5","typeString":"literal_string \"Total allocation exceeds supply\""}],"id":4689,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4172:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4172:93:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4697,"nodeType":"ExpressionStatement","src":"4172:93:10"},{"expression":{"id":4713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4698,"name":"participants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4511,"src":"4276:12:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Participant_$4474_storage_$","typeString":"mapping(address => struct DEFIMONEquityToken.Participant storage ref)"}},"id":4700,"indexExpression":{"id":4699,"name":"_wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4640,"src":"4289:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4276:21:10","typeDescriptions":{"typeIdentifier":"t_struct$_Participant_$4474_storage","typeString":"struct DEFIMONEquityToken.Participant storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4702,"name":"_firstName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4636,"src":"4337:10:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4703,"name":"_lastName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4638,"src":"4371:9:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4704,"name":"_wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4640,"src":"4402:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4705,"name":"allocation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4682,"src":"4440:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":4706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4479:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":4707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4512:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":4708,"name":"CLIFF_PERIOD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4503,"src":"4616:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4709,"name":"VESTING_PERIOD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4492,"src":"4659:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":4710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4697:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"66616c7365","id":4711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4725:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":4701,"name":"Participant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4474,"src":"4300:11:10","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Participant_$4474_storage_ptr_$","typeString":"type(struct DEFIMONEquityToken.Participant storage pointer)"}},"id":4712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["4326:9:10","4361:8:10","4394:6:10","4423:15:10","4464:13:10","4494:16:10","4601:13:10","4642:15:10","4687:8:10","4715:8:10"],"names":["firstName","lastName","wallet","totalAllocation","claimedAmount","vestingStartTime","cliffDuration","vestingDuration","isActive","isLeaver"],"nodeType":"FunctionCall","src":"4300:441:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Participant_$4474_memory_ptr","typeString":"struct DEFIMONEquityToken.Participant memory"}},"src":"4276:465:10","typeDescriptions":{"typeIdentifier":"t_struct$_Participant_$4474_storage","typeString":"struct DEFIMONEquityToken.Participant storage ref"}},"id":4714,"nodeType":"ExpressionStatement","src":"4276:465:10"},{"expression":{"arguments":[{"id":4718,"name":"_wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4640,"src":"4778:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4715,"name":"participantAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4514,"src":"4752:20:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":4717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4773:4:10","memberName":"push","nodeType":"MemberAccess","src":"4752:25:10","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":4719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4752:34:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4720,"nodeType":"ExpressionStatement","src":"4752:34:10"},{"expression":{"id":4725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4721,"name":"totalAllocatedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4516,"src":"4796:20:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4722,"name":"totalAllocatedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4516,"src":"4819:20:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4723,"name":"allocation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4682,"src":"4842:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4819:33:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4796:56:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4726,"nodeType":"ExpressionStatement","src":"4796:56:10"},{"eventCall":{"arguments":[{"id":4728,"name":"_wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4640,"src":"4885:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4729,"name":"_firstName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4636,"src":"4894:10:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4730,"name":"_lastName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4638,"src":"4906:9:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4731,"name":"allocation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4682,"src":"4917:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4727,"name":"ParticipantAdded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4529,"src":"4868:16:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (address,string memory,string memory,uint256)"}},"id":4732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4868:60:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4733,"nodeType":"EmitStatement","src":"4863:65:10"}]},"documentation":{"id":4634,"nodeType":"StructuredDocumentation","src":"3284:353:10","text":" @dev Добавление участника в систему\n @param _firstName Имя участника\n @param _lastName Фамилия участника\n @param _wallet Адрес кошелька участника\n @param _allocationPercentage Процент доли (например, 40 для 40%)"},"functionSelector":"36ab5d23","id":4735,"implemented":true,"kind":"function","modifiers":[{"id":4645,"kind":"modifierInvocation","modifierName":{"id":4644,"name":"onlyOwner","nameLocations":["3812:9:10"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"3812:9:10"},"nodeType":"ModifierInvocation","src":"3812:9:10"}],"name":"addParticipant","nameLocation":"3651:14:10","nodeType":"FunctionDefinition","parameters":{"id":4643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4636,"mutability":"mutable","name":"_firstName","nameLocation":"3689:10:10","nodeType":"VariableDeclaration","scope":4735,"src":"3675:24:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4635,"name":"string","nodeType":"ElementaryTypeName","src":"3675:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4638,"mutability":"mutable","name":"_lastName","nameLocation":"3723:9:10","nodeType":"VariableDeclaration","scope":4735,"src":"3709:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4637,"name":"string","nodeType":"ElementaryTypeName","src":"3709:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4640,"mutability":"mutable","name":"_wallet","nameLocation":"3750:7:10","nodeType":"VariableDeclaration","scope":4735,"src":"3742:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4639,"name":"address","nodeType":"ElementaryTypeName","src":"3742:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4642,"mutability":"mutable","name":"_allocationPercentage","nameLocation":"3775:21:10","nodeType":"VariableDeclaration","scope":4735,"src":"3767:29:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4641,"name":"uint256","nodeType":"ElementaryTypeName","src":"3767:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3665:137:10"},"returnParameters":{"id":4646,"nodeType":"ParameterList","parameters":[],"src":"3822:0:10"},"scope":5178,"src":"3642:1293:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4790,"nodeType":"Block","src":"5079:472:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4742,"name":"participantAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4514,"src":"5097:20:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":4743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5118:6:10","memberName":"length","nodeType":"MemberAccess","src":"5097:27:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5127:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5097:31:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f207061727469636970616e7473206164646564","id":4746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5130:23:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_bfa4b0e127ac972ceaa42f4b0227d4aa2f83ec1f5f44d3cffbeea103fe373b8e","typeString":"literal_string \"No participants added\""},"value":"No participants added"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bfa4b0e127ac972ceaa42f4b0227d4aa2f83ec1f5f44d3cffbeea103fe373b8e","typeString":"literal_string \"No participants added\""}],"id":4741,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5089:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5089:65:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4748,"nodeType":"ExpressionStatement","src":"5089:65:10"},{"assignments":[4750],"declarations":[{"constant":false,"id":4750,"mutability":"mutable","name":"startTime","nameLocation":"5181:9:10","nodeType":"VariableDeclaration","scope":4790,"src":"5173:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4749,"name":"uint256","nodeType":"ElementaryTypeName","src":"5173:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4753,"initialValue":{"expression":{"id":4751,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5193:5:10","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5199:9:10","memberName":"timestamp","nodeType":"MemberAccess","src":"5193:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5173:35:10"},{"body":{"id":4784,"nodeType":"Block","src":"5282:222:10","statements":[{"assignments":[4766],"declarations":[{"constant":false,"id":4766,"mutability":"mutable","name":"participantAddr","nameLocation":"5304:15:10","nodeType":"VariableDeclaration","scope":4784,"src":"5296:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4765,"name":"address","nodeType":"ElementaryTypeName","src":"5296:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4770,"initialValue":{"baseExpression":{"id":4767,"name":"participantAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4514,"src":"5322:20:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":4769,"indexExpression":{"id":4768,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4755,"src":"5343:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5322:23:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5296:49:10"},{"condition":{"expression":{"baseExpression":{"id":4771,"name":"participants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4511,"src":"5363:12:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Participant_$4474_storage_$","typeString":"mapping(address => struct DEFIMONEquityToken.Participant storage ref)"}},"id":4773,"indexExpression":{"id":4772,"name":"participantAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4766,"src":"5376:15:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5363:29:10","typeDescriptions":{"typeIdentifier":"t_struct$_Participant_$4474_storage","typeString":"struct DEFIMONEquityToken.Participant storage ref"}},"id":4774,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5393:8:10","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":4471,"src":"5363:38:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4783,"nodeType":"IfStatement","src":"5359:135:10","trueBody":{"id":4782,"nodeType":"Block","src":"5403:91:10","statements":[{"expression":{"id":4780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":4775,"name":"participants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4511,"src":"5421:12:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Participant_$4474_storage_$","typeString":"mapping(address => struct DEFIMONEquityToken.Participant storage ref)"}},"id":4777,"indexExpression":{"id":4776,"name":"participantAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4766,"src":"5434:15:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5421:29:10","typeDescriptions":{"typeIdentifier":"t_struct$_Participant_$4474_storage","typeString":"struct DEFIMONEquityToken.Participant storage ref"}},"id":4778,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5451:16:10","memberName":"vestingStartTime","nodeType":"MemberAccess","referencedDeclaration":4465,"src":"5421:46:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4779,"name":"startTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4750,"src":"5470:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5421:58:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4781,"nodeType":"ExpressionStatement","src":"5421:58:10"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4758,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4755,"src":"5244:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4759,"name":"participantAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4514,"src":"5248:20:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":4760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5269:6:10","memberName":"length","nodeType":"MemberAccess","src":"5248:27:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5244:31:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4785,"initializationExpression":{"assignments":[4755],"declarations":[{"constant":false,"id":4755,"mutability":"mutable","name":"i","nameLocation":"5237:1:10","nodeType":"VariableDeclaration","scope":4785,"src":"5232:6:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4754,"name":"uint","nodeType":"ElementaryTypeName","src":"5232:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4757,"initialValue":{"hexValue":"30","id":4756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5241:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5232:10:10"},"loopExpression":{"expression":{"id":4763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5277:3:10","subExpression":{"id":4762,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4755,"src":"5277:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4764,"nodeType":"ExpressionStatement","src":"5277:3:10"},"nodeType":"ForStatement","src":"5227:277:10"},{"eventCall":{"arguments":[{"id":4787,"name":"startTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4750,"src":"5534:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4786,"name":"VestingStarted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4547,"src":"5519:14:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":4788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5519:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4789,"nodeType":"EmitStatement","src":"5514:30:10"}]},"documentation":{"id":4736,"nodeType":"StructuredDocumentation","src":"4941:90:10","text":" @dev Запуск вестинга для всех участников"},"functionSelector":"deb36e32","id":4791,"implemented":true,"kind":"function","modifiers":[{"id":4739,"kind":"modifierInvocation","modifierName":{"id":4738,"name":"onlyOwner","nameLocations":["5069:9:10"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"5069:9:10"},"nodeType":"ModifierInvocation","src":"5069:9:10"}],"name":"startVesting","nameLocation":"5045:12:10","nodeType":"FunctionDefinition","parameters":{"id":4737,"nodeType":"ParameterList","parameters":[],"src":"5057:2:10"},"returnParameters":{"id":4740,"nodeType":"ParameterList","parameters":[],"src":"5079:0:10"},"scope":5178,"src":"5036:515:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4843,"nodeType":"Block","src":"5734:371:10","statements":[{"assignments":[4800],"declarations":[{"constant":false,"id":4800,"mutability":"mutable","name":"claimableAmount","nameLocation":"5752:15:10","nodeType":"VariableDeclaration","scope":4843,"src":"5744:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4799,"name":"uint256","nodeType":"ElementaryTypeName","src":"5744:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4805,"initialValue":{"arguments":[{"expression":{"id":4802,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5787:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5791:6:10","memberName":"sender","nodeType":"MemberAccess","src":"5787:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4801,"name":"getVestedBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4975,"src":"5770:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":4804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5770:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5744:54:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4807,"name":"claimableAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4800,"src":"5816:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5834:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5816:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f20746f6b656e7320617661696c61626c6520666f7220636c61696d","id":4810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5837:31:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_f6b6cf7016efa501486950119b41c3c9ed5c3a8fa9317fc01ea50ca9165fe740","typeString":"literal_string \"No tokens available for claim\""},"value":"No tokens available for claim"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f6b6cf7016efa501486950119b41c3c9ed5c3a8fa9317fc01ea50ca9165fe740","typeString":"literal_string \"No tokens available for claim\""}],"id":4806,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5808:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5808:61:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4812,"nodeType":"ExpressionStatement","src":"5808:61:10"},{"expression":{"id":4825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":4813,"name":"participants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4511,"src":"5880:12:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Participant_$4474_storage_$","typeString":"mapping(address => struct DEFIMONEquityToken.Participant storage ref)"}},"id":4816,"indexExpression":{"expression":{"id":4814,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5893:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5897:6:10","memberName":"sender","nodeType":"MemberAccess","src":"5893:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5880:24:10","typeDescriptions":{"typeIdentifier":"t_struct$_Participant_$4474_storage","typeString":"struct DEFIMONEquityToken.Participant storage ref"}},"id":4817,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5905:13:10","memberName":"claimedAmount","nodeType":"MemberAccess","referencedDeclaration":4463,"src":"5880:38:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":4818,"name":"participants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4511,"src":"5921:12:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Participant_$4474_storage_$","typeString":"mapping(address => struct DEFIMONEquityToken.Participant storage ref)"}},"id":4821,"indexExpression":{"expression":{"id":4819,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5934:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5938:6:10","memberName":"sender","nodeType":"MemberAccess","src":"5934:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5921:24:10","typeDescriptions":{"typeIdentifier":"t_struct$_Participant_$4474_storage","typeString":"struct DEFIMONEquityToken.Participant storage ref"}},"id":4822,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5946:13:10","memberName":"claimedAmount","nodeType":"MemberAccess","referencedDeclaration":4463,"src":"5921:38:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4823,"name":"claimableAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4800,"src":"5962:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5921:56:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5880:97:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4826,"nodeType":"ExpressionStatement","src":"5880:97:10"},{"expression":{"arguments":[{"arguments":[{"id":4830,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"6005:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_DEFIMONEquityToken_$5178","typeString":"contract DEFIMONEquityToken"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_DEFIMONEquityToken_$5178","typeString":"contract DEFIMONEquityToken"}],"id":4829,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5997:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4828,"name":"address","nodeType":"ElementaryTypeName","src":"5997:7:10","typeDescriptions":{}}},"id":4831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5997:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4832,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6012:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6016:6:10","memberName":"sender","nodeType":"MemberAccess","src":"6012:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4834,"name":"claimableAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4800,"src":"6024:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4827,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"5987:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":4835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5987:53:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4836,"nodeType":"ExpressionStatement","src":"5987:53:10"},{"eventCall":{"arguments":[{"expression":{"id":4838,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6070:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6074:6:10","memberName":"sender","nodeType":"MemberAccess","src":"6070:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4840,"name":"claimableAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4800,"src":"6082:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4837,"name":"TokensClaimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4535,"src":"6056:13:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":4841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6056:42:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4842,"nodeType":"EmitStatement","src":"6051:47:10"}]},"documentation":{"id":4792,"nodeType":"StructuredDocumentation","src":"5557:105:10","text":" @dev Получение размороженных токенов участником"},"functionSelector":"e74f3fbb","id":4844,"implemented":true,"kind":"function","modifiers":[{"id":4795,"kind":"modifierInvocation","modifierName":{"id":4794,"name":"nonReentrant","nameLocations":["5705:12:10"],"nodeType":"IdentifierPath","referencedDeclaration":1018,"src":"5705:12:10"},"nodeType":"ModifierInvocation","src":"5705:12:10"},{"id":4797,"kind":"modifierInvocation","modifierName":{"id":4796,"name":"onlyParticipant","nameLocations":["5718:15:10"],"nodeType":"IdentifierPath","referencedDeclaration":4584,"src":"5718:15:10"},"nodeType":"ModifierInvocation","src":"5718:15:10"}],"name":"claimVestedTokens","nameLocation":"5676:17:10","nodeType":"FunctionDefinition","parameters":{"id":4793,"nodeType":"ParameterList","parameters":[],"src":"5693:2:10"},"returnParameters":{"id":4798,"nodeType":"ParameterList","parameters":[],"src":"5734:0:10"},"scope":5178,"src":"5667:438:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4974,"nodeType":"Block","src":"6472:1979:10","statements":[{"assignments":[4854],"declarations":[{"constant":false,"id":4854,"mutability":"mutable","name":"participant","nameLocation":"6502:11:10","nodeType":"VariableDeclaration","scope":4974,"src":"6482:31:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Participant_$4474_storage_ptr","typeString":"struct DEFIMONEquityToken.Participant"},"typeName":{"id":4853,"nodeType":"UserDefinedTypeName","pathNode":{"id":4852,"name":"Participant","nameLocations":["6482:11:10"],"nodeType":"IdentifierPath","referencedDeclaration":4474,"src":"6482:11:10"},"referencedDeclaration":4474,"src":"6482:11:10","typeDescriptions":{"typeIdentifier":"t_struct$_Participant_$4474_storage_ptr","typeString":"struct DEFIMONEquityToken.Participant"}},"visibility":"internal"}],"id":4858,"initialValue":{"baseExpression":{"id":4855,"name":"participants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4511,"src":"6516:12:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Participant_$4474_storage_$","typeString":"mapping(address => struct DEFIMONEquityToken.Participant storage ref)"}},"id":4857,"indexExpression":{"id":4856,"name":"_participant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4847,"src":"6529:12:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6516:26:10","typeDescriptions":{"typeIdentifier":"t_struct$_Participant_$4474_storage","typeString":"struct DEFIMONEquityToken.Participant storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6482:60:10"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4859,"name":"participant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4854,"src":"6565:11:10","typeDescriptions":{"typeIdentifier":"t_struct$_Participant_$4474_storage_ptr","typeString":"struct DEFIMONEquityToken.Participant storage pointer"}},"id":4860,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6577:6:10","memberName":"wallet","nodeType":"MemberAccess","referencedDeclaration":4459,"src":"6565:18:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":4863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6595:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4862,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6587:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4861,"name":"address","nodeType":"ElementaryTypeName","src":"6587:7:10","typeDescriptions":{}}},"id":4864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6587:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6565:32:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":4868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6601:21:10","subExpression":{"expression":{"id":4866,"name":"participant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4854,"src":"6602:11:10","typeDescriptions":{"typeIdentifier":"t_struct$_Participant_$4474_storage_ptr","typeString":"struct DEFIMONEquityToken.Participant storage pointer"}},"id":4867,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6614:8:10","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":4471,"src":"6602:20:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6565:57:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"expression":{"id":4870,"name":"participant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4854,"src":"6626:11:10","typeDescriptions":{"typeIdentifier":"t_struct$_Participant_$4474_storage_ptr","typeString":"struct DEFIMONEquityToken.Participant storage pointer"}},"id":4871,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6638:8:10","memberName":"isLeaver","nodeType":"MemberAccess","referencedDeclaration":4473,"src":"6626:20:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6565:81:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4876,"nodeType":"IfStatement","src":"6561:120:10","trueBody":{"id":4875,"nodeType":"Block","src":"6648:33:10","statements":[{"expression":{"hexValue":"30","id":4873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6669:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4851,"id":4874,"nodeType":"Return","src":"6662:8:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4877,"name":"participant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4854,"src":"6695:11:10","typeDescriptions":{"typeIdentifier":"t_struct$_Participant_$4474_storage_ptr","typeString":"struct DEFIMONEquityToken.Participant storage pointer"}},"id":4878,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6707:16:10","memberName":"vestingStartTime","nodeType":"MemberAccess","referencedDeclaration":4465,"src":"6695:28:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6727:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6695:33:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4884,"nodeType":"IfStatement","src":"6691:117:10","trueBody":{"id":4883,"nodeType":"Block","src":"6730:78:10","statements":[{"expression":{"hexValue":"30","id":4881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6751:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4851,"id":4882,"nodeType":"Return","src":"6744:8:10"}]}},{"assignments":[4886],"declarations":[{"constant":false,"id":4886,"mutability":"mutable","name":"timeElapsed","nameLocation":"6826:11:10","nodeType":"VariableDeclaration","scope":4974,"src":"6818:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4885,"name":"uint256","nodeType":"ElementaryTypeName","src":"6818:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4892,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4887,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6840:5:10","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6846:9:10","memberName":"timestamp","nodeType":"MemberAccess","src":"6840:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":4889,"name":"participant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4854,"src":"6858:11:10","typeDescriptions":{"typeIdentifier":"t_struct$_Participant_$4474_storage_ptr","typeString":"struct DEFIMONEquityToken.Participant storage pointer"}},"id":4890,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6870:16:10","memberName":"vestingStartTime","nodeType":"MemberAccess","referencedDeclaration":4465,"src":"6858:28:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6840:46:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6818:68:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4893,"name":"timeElapsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4886,"src":"6993:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4894,"name":"participant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4854,"src":"7007:11:10","typeDescriptions":{"typeIdentifier":"t_struct$_Participant_$4474_storage_ptr","typeString":"struct DEFIMONEquityToken.Participant storage pointer"}},"id":4895,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7019:13:10","memberName":"cliffDuration","nodeType":"MemberAccess","referencedDeclaration":4467,"src":"7007:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6993:39:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4900,"nodeType":"IfStatement","src":"6989:78:10","trueBody":{"id":4899,"nodeType":"Block","src":"7034:33:10","statements":[{"expression":{"hexValue":"30","id":4897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7055:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4851,"id":4898,"nodeType":"Return","src":"7048:8:10"}]}},{"assignments":[4902],"declarations":[{"constant":false,"id":4902,"mutability":"mutable","name":"totalVested","nameLocation":"7189:11:10","nodeType":"VariableDeclaration","scope":4974,"src":"7181:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4901,"name":"uint256","nodeType":"ElementaryTypeName","src":"7181:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4903,"nodeType":"VariableDeclarationStatement","src":"7181:19:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4904,"name":"timeElapsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4886,"src":"7223:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":4905,"name":"participant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4854,"src":"7238:11:10","typeDescriptions":{"typeIdentifier":"t_struct$_Participant_$4474_storage_ptr","typeString":"struct DEFIMONEquityToken.Participant storage pointer"}},"id":4906,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7250:15:10","memberName":"vestingDuration","nodeType":"MemberAccess","referencedDeclaration":4469,"src":"7238:27:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7223:42:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4959,"nodeType":"Block","src":"7431:724:10","statements":[{"assignments":[4915],"declarations":[{"constant":false,"id":4915,"mutability":"mutable","name":"vestingProgress","nameLocation":"7521:15:10","nodeType":"VariableDeclaration","scope":4959,"src":"7513:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4914,"name":"uint256","nodeType":"ElementaryTypeName","src":"7513:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4920,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4916,"name":"timeElapsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4886,"src":"7539:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":4917,"name":"participant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4854,"src":"7553:11:10","typeDescriptions":{"typeIdentifier":"t_struct$_Participant_$4474_storage_ptr","typeString":"struct DEFIMONEquityToken.Participant storage pointer"}},"id":4918,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7565:13:10","memberName":"cliffDuration","nodeType":"MemberAccess","referencedDeclaration":4467,"src":"7553:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7539:39:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7513:65:10"},{"assignments":[4922],"declarations":[{"constant":false,"id":4922,"mutability":"mutable","name":"remainingVestingTime","nameLocation":"7600:20:10","nodeType":"VariableDeclaration","scope":4959,"src":"7592:28:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4921,"name":"uint256","nodeType":"ElementaryTypeName","src":"7592:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4928,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4923,"name":"participant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4854,"src":"7623:11:10","typeDescriptions":{"typeIdentifier":"t_struct$_Participant_$4474_storage_ptr","typeString":"struct DEFIMONEquityToken.Participant storage pointer"}},"id":4924,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7635:15:10","memberName":"vestingDuration","nodeType":"MemberAccess","referencedDeclaration":4469,"src":"7623:27:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":4925,"name":"participant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4854,"src":"7653:11:10","typeDescriptions":{"typeIdentifier":"t_struct$_Participant_$4474_storage_ptr","typeString":"struct DEFIMONEquityToken.Participant storage pointer"}},"id":4926,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7665:13:10","memberName":"cliffDuration","nodeType":"MemberAccess","referencedDeclaration":4467,"src":"7653:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7623:55:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7592:86:10"},{"assignments":[4930],"declarations":[{"constant":false,"id":4930,"mutability":"mutable","name":"cliffTokens","nameLocation":"7827:11:10","nodeType":"VariableDeclaration","scope":4959,"src":"7819:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4929,"name":"uint256","nodeType":"ElementaryTypeName","src":"7819:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4937,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4931,"name":"participant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4854,"src":"7841:11:10","typeDescriptions":{"typeIdentifier":"t_struct$_Participant_$4474_storage_ptr","typeString":"struct DEFIMONEquityToken.Participant storage pointer"}},"id":4932,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7853:15:10","memberName":"totalAllocation","nodeType":"MemberAccess","referencedDeclaration":4461,"src":"7841:27:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4933,"name":"CLIFF_PERCENTAGE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4506,"src":"7871:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7841:46:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":4935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7890:3:10","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"7841:52:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7819:74:10"},{"assignments":[4939],"declarations":[{"constant":false,"id":4939,"mutability":"mutable","name":"remainingTokens","nameLocation":"7915:15:10","nodeType":"VariableDeclaration","scope":4959,"src":"7907:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4938,"name":"uint256","nodeType":"ElementaryTypeName","src":"7907:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4944,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4940,"name":"participant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4854,"src":"7933:11:10","typeDescriptions":{"typeIdentifier":"t_struct$_Participant_$4474_storage_ptr","typeString":"struct DEFIMONEquityToken.Participant storage pointer"}},"id":4941,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7945:15:10","memberName":"totalAllocation","nodeType":"MemberAccess","referencedDeclaration":4461,"src":"7933:27:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4942,"name":"cliffTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4930,"src":"7963:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7933:41:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7907:67:10"},{"assignments":[4946],"declarations":[{"constant":false,"id":4946,"mutability":"mutable","name":"progressiveTokens","nameLocation":"7996:17:10","nodeType":"VariableDeclaration","scope":4959,"src":"7988:25:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4945,"name":"uint256","nodeType":"ElementaryTypeName","src":"7988:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4952,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4947,"name":"remainingTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4939,"src":"8016:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4948,"name":"vestingProgress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4915,"src":"8034:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8016:33:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4950,"name":"remainingVestingTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4922,"src":"8052:20:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8016:56:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7988:84:10"},{"expression":{"id":4957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4953,"name":"totalVested","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4902,"src":"8099:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4954,"name":"cliffTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4930,"src":"8113:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4955,"name":"progressiveTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4946,"src":"8127:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8113:31:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8099:45:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4958,"nodeType":"ExpressionStatement","src":"8099:45:10"}]},"id":4960,"nodeType":"IfStatement","src":"7219:936:10","trueBody":{"id":4913,"nodeType":"Block","src":"7267:158:10","statements":[{"expression":{"id":4911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4908,"name":"totalVested","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4902,"src":"7373:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4909,"name":"participant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4854,"src":"7387:11:10","typeDescriptions":{"typeIdentifier":"t_struct$_Participant_$4474_storage_ptr","typeString":"struct DEFIMONEquityToken.Participant storage pointer"}},"id":4910,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7399:15:10","memberName":"totalAllocation","nodeType":"MemberAccess","referencedDeclaration":4461,"src":"7387:27:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7373:41:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4912,"nodeType":"ExpressionStatement","src":"7373:41:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4961,"name":"totalVested","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4902,"src":"8306:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":4962,"name":"participant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4854,"src":"8320:11:10","typeDescriptions":{"typeIdentifier":"t_struct$_Participant_$4474_storage_ptr","typeString":"struct DEFIMONEquityToken.Participant storage pointer"}},"id":4963,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8332:13:10","memberName":"claimedAmount","nodeType":"MemberAccess","referencedDeclaration":4463,"src":"8320:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8306:39:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4971,"nodeType":"IfStatement","src":"8302:116:10","trueBody":{"id":4970,"nodeType":"Block","src":"8347:71:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4965,"name":"totalVested","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4902,"src":"8368:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":4966,"name":"participant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4854,"src":"8382:11:10","typeDescriptions":{"typeIdentifier":"t_struct$_Participant_$4474_storage_ptr","typeString":"struct DEFIMONEquityToken.Participant storage pointer"}},"id":4967,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8394:13:10","memberName":"claimedAmount","nodeType":"MemberAccess","referencedDeclaration":4463,"src":"8382:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8368:39:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4851,"id":4969,"nodeType":"Return","src":"8361:46:10"}]}},{"expression":{"hexValue":"30","id":4972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8443:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4851,"id":4973,"nodeType":"Return","src":"8436:8:10"}]},"documentation":{"id":4845,"nodeType":"StructuredDocumentation","src":"6111:278:10","text":" @dev Получение баланса размороженных токенов для участника\n @param _participant Адрес участника\n @return Количество доступных для получения токенов"},"functionSelector":"7f58b9d3","id":4975,"implemented":true,"kind":"function","modifiers":[],"name":"getVestedBalance","nameLocation":"6403:16:10","nodeType":"FunctionDefinition","parameters":{"id":4848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4847,"mutability":"mutable","name":"_participant","nameLocation":"6428:12:10","nodeType":"VariableDeclaration","scope":4975,"src":"6420:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4846,"name":"address","nodeType":"ElementaryTypeName","src":"6420:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6419:22:10"},"returnParameters":{"id":4851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4850,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4975,"src":"6463:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4849,"name":"uint256","nodeType":"ElementaryTypeName","src":"6463:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6462:9:10"},"scope":5178,"src":"6394:2057:10","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":5010,"nodeType":"Block","src":"8923:197:10","statements":[{"expression":{"id":4995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":4990,"name":"participants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4511,"src":"8933:12:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Participant_$4474_storage_$","typeString":"mapping(address => struct DEFIMONEquityToken.Participant storage ref)"}},"id":4992,"indexExpression":{"id":4991,"name":"_participant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4978,"src":"8946:12:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8933:26:10","typeDescriptions":{"typeIdentifier":"t_struct$_Participant_$4474_storage","typeString":"struct DEFIMONEquityToken.Participant storage ref"}},"id":4993,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8960:8:10","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":4471,"src":"8933:35:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4994,"name":"_isActive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4980,"src":"8971:9:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8933:47:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4996,"nodeType":"ExpressionStatement","src":"8933:47:10"},{"expression":{"id":5002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":4997,"name":"participants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4511,"src":"8990:12:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Participant_$4474_storage_$","typeString":"mapping(address => struct DEFIMONEquityToken.Participant storage ref)"}},"id":4999,"indexExpression":{"id":4998,"name":"_participant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4978,"src":"9003:12:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8990:26:10","typeDescriptions":{"typeIdentifier":"t_struct$_Participant_$4474_storage","typeString":"struct DEFIMONEquityToken.Participant storage ref"}},"id":5000,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9017:8:10","memberName":"isLeaver","nodeType":"MemberAccess","referencedDeclaration":4473,"src":"8990:35:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5001,"name":"_isLeaver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4982,"src":"9028:9:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8990:47:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5003,"nodeType":"ExpressionStatement","src":"8990:47:10"},{"eventCall":{"arguments":[{"id":5005,"name":"_participant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4978,"src":"9078:12:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5006,"name":"_isActive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4980,"src":"9092:9:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":5007,"name":"_isLeaver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4982,"src":"9103:9:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":5004,"name":"ParticipantStatusChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4543,"src":"9053:24:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bool_$_t_bool_$returns$__$","typeString":"function (address,bool,bool)"}},"id":5008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9053:60:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5009,"nodeType":"EmitStatement","src":"9048:65:10"}]},"documentation":{"id":4976,"nodeType":"StructuredDocumentation","src":"8457:292:10","text":" @dev Изменение статуса участника (только для владельца)\n @param _participant Адрес участника\n @param _isActive Активен ли участник\n @param _isLeaver Покинул ли проект"},"functionSelector":"54ba2daf","id":5011,"implemented":true,"kind":"function","modifiers":[{"id":4985,"kind":"modifierInvocation","modifierName":{"id":4984,"name":"onlyOwner","nameLocations":["8877:9:10"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"8877:9:10"},"nodeType":"ModifierInvocation","src":"8877:9:10"},{"arguments":[{"id":4987,"name":"_participant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4978,"src":"8909:12:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":4988,"kind":"modifierInvocation","modifierName":{"id":4986,"name":"onlyActiveParticipant","nameLocations":["8887:21:10"],"nodeType":"IdentifierPath","referencedDeclaration":4611,"src":"8887:21:10"},"nodeType":"ModifierInvocation","src":"8887:35:10"}],"name":"setParticipantStatus","nameLocation":"8763:20:10","nodeType":"FunctionDefinition","parameters":{"id":4983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4978,"mutability":"mutable","name":"_participant","nameLocation":"8801:12:10","nodeType":"VariableDeclaration","scope":5011,"src":"8793:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4977,"name":"address","nodeType":"ElementaryTypeName","src":"8793:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4980,"mutability":"mutable","name":"_isActive","nameLocation":"8828:9:10","nodeType":"VariableDeclaration","scope":5011,"src":"8823:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4979,"name":"bool","nodeType":"ElementaryTypeName","src":"8823:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4982,"mutability":"mutable","name":"_isLeaver","nameLocation":"8852:9:10","nodeType":"VariableDeclaration","scope":5011,"src":"8847:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4981,"name":"bool","nodeType":"ElementaryTypeName","src":"8847:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8783:84:10"},"returnParameters":{"id":4989,"nodeType":"ParameterList","parameters":[],"src":"8923:0:10"},"scope":5178,"src":"8754:366:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5058,"nodeType":"Block","src":"9996:395:10","statements":[{"assignments":[5035],"declarations":[{"constant":false,"id":5035,"mutability":"mutable","name":"participant","nameLocation":"10026:11:10","nodeType":"VariableDeclaration","scope":5058,"src":"10006:31:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Participant_$4474_storage_ptr","typeString":"struct DEFIMONEquityToken.Participant"},"typeName":{"id":5034,"nodeType":"UserDefinedTypeName","pathNode":{"id":5033,"name":"Participant","nameLocations":["10006:11:10"],"nodeType":"IdentifierPath","referencedDeclaration":4474,"src":"10006:11:10"},"referencedDeclaration":4474,"src":"10006:11:10","typeDescriptions":{"typeIdentifier":"t_struct$_Participant_$4474_storage_ptr","typeString":"struct DEFIMONEquityToken.Participant"}},"visibility":"internal"}],"id":5039,"initialValue":{"baseExpression":{"id":5036,"name":"participants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4511,"src":"10040:12:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Participant_$4474_storage_$","typeString":"mapping(address => struct DEFIMONEquityToken.Participant storage ref)"}},"id":5038,"indexExpression":{"id":5037,"name":"_participant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5014,"src":"10053:12:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10040:26:10","typeDescriptions":{"typeIdentifier":"t_struct$_Participant_$4474_storage","typeString":"struct DEFIMONEquityToken.Participant storage ref"}},"nodeType":"VariableDeclarationStatement","src":"10006:60:10"},{"expression":{"components":[{"expression":{"id":5040,"name":"participant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5035,"src":"10097:11:10","typeDescriptions":{"typeIdentifier":"t_struct$_Participant_$4474_storage_ptr","typeString":"struct DEFIMONEquityToken.Participant storage pointer"}},"id":5041,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10109:9:10","memberName":"firstName","nodeType":"MemberAccess","referencedDeclaration":4455,"src":"10097:21:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"expression":{"id":5042,"name":"participant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5035,"src":"10132:11:10","typeDescriptions":{"typeIdentifier":"t_struct$_Participant_$4474_storage_ptr","typeString":"struct DEFIMONEquityToken.Participant storage pointer"}},"id":5043,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10144:8:10","memberName":"lastName","nodeType":"MemberAccess","referencedDeclaration":4457,"src":"10132:20:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"expression":{"id":5044,"name":"participant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5035,"src":"10166:11:10","typeDescriptions":{"typeIdentifier":"t_struct$_Participant_$4474_storage_ptr","typeString":"struct DEFIMONEquityToken.Participant storage pointer"}},"id":5045,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10178:6:10","memberName":"wallet","nodeType":"MemberAccess","referencedDeclaration":4459,"src":"10166:18:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":5046,"name":"participant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5035,"src":"10198:11:10","typeDescriptions":{"typeIdentifier":"t_struct$_Participant_$4474_storage_ptr","typeString":"struct DEFIMONEquityToken.Participant storage pointer"}},"id":5047,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10210:15:10","memberName":"totalAllocation","nodeType":"MemberAccess","referencedDeclaration":4461,"src":"10198:27:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5048,"name":"participant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5035,"src":"10239:11:10","typeDescriptions":{"typeIdentifier":"t_struct$_Participant_$4474_storage_ptr","typeString":"struct DEFIMONEquityToken.Participant storage pointer"}},"id":5049,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10251:13:10","memberName":"claimedAmount","nodeType":"MemberAccess","referencedDeclaration":4463,"src":"10239:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5050,"name":"participant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5035,"src":"10278:11:10","typeDescriptions":{"typeIdentifier":"t_struct$_Participant_$4474_storage_ptr","typeString":"struct DEFIMONEquityToken.Participant storage pointer"}},"id":5051,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10290:16:10","memberName":"vestingStartTime","nodeType":"MemberAccess","referencedDeclaration":4465,"src":"10278:28:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5052,"name":"participant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5035,"src":"10320:11:10","typeDescriptions":{"typeIdentifier":"t_struct$_Participant_$4474_storage_ptr","typeString":"struct DEFIMONEquityToken.Participant storage pointer"}},"id":5053,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10332:8:10","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":4471,"src":"10320:20:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":5054,"name":"participant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5035,"src":"10354:11:10","typeDescriptions":{"typeIdentifier":"t_struct$_Participant_$4474_storage_ptr","typeString":"struct DEFIMONEquityToken.Participant storage pointer"}},"id":5055,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10366:8:10","memberName":"isLeaver","nodeType":"MemberAccess","referencedDeclaration":4473,"src":"10354:20:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":5056,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10083:301:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_string_storage_$_t_string_storage_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$_t_bool_$","typeString":"tuple(string storage ref,string storage ref,address,uint256,uint256,uint256,bool,bool)"}},"functionReturnParameters":5032,"id":5057,"nodeType":"Return","src":"10076:308:10"}]},"documentation":{"id":5012,"nodeType":"StructuredDocumentation","src":"9126:553:10","text":" @dev Получение информации об участнике\n @param _participant Адрес участника\n @return firstName Имя\n @return lastName Фамилия\n @return wallet Адрес кошелька\n @return totalAllocation Общая доля\n @return claimedAmount Полученные токены\n @return vestingStartTime Время начала вестинга\n @return isActive Активен ли\n @return isLeaver Покинул ли проект"},"functionSelector":"71bdce55","id":5059,"implemented":true,"kind":"function","modifiers":[],"name":"getParticipantInfo","nameLocation":"9693:18:10","nodeType":"FunctionDefinition","parameters":{"id":5015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5014,"mutability":"mutable","name":"_participant","nameLocation":"9720:12:10","nodeType":"VariableDeclaration","scope":5059,"src":"9712:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5013,"name":"address","nodeType":"ElementaryTypeName","src":"9712:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9711:22:10"},"returnParameters":{"id":5032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5017,"mutability":"mutable","name":"firstName","nameLocation":"9780:9:10","nodeType":"VariableDeclaration","scope":5059,"src":"9766:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5016,"name":"string","nodeType":"ElementaryTypeName","src":"9766:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5019,"mutability":"mutable","name":"lastName","nameLocation":"9813:8:10","nodeType":"VariableDeclaration","scope":5059,"src":"9799:22:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5018,"name":"string","nodeType":"ElementaryTypeName","src":"9799:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5021,"mutability":"mutable","name":"wallet","nameLocation":"9839:6:10","nodeType":"VariableDeclaration","scope":5059,"src":"9831:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5020,"name":"address","nodeType":"ElementaryTypeName","src":"9831:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5023,"mutability":"mutable","name":"totalAllocation","nameLocation":"9863:15:10","nodeType":"VariableDeclaration","scope":5059,"src":"9855:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5022,"name":"uint256","nodeType":"ElementaryTypeName","src":"9855:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5025,"mutability":"mutable","name":"claimedAmount","nameLocation":"9896:13:10","nodeType":"VariableDeclaration","scope":5059,"src":"9888:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5024,"name":"uint256","nodeType":"ElementaryTypeName","src":"9888:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5027,"mutability":"mutable","name":"vestingStartTime","nameLocation":"9927:16:10","nodeType":"VariableDeclaration","scope":5059,"src":"9919:24:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5026,"name":"uint256","nodeType":"ElementaryTypeName","src":"9919:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5029,"mutability":"mutable","name":"isActive","nameLocation":"9958:8:10","nodeType":"VariableDeclaration","scope":5059,"src":"9953:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5028,"name":"bool","nodeType":"ElementaryTypeName","src":"9953:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5031,"mutability":"mutable","name":"isLeaver","nameLocation":"9981:8:10","nodeType":"VariableDeclaration","scope":5059,"src":"9976:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5030,"name":"bool","nodeType":"ElementaryTypeName","src":"9976:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9756:239:10"},"scope":5178,"src":"9684:707:10","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":5068,"nodeType":"Block","src":"10645:44:10","statements":[{"expression":{"id":5066,"name":"participantAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4514,"src":"10662:20:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"functionReturnParameters":5065,"id":5067,"nodeType":"Return","src":"10655:27:10"}]},"documentation":{"id":5060,"nodeType":"StructuredDocumentation","src":"10397:164:10","text":" @dev Получение списка всех адресов участников\n @return Массив адресов участников"},"functionSelector":"68811431","id":5069,"implemented":true,"kind":"function","modifiers":[],"name":"getAllParticipantAddresses","nameLocation":"10575:26:10","nodeType":"FunctionDefinition","parameters":{"id":5061,"nodeType":"ParameterList","parameters":[],"src":"10601:2:10"},"returnParameters":{"id":5065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5064,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5069,"src":"10627:16:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5062,"name":"address","nodeType":"ElementaryTypeName","src":"10627:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5063,"nodeType":"ArrayTypeName","src":"10627:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"10626:18:10"},"scope":5178,"src":"10566:123:10","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":5078,"nodeType":"Block","src":"10917:51:10","statements":[{"expression":{"expression":{"id":5075,"name":"participantAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4514,"src":"10934:20:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":5076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10955:6:10","memberName":"length","nodeType":"MemberAccess","src":"10934:27:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5074,"id":5077,"nodeType":"Return","src":"10927:34:10"}]},"documentation":{"id":5070,"nodeType":"StructuredDocumentation","src":"10695:154:10","text":" @dev Получение общего количества участников\n @return Количество участников"},"functionSelector":"ad605729","id":5079,"implemented":true,"kind":"function","modifiers":[],"name":"getParticipantCount","nameLocation":"10863:19:10","nodeType":"FunctionDefinition","parameters":{"id":5071,"nodeType":"ParameterList","parameters":[],"src":"10882:2:10"},"returnParameters":{"id":5074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5073,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5079,"src":"10908:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5072,"name":"uint256","nodeType":"ElementaryTypeName","src":"10908:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10907:9:10"},"scope":5178,"src":"10854:114:10","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":5089,"nodeType":"Block","src":"11236:59:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5085,"name":"TOTAL_SUPPLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4481,"src":"11253:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5086,"name":"totalAllocatedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4516,"src":"11268:20:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11253:35:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5084,"id":5088,"nodeType":"Return","src":"11246:42:10"}]},"documentation":{"id":5080,"nodeType":"StructuredDocumentation","src":"10974:195:10","text":" @dev Получение оставшихся нераспределенных токенов\n @return Количество нераспределенных токенов"},"functionSelector":"af35ae27","id":5090,"implemented":true,"kind":"function","modifiers":[],"name":"getRemainingTokens","nameLocation":"11183:18:10","nodeType":"FunctionDefinition","parameters":{"id":5081,"nodeType":"ParameterList","parameters":[],"src":"11201:2:10"},"returnParameters":{"id":5084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5083,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5090,"src":"11227:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5082,"name":"uint256","nodeType":"ElementaryTypeName","src":"11227:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11226:9:10"},"scope":5178,"src":"11174:121:10","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":5098,"nodeType":"Block","src":"11502:40:10","statements":[{"expression":{"id":5096,"name":"projectValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4519,"src":"11519:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5095,"id":5097,"nodeType":"Return","src":"11512:23:10"}]},"documentation":{"id":5091,"nodeType":"StructuredDocumentation","src":"11301:133:10","text":" @dev Получение текущей оценки проекта\n @return Оценка в долларах"},"functionSelector":"bbe8b382","id":5099,"implemented":true,"kind":"function","modifiers":[],"name":"getProjectValuation","nameLocation":"11448:19:10","nodeType":"FunctionDefinition","parameters":{"id":5092,"nodeType":"ParameterList","parameters":[],"src":"11467:2:10"},"returnParameters":{"id":5095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5094,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5099,"src":"11493:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5093,"name":"uint256","nodeType":"ElementaryTypeName","src":"11493:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11492:9:10"},"scope":5178,"src":"11439:103:10","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":5118,"nodeType":"Block","src":"11812:115:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5108,"name":"_newValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5102,"src":"11830:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11846:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11830:17:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"56616c756174696f6e206d75737420626520706f736974697665","id":5111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11849:28:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c3083844e6ae086f32b4b28fe6399ccf6a6a41e8265ee628860987b496b4a69c","typeString":"literal_string \"Valuation must be positive\""},"value":"Valuation must be positive"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c3083844e6ae086f32b4b28fe6399ccf6a6a41e8265ee628860987b496b4a69c","typeString":"literal_string \"Valuation must be positive\""}],"id":5107,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11822:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11822:56:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5113,"nodeType":"ExpressionStatement","src":"11822:56:10"},{"expression":{"id":5116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5114,"name":"projectValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4519,"src":"11888:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5115,"name":"_newValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5102,"src":"11907:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11888:32:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5117,"nodeType":"ExpressionStatement","src":"11888:32:10"}]},"documentation":{"id":5100,"nodeType":"StructuredDocumentation","src":"11548:185:10","text":" @dev Обновление оценки проекта (только для владельца)\n @param _newValuation Новая оценка в долларах"},"functionSelector":"e3b591ea","id":5119,"implemented":true,"kind":"function","modifiers":[{"id":5105,"kind":"modifierInvocation","modifierName":{"id":5104,"name":"onlyOwner","nameLocations":["11802:9:10"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"11802:9:10"},"nodeType":"ModifierInvocation","src":"11802:9:10"}],"name":"updateProjectValuation","nameLocation":"11747:22:10","nodeType":"FunctionDefinition","parameters":{"id":5103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5102,"mutability":"mutable","name":"_newValuation","nameLocation":"11778:13:10","nodeType":"VariableDeclaration","scope":5119,"src":"11770:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5101,"name":"uint256","nodeType":"ElementaryTypeName","src":"11770:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11769:23:10"},"returnParameters":{"id":5106,"nodeType":"ParameterList","parameters":[],"src":"11812:0:10"},"scope":5178,"src":"11738:189:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5138,"nodeType":"Block","src":"12195:75:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5125,"name":"projectValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4519,"src":"12212:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":5128,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12231:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":5127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12235:2:10","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"12231:6:10","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"12212:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5134,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":5130,"name":"TOTAL_SUPPLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4481,"src":"12241:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":5133,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12256:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":5132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12260:2:10","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"12256:6:10","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"12241:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5135,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"12240:23:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12212:51:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5124,"id":5137,"nodeType":"Return","src":"12205:58:10"}]},"documentation":{"id":5120,"nodeType":"StructuredDocumentation","src":"11933:200:10","text":" @dev Получение стоимости одного токена\n @return Стоимость токена в долларах (с 18 десятичными знаками)"},"functionSelector":"4b94f50e","id":5139,"implemented":true,"kind":"function","modifiers":[],"name":"getTokenPrice","nameLocation":"12147:13:10","nodeType":"FunctionDefinition","parameters":{"id":5121,"nodeType":"ParameterList","parameters":[],"src":"12160:2:10"},"returnParameters":{"id":5124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5123,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5139,"src":"12186:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5122,"name":"uint256","nodeType":"ElementaryTypeName","src":"12186:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12185:9:10"},"scope":5178,"src":"12138:132:10","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[409],"body":{"id":5156,"nodeType":"Block","src":"12466:110:10","statements":[{"expression":{"arguments":[{"hexValue":"66616c7365","id":5150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12484:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"446972656374207472616e7366657273206e6f7420616c6c6f7765642e2055736520636c61696d566573746564546f6b656e732829","id":5151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12491:55:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_5c0b74416edcfc67accf704e19bd57cb9217cae2440f64edf8ce8a1ca27508d5","typeString":"literal_string \"Direct transfers not allowed. Use claimVestedTokens()\""},"value":"Direct transfers not allowed. Use claimVestedTokens()"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5c0b74416edcfc67accf704e19bd57cb9217cae2440f64edf8ce8a1ca27508d5","typeString":"literal_string \"Direct transfers not allowed. Use claimVestedTokens()\""}],"id":5149,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12476:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12476:71:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5153,"nodeType":"ExpressionStatement","src":"12476:71:10"},{"expression":{"hexValue":"66616c7365","id":5154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12564:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":5148,"id":5155,"nodeType":"Return","src":"12557:12:10"}]},"functionSelector":"a9059cbb","id":5157,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"12390:8:10","nodeType":"FunctionDefinition","overrides":{"id":5145,"nodeType":"OverrideSpecifier","overrides":[],"src":"12442:8:10"},"parameters":{"id":5144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5141,"mutability":"mutable","name":"to","nameLocation":"12407:2:10","nodeType":"VariableDeclaration","scope":5157,"src":"12399:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5140,"name":"address","nodeType":"ElementaryTypeName","src":"12399:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5143,"mutability":"mutable","name":"amount","nameLocation":"12419:6:10","nodeType":"VariableDeclaration","scope":5157,"src":"12411:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5142,"name":"uint256","nodeType":"ElementaryTypeName","src":"12411:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12398:28:10"},"returnParameters":{"id":5148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5147,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5157,"src":"12460:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5146,"name":"bool","nodeType":"ElementaryTypeName","src":"12460:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12459:6:10"},"scope":5178,"src":"12381:195:10","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[482],"body":{"id":5176,"nodeType":"Block","src":"12685:110:10","statements":[{"expression":{"arguments":[{"hexValue":"66616c7365","id":5170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12703:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"446972656374207472616e7366657273206e6f7420616c6c6f7765642e2055736520636c61696d566573746564546f6b656e732829","id":5171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12710:55:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_5c0b74416edcfc67accf704e19bd57cb9217cae2440f64edf8ce8a1ca27508d5","typeString":"literal_string \"Direct transfers not allowed. Use claimVestedTokens()\""},"value":"Direct transfers not allowed. Use claimVestedTokens()"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5c0b74416edcfc67accf704e19bd57cb9217cae2440f64edf8ce8a1ca27508d5","typeString":"literal_string \"Direct transfers not allowed. Use claimVestedTokens()\""}],"id":5169,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12695:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12695:71:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5173,"nodeType":"ExpressionStatement","src":"12695:71:10"},{"expression":{"hexValue":"66616c7365","id":5174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12783:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":5168,"id":5175,"nodeType":"Return","src":"12776:12:10"}]},"functionSelector":"23b872dd","id":5177,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"12591:12:10","nodeType":"FunctionDefinition","overrides":{"id":5165,"nodeType":"OverrideSpecifier","overrides":[],"src":"12661:8:10"},"parameters":{"id":5164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5159,"mutability":"mutable","name":"from","nameLocation":"12612:4:10","nodeType":"VariableDeclaration","scope":5177,"src":"12604:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5158,"name":"address","nodeType":"ElementaryTypeName","src":"12604:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5161,"mutability":"mutable","name":"to","nameLocation":"12626:2:10","nodeType":"VariableDeclaration","scope":5177,"src":"12618:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5160,"name":"address","nodeType":"ElementaryTypeName","src":"12618:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5163,"mutability":"mutable","name":"amount","nameLocation":"12638:6:10","nodeType":"VariableDeclaration","scope":5177,"src":"12630:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5162,"name":"uint256","nodeType":"ElementaryTypeName","src":"12630:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12603:42:10"},"returnParameters":{"id":5168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5167,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5177,"src":"12679:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5166,"name":"bool","nodeType":"ElementaryTypeName","src":"12679:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12678:6:10"},"scope":5178,"src":"12582:213:10","stateMutability":"nonpayable","virtual":true,"visibility":"public"}],"scope":5179,"src":"493:12304:10","usedErrors":[13,18,159,164,169,178,183,188,999],"usedEvents":[24,811,820,4529,4535,4543,4547]}],"src":"32:12766:10"},"id":10}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201ae1761b6a3c5d2458c4708d3276257bae9b475b3c412a0ebb4584fd955181ef64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE 0xE1 PUSH23 0x1B6A3C5D2458C4708D3276257BAE9B475B3C412A0EBB45 DUP5 REVERT SWAP6 MLOAD DUP2 0xEF PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"657:1315:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;657:1315:6;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201ae1761b6a3c5d2458c4708d3276257bae9b475b3c412a0ebb4584fd955181ef64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE 0xE1 PUSH23 0x1B6A3C5D2458C4708D3276257BAE9B475B3C412A0EBB45 DUP5 REVERT SWAP6 MLOAD DUP2 0xEF PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"657:1315:6:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208fcce410fc5cfa45c0c6616aebc7576f43e383fe066bccc2ae83043f7884d82164736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 0xCC 0xE4 LT 0xFC 0x5C STATICCALL GASLIMIT 0xC0 0xC6 PUSH2 0x6AEB 0xC7 JUMPI PUSH16 0x43E383FE066BCCC2AE83043F7884D821 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"281:31863:8:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;281:31863:8;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208fcce410fc5cfa45c0c6616aebc7576f43e383fe066bccc2ae83043f7884d82164736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 0xCC 0xE4 LT 0xFC 0x5C STATICCALL GASLIMIT 0xC0 0xC6 PUSH2 0x6AEB 0xC7 JUMPI PUSH16 0x43E383FE066BCCC2AE83043F7884D821 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"281:31863:8:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e57f6f97354ac8290db535b2e3f293653f51ec40206fa8b2bf9396c18f98af2564736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 PUSH32 0x6F97354AC8290DB535B2E3F293653F51EC40206FA8B2BF9396C18F98AF256473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"769:34173:9:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;769:34173:9;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e57f6f97354ac8290db535b2e3f293653f51ec40206fa8b2bf9396c18f98af2564736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 PUSH32 0x6F97354AC8290DB535B2E3F293653F51EC40206FA8B2BF9396C18F98AF256473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"769:34173:9:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"contracts/DEFIMONEquityToken.sol":{"DEFIMONEquityToken":{"abi":[{"inputs":[{"internalType":"address","name":"_owner","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"wallet","type":"address"},{"indexed":false,"internalType":"string","name":"firstName","type":"string"},{"indexed":false,"internalType":"string","name":"lastName","type":"string"},{"indexed":false,"internalType":"uint256","name":"allocation","type":"uint256"}],"name":"ParticipantAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"participant","type":"address"},{"indexed":false,"internalType":"bool","name":"isActive","type":"bool"},{"indexed":false,"internalType":"bool","name":"isLeaver","type":"bool"}],"name":"ParticipantStatusChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"participant","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"TokensClaimed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"startTime","type":"uint256"}],"name":"VestingStarted","type":"event"},{"inputs":[],"name":"CLIFF_PERCENTAGE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"CLIFF_PERIOD","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"TOTAL_SUPPLY","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"VESTING_PERIOD","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_firstName","type":"string"},{"internalType":"string","name":"_lastName","type":"string"},{"internalType":"address","name":"_wallet","type":"address"},{"internalType":"uint256","name":"_allocationPercentage","type":"uint256"}],"name":"addParticipant","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"claimVestedTokens","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getAllParticipantAddresses","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getParticipantCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_participant","type":"address"}],"name":"getParticipantInfo","outputs":[{"internalType":"string","name":"firstName","type":"string"},{"internalType":"string","name":"lastName","type":"string"},{"internalType":"address","name":"wallet","type":"address"},{"internalType":"uint256","name":"totalAllocation","type":"uint256"},{"internalType":"uint256","name":"claimedAmount","type":"uint256"},{"internalType":"uint256","name":"vestingStartTime","type":"uint256"},{"internalType":"bool","name":"isActive","type":"bool"},{"internalType":"bool","name":"isLeaver","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getProjectValuation","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getRemainingTokens","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTokenPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_participant","type":"address"}],"name":"getVestedBalance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"participantAddresses","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"participants","outputs":[{"internalType":"string","name":"firstName","type":"string"},{"internalType":"string","name":"lastName","type":"string"},{"internalType":"address","name":"wallet","type":"address"},{"internalType":"uint256","name":"totalAllocation","type":"uint256"},{"internalType":"uint256","name":"claimedAmount","type":"uint256"},{"internalType":"uint256","name":"vestingStartTime","type":"uint256"},{"internalType":"uint256","name":"cliffDuration","type":"uint256"},{"internalType":"uint256","name":"vestingDuration","type":"uint256"},{"internalType":"bool","name":"isActive","type":"bool"},{"internalType":"bool","name":"isLeaver","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"projectValuation","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_participant","type":"address"},{"internalType":"bool","name":"_isActive","type":"bool"},{"internalType":"bool","name":"_isLeaver","type":"bool"}],"name":"setParticipantStatus","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"startVesting","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalAllocatedTokens","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_newValuation","type":"uint256"}],"name":"updateProjectValuation","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_1007":{"entryPoint":null,"id":1007,"parameterSlots":0,"returnSlots":0},"@_336":{"entryPoint":null,"id":336,"parameterSlots":2,"returnSlots":0},"@_4633":{"entryPoint":null,"id":4633,"parameterSlots":1,"returnSlots":0},"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_mint_639":{"entryPoint":354,"id":639,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":272,"id":146,"parameterSlots":1,"returnSlots":0},"@_update_606":{"entryPoint":416,"id":606,"parameterSlots":3,"returnSlots":0},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":723,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":1142,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":855,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":938,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":795,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x41":{"entryPoint":773,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:3994:11","statements":[{"nodeType":"YulBlock","src":"6:3:11","statements":[]},{"body":{"nodeType":"YulBlock","src":"95:209:11","statements":[{"body":{"nodeType":"YulBlock","src":"141:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"150:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"153:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"143:6:11"},"nodeType":"YulFunctionCall","src":"143:12:11"},"nodeType":"YulExpressionStatement","src":"143:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"116:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"125:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"112:3:11"},"nodeType":"YulFunctionCall","src":"112:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"137:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"108:3:11"},"nodeType":"YulFunctionCall","src":"108:32:11"},"nodeType":"YulIf","src":"105:52:11"},{"nodeType":"YulVariableDeclaration","src":"166:29:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"185:9:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"179:5:11"},"nodeType":"YulFunctionCall","src":"179:16:11"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"170:5:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"258:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"267:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"270:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"260:6:11"},"nodeType":"YulFunctionCall","src":"260:12:11"},"nodeType":"YulExpressionStatement","src":"260:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"217:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"228:5:11"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"243:3:11","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"248:1:11","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"239:3:11"},"nodeType":"YulFunctionCall","src":"239:11:11"},{"kind":"number","nodeType":"YulLiteral","src":"252:1:11","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"235:3:11"},"nodeType":"YulFunctionCall","src":"235:19:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"224:3:11"},"nodeType":"YulFunctionCall","src":"224:31:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"214:2:11"},"nodeType":"YulFunctionCall","src":"214:42:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"207:6:11"},"nodeType":"YulFunctionCall","src":"207:50:11"},"nodeType":"YulIf","src":"204:70:11"},{"nodeType":"YulAssignment","src":"283:15:11","value":{"name":"value","nodeType":"YulIdentifier","src":"293:5:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"283:6:11"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"61:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"72:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"84:6:11","type":""}],"src":"14:290:11"},{"body":{"nodeType":"YulBlock","src":"341:95:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"358:1:11","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"365:3:11","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"370:10:11","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"361:3:11"},"nodeType":"YulFunctionCall","src":"361:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"351:6:11"},"nodeType":"YulFunctionCall","src":"351:31:11"},"nodeType":"YulExpressionStatement","src":"351:31:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"398:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"401:4:11","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"391:6:11"},"nodeType":"YulFunctionCall","src":"391:15:11"},"nodeType":"YulExpressionStatement","src":"391:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"422:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"425:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"415:6:11"},"nodeType":"YulFunctionCall","src":"415:15:11"},"nodeType":"YulExpressionStatement","src":"415:15:11"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"309:127:11"},{"body":{"nodeType":"YulBlock","src":"496:325:11","statements":[{"nodeType":"YulAssignment","src":"506:22:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"520:1:11","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"523:4:11"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"516:3:11"},"nodeType":"YulFunctionCall","src":"516:12:11"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"506:6:11"}]},{"nodeType":"YulVariableDeclaration","src":"537:38:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"567:4:11"},{"kind":"number","nodeType":"YulLiteral","src":"573:1:11","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"563:3:11"},"nodeType":"YulFunctionCall","src":"563:12:11"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"541:18:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"614:31:11","statements":[{"nodeType":"YulAssignment","src":"616:27:11","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"630:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"638:4:11","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"626:3:11"},"nodeType":"YulFunctionCall","src":"626:17:11"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"616:6:11"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"594:18:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"587:6:11"},"nodeType":"YulFunctionCall","src":"587:26:11"},"nodeType":"YulIf","src":"584:61:11"},{"body":{"nodeType":"YulBlock","src":"704:111:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"725:1:11","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"732:3:11","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"737:10:11","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"728:3:11"},"nodeType":"YulFunctionCall","src":"728:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"718:6:11"},"nodeType":"YulFunctionCall","src":"718:31:11"},"nodeType":"YulExpressionStatement","src":"718:31:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"769:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"772:4:11","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"762:6:11"},"nodeType":"YulFunctionCall","src":"762:15:11"},"nodeType":"YulExpressionStatement","src":"762:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"797:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"800:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"790:6:11"},"nodeType":"YulFunctionCall","src":"790:15:11"},"nodeType":"YulExpressionStatement","src":"790:15:11"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"660:18:11"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"683:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"691:2:11","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"680:2:11"},"nodeType":"YulFunctionCall","src":"680:14:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"657:2:11"},"nodeType":"YulFunctionCall","src":"657:38:11"},"nodeType":"YulIf","src":"654:161:11"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"476:4:11","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"485:6:11","type":""}],"src":"441:380:11"},{"body":{"nodeType":"YulBlock","src":"882:65:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"899:1:11","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"902:3:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"892:6:11"},"nodeType":"YulFunctionCall","src":"892:14:11"},"nodeType":"YulExpressionStatement","src":"892:14:11"},{"nodeType":"YulAssignment","src":"915:26:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"933:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"936:4:11","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"923:9:11"},"nodeType":"YulFunctionCall","src":"923:18:11"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"915:4:11"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"865:3:11","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"873:4:11","type":""}],"src":"826:121:11"},{"body":{"nodeType":"YulBlock","src":"1033:464:11","statements":[{"body":{"nodeType":"YulBlock","src":"1066:425:11","statements":[{"nodeType":"YulVariableDeclaration","src":"1080:11:11","value":{"kind":"number","nodeType":"YulLiteral","src":"1090:1:11","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1084:2:11","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"1111:2:11"},{"name":"array","nodeType":"YulIdentifier","src":"1115:5:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1104:6:11"},"nodeType":"YulFunctionCall","src":"1104:17:11"},"nodeType":"YulExpressionStatement","src":"1104:17:11"},{"nodeType":"YulVariableDeclaration","src":"1134:31:11","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"1156:2:11"},{"kind":"number","nodeType":"YulLiteral","src":"1160:4:11","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"1146:9:11"},"nodeType":"YulFunctionCall","src":"1146:19:11"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"1138:4:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1178:57:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1201:4:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1211:1:11","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"1218:10:11"},{"kind":"number","nodeType":"YulLiteral","src":"1230:2:11","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1214:3:11"},"nodeType":"YulFunctionCall","src":"1214:19:11"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1207:3:11"},"nodeType":"YulFunctionCall","src":"1207:27:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1197:3:11"},"nodeType":"YulFunctionCall","src":"1197:38:11"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"1182:11:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"1272:23:11","statements":[{"nodeType":"YulAssignment","src":"1274:19:11","value":{"name":"data","nodeType":"YulIdentifier","src":"1289:4:11"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"1274:11:11"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"1254:10:11"},{"kind":"number","nodeType":"YulLiteral","src":"1266:4:11","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1251:2:11"},"nodeType":"YulFunctionCall","src":"1251:20:11"},"nodeType":"YulIf","src":"1248:47:11"},{"nodeType":"YulVariableDeclaration","src":"1308:41:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1322:4:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1332:1:11","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"1339:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"1344:2:11","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1335:3:11"},"nodeType":"YulFunctionCall","src":"1335:12:11"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1328:3:11"},"nodeType":"YulFunctionCall","src":"1328:20:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1318:3:11"},"nodeType":"YulFunctionCall","src":"1318:31:11"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"1312:2:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1362:24:11","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"1375:11:11"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"1366:5:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"1460:21:11","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"1469:5:11"},{"name":"_1","nodeType":"YulIdentifier","src":"1476:2:11"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"1462:6:11"},"nodeType":"YulFunctionCall","src":"1462:17:11"},"nodeType":"YulExpressionStatement","src":"1462:17:11"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"1410:5:11"},{"name":"_2","nodeType":"YulIdentifier","src":"1417:2:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1407:2:11"},"nodeType":"YulFunctionCall","src":"1407:13:11"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1421:26:11","statements":[{"nodeType":"YulAssignment","src":"1423:22:11","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"1436:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"1443:1:11","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1432:3:11"},"nodeType":"YulFunctionCall","src":"1432:13:11"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"1423:5:11"}]}]},"pre":{"nodeType":"YulBlock","src":"1403:3:11","statements":[]},"src":"1399:82:11"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"1049:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"1054:2:11","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1046:2:11"},"nodeType":"YulFunctionCall","src":"1046:11:11"},"nodeType":"YulIf","src":"1043:448:11"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"1005:5:11","type":""},{"name":"len","nodeType":"YulTypedName","src":"1012:3:11","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"1017:10:11","type":""}],"src":"952:545:11"},{"body":{"nodeType":"YulBlock","src":"1587:81:11","statements":[{"nodeType":"YulAssignment","src":"1597:65:11","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1612:4:11"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1630:1:11","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"1633:3:11"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1626:3:11"},"nodeType":"YulFunctionCall","src":"1626:11:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1643:1:11","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1639:3:11"},"nodeType":"YulFunctionCall","src":"1639:6:11"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1622:3:11"},"nodeType":"YulFunctionCall","src":"1622:24:11"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1618:3:11"},"nodeType":"YulFunctionCall","src":"1618:29:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1608:3:11"},"nodeType":"YulFunctionCall","src":"1608:40:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1654:1:11","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"1657:3:11"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1650:3:11"},"nodeType":"YulFunctionCall","src":"1650:11:11"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1605:2:11"},"nodeType":"YulFunctionCall","src":"1605:57:11"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"1597:4:11"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1564:4:11","type":""},{"name":"len","nodeType":"YulTypedName","src":"1570:3:11","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"1578:4:11","type":""}],"src":"1502:166:11"},{"body":{"nodeType":"YulBlock","src":"1769:1256:11","statements":[{"nodeType":"YulVariableDeclaration","src":"1779:24:11","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1799:3:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1793:5:11"},"nodeType":"YulFunctionCall","src":"1793:10:11"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"1783:6:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"1846:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1848:16:11"},"nodeType":"YulFunctionCall","src":"1848:18:11"},"nodeType":"YulExpressionStatement","src":"1848:18:11"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"1818:6:11"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1834:2:11","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"1838:1:11","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1830:3:11"},"nodeType":"YulFunctionCall","src":"1830:10:11"},{"kind":"number","nodeType":"YulLiteral","src":"1842:1:11","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1826:3:11"},"nodeType":"YulFunctionCall","src":"1826:18:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1815:2:11"},"nodeType":"YulFunctionCall","src":"1815:30:11"},"nodeType":"YulIf","src":"1812:56:11"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"1921:4:11"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"1959:4:11"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"1953:5:11"},"nodeType":"YulFunctionCall","src":"1953:11:11"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"1927:25:11"},"nodeType":"YulFunctionCall","src":"1927:38:11"},{"name":"newLen","nodeType":"YulIdentifier","src":"1967:6:11"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"1877:43:11"},"nodeType":"YulFunctionCall","src":"1877:97:11"},"nodeType":"YulExpressionStatement","src":"1877:97:11"},{"nodeType":"YulVariableDeclaration","src":"1983:18:11","value":{"kind":"number","nodeType":"YulLiteral","src":"2000:1:11","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"1987:9:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2010:23:11","value":{"kind":"number","nodeType":"YulLiteral","src":"2029:4:11","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"2014:11:11","type":""}]},{"nodeType":"YulAssignment","src":"2042:24:11","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"2055:11:11"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"2042:9:11"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"2112:656:11","statements":[{"nodeType":"YulVariableDeclaration","src":"2126:35:11","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"2145:6:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2157:2:11","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2153:3:11"},"nodeType":"YulFunctionCall","src":"2153:7:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2141:3:11"},"nodeType":"YulFunctionCall","src":"2141:20:11"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"2130:7:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2174:49:11","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2218:4:11"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"2188:29:11"},"nodeType":"YulFunctionCall","src":"2188:35:11"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"2178:6:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2236:10:11","value":{"kind":"number","nodeType":"YulLiteral","src":"2245:1:11","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"2240:1:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"2323:172:11","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2348:6:11"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2366:3:11"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"2371:9:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2362:3:11"},"nodeType":"YulFunctionCall","src":"2362:19:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2356:5:11"},"nodeType":"YulFunctionCall","src":"2356:26:11"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2341:6:11"},"nodeType":"YulFunctionCall","src":"2341:42:11"},"nodeType":"YulExpressionStatement","src":"2341:42:11"},{"nodeType":"YulAssignment","src":"2400:24:11","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2414:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"2422:1:11","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2410:3:11"},"nodeType":"YulFunctionCall","src":"2410:14:11"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2400:6:11"}]},{"nodeType":"YulAssignment","src":"2441:40:11","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"2458:9:11"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"2469:11:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2454:3:11"},"nodeType":"YulFunctionCall","src":"2454:27:11"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"2441:9:11"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2270:1:11"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"2273:7:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2267:2:11"},"nodeType":"YulFunctionCall","src":"2267:14:11"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2282:28:11","statements":[{"nodeType":"YulAssignment","src":"2284:24:11","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2293:1:11"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"2296:11:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2289:3:11"},"nodeType":"YulFunctionCall","src":"2289:19:11"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"2284:1:11"}]}]},"pre":{"nodeType":"YulBlock","src":"2263:3:11","statements":[]},"src":"2259:236:11"},{"body":{"nodeType":"YulBlock","src":"2543:166:11","statements":[{"nodeType":"YulVariableDeclaration","src":"2561:43:11","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2588:3:11"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"2593:9:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2584:3:11"},"nodeType":"YulFunctionCall","src":"2584:19:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2578:5:11"},"nodeType":"YulFunctionCall","src":"2578:26:11"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"2565:9:11","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2628:6:11"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"2640:9:11"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2667:1:11","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"2670:6:11"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2663:3:11"},"nodeType":"YulFunctionCall","src":"2663:14:11"},{"kind":"number","nodeType":"YulLiteral","src":"2679:3:11","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2659:3:11"},"nodeType":"YulFunctionCall","src":"2659:24:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2689:1:11","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2685:3:11"},"nodeType":"YulFunctionCall","src":"2685:6:11"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2655:3:11"},"nodeType":"YulFunctionCall","src":"2655:37:11"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2651:3:11"},"nodeType":"YulFunctionCall","src":"2651:42:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2636:3:11"},"nodeType":"YulFunctionCall","src":"2636:58:11"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2621:6:11"},"nodeType":"YulFunctionCall","src":"2621:74:11"},"nodeType":"YulExpressionStatement","src":"2621:74:11"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"2514:7:11"},{"name":"newLen","nodeType":"YulIdentifier","src":"2523:6:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2511:2:11"},"nodeType":"YulFunctionCall","src":"2511:19:11"},"nodeType":"YulIf","src":"2508:201:11"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2729:4:11"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2743:1:11","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"2746:6:11"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2739:3:11"},"nodeType":"YulFunctionCall","src":"2739:14:11"},{"kind":"number","nodeType":"YulLiteral","src":"2755:1:11","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2735:3:11"},"nodeType":"YulFunctionCall","src":"2735:22:11"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2722:6:11"},"nodeType":"YulFunctionCall","src":"2722:36:11"},"nodeType":"YulExpressionStatement","src":"2722:36:11"}]},"nodeType":"YulCase","src":"2105:663:11","value":{"kind":"number","nodeType":"YulLiteral","src":"2110:1:11","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"2785:234:11","statements":[{"nodeType":"YulVariableDeclaration","src":"2799:14:11","value":{"kind":"number","nodeType":"YulLiteral","src":"2812:1:11","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"2803:5:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"2848:67:11","statements":[{"nodeType":"YulAssignment","src":"2866:35:11","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2885:3:11"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"2890:9:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2881:3:11"},"nodeType":"YulFunctionCall","src":"2881:19:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2875:5:11"},"nodeType":"YulFunctionCall","src":"2875:26:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2866:5:11"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"2829:6:11"},"nodeType":"YulIf","src":"2826:89:11"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2935:4:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2994:5:11"},{"name":"newLen","nodeType":"YulIdentifier","src":"3001:6:11"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"2941:52:11"},"nodeType":"YulFunctionCall","src":"2941:67:11"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2928:6:11"},"nodeType":"YulFunctionCall","src":"2928:81:11"},"nodeType":"YulExpressionStatement","src":"2928:81:11"}]},"nodeType":"YulCase","src":"2777:242:11","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"2085:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"2093:2:11","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2082:2:11"},"nodeType":"YulFunctionCall","src":"2082:14:11"},"nodeType":"YulSwitch","src":"2075:944:11"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"1754:4:11","type":""},{"name":"src","nodeType":"YulTypedName","src":"1760:3:11","type":""}],"src":"1673:1352:11"},{"body":{"nodeType":"YulBlock","src":"3131:102:11","statements":[{"nodeType":"YulAssignment","src":"3141:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3153:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"3164:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3149:3:11"},"nodeType":"YulFunctionCall","src":"3149:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3141:4:11"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3183:9:11"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3198:6:11"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3214:3:11","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"3219:1:11","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3210:3:11"},"nodeType":"YulFunctionCall","src":"3210:11:11"},{"kind":"number","nodeType":"YulLiteral","src":"3223:1:11","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3206:3:11"},"nodeType":"YulFunctionCall","src":"3206:19:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3194:3:11"},"nodeType":"YulFunctionCall","src":"3194:32:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3176:6:11"},"nodeType":"YulFunctionCall","src":"3176:51:11"},"nodeType":"YulExpressionStatement","src":"3176:51:11"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3100:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3111:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3122:4:11","type":""}],"src":"3030:203:11"},{"body":{"nodeType":"YulBlock","src":"3286:174:11","statements":[{"nodeType":"YulAssignment","src":"3296:16:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3307:1:11"},{"name":"y","nodeType":"YulIdentifier","src":"3310:1:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3303:3:11"},"nodeType":"YulFunctionCall","src":"3303:9:11"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"3296:3:11"}]},{"body":{"nodeType":"YulBlock","src":"3343:111:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3364:1:11","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3371:3:11","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"3376:10:11","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3367:3:11"},"nodeType":"YulFunctionCall","src":"3367:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3357:6:11"},"nodeType":"YulFunctionCall","src":"3357:31:11"},"nodeType":"YulExpressionStatement","src":"3357:31:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3408:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3411:4:11","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3401:6:11"},"nodeType":"YulFunctionCall","src":"3401:15:11"},"nodeType":"YulExpressionStatement","src":"3401:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3436:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3439:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3429:6:11"},"nodeType":"YulFunctionCall","src":"3429:15:11"},"nodeType":"YulExpressionStatement","src":"3429:15:11"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3327:1:11"},{"name":"sum","nodeType":"YulIdentifier","src":"3330:3:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3324:2:11"},"nodeType":"YulFunctionCall","src":"3324:10:11"},"nodeType":"YulIf","src":"3321:133:11"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"3269:1:11","type":""},{"name":"y","nodeType":"YulTypedName","src":"3272:1:11","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"3278:3:11","type":""}],"src":"3238:222:11"},{"body":{"nodeType":"YulBlock","src":"3622:188:11","statements":[{"nodeType":"YulAssignment","src":"3632:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3644:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"3655:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3640:3:11"},"nodeType":"YulFunctionCall","src":"3640:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3632:4:11"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3674:9:11"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3689:6:11"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3705:3:11","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"3710:1:11","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3701:3:11"},"nodeType":"YulFunctionCall","src":"3701:11:11"},{"kind":"number","nodeType":"YulLiteral","src":"3714:1:11","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3697:3:11"},"nodeType":"YulFunctionCall","src":"3697:19:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3685:3:11"},"nodeType":"YulFunctionCall","src":"3685:32:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3667:6:11"},"nodeType":"YulFunctionCall","src":"3667:51:11"},"nodeType":"YulExpressionStatement","src":"3667:51:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3738:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"3749:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3734:3:11"},"nodeType":"YulFunctionCall","src":"3734:18:11"},{"name":"value1","nodeType":"YulIdentifier","src":"3754:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3727:6:11"},"nodeType":"YulFunctionCall","src":"3727:34:11"},"nodeType":"YulExpressionStatement","src":"3727:34:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3781:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"3792:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3777:3:11"},"nodeType":"YulFunctionCall","src":"3777:18:11"},{"name":"value2","nodeType":"YulIdentifier","src":"3797:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3770:6:11"},"nodeType":"YulFunctionCall","src":"3770:34:11"},"nodeType":"YulExpressionStatement","src":"3770:34:11"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3575:9:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3586:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3594:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3602:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3613:4:11","type":""}],"src":"3465:345:11"},{"body":{"nodeType":"YulBlock","src":"3916:76:11","statements":[{"nodeType":"YulAssignment","src":"3926:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3938:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"3949:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3934:3:11"},"nodeType":"YulFunctionCall","src":"3934:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3926:4:11"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3968:9:11"},{"name":"value0","nodeType":"YulIdentifier","src":"3979:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3961:6:11"},"nodeType":"YulFunctionCall","src":"3961:25:11"},"nodeType":"YulExpressionStatement","src":"3961:25:11"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3885:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3896:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3907:4:11","type":""}],"src":"3815:177:11"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}","id":11,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405262989680600a553480156200001857600080fd5b5060405162002153380380620021538339810160408190526200003b91620002d3565b806040518060400160405280601481526020017f444546494d4f4e2045717569747920546f6b656e000000000000000000000000815250604051806040016040528060038152602001620888cb60eb1b81525081600390816200009f9190620003aa565b506004620000ae8282620003aa565b5050506001600160a01b038116620000e157604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b620000ec8162000110565b50600160065562000109306a084595161401484a00000062000162565b506200049e565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0382166200018e5760405163ec442f0560e01b815260006004820152602401620000d8565b6200019c60008383620001a0565b5050565b6001600160a01b038316620001cf578060026000828254620001c3919062000476565b90915550620002439050565b6001600160a01b03831660009081526020819052604090205481811015620002245760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401620000d8565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b038216620002615760028054829003905562000280565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051620002c691815260200190565b60405180910390a3505050565b600060208284031215620002e657600080fd5b81516001600160a01b0381168114620002fe57600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200033057607f821691505b6020821081036200035157634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620003a557600081815260208120601f850160051c81016020861015620003805750805b601f850160051c820191505b81811015620003a1578281556001016200038c565b5050505b505050565b81516001600160401b03811115620003c657620003c662000305565b620003de81620003d784546200031b565b8462000357565b602080601f831160018114620004165760008415620003fd5750858301515b600019600386901b1c1916600185901b178555620003a1565b600085815260208120601f198616915b82811015620004475788860151825594840194600190910190840162000426565b5085821015620004665787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b808201808211156200049857634e487b7160e01b600052601160045260246000fd5b92915050565b611ca580620004ae6000396000f3fe608060405234801561001057600080fd5b50600436106101f05760003560e01c8063715018a61161010f578063ad605729116100a2578063deb36e3211610071578063deb36e3214610428578063e3b591ea14610430578063e74f3fbb14610443578063f2fde38b1461044b57600080fd5b8063ad605729146103d7578063af35ae27146103df578063bbe8b382146103e7578063dd62ed3e146103ef57600080fd5b80638da5cb5b116100de5780638da5cb5b1461039e578063902d55a5146103af57806395d89b41146103c1578063a9059cbb146103c957600080fd5b8063715018a61461035157806371bdce55146103595780637f58b9d3146103805780638cad856f1461039357600080fd5b8063313ce5671161018757806354ba2daf1161015657806354ba2daf146102d557806354ffbddb146102e8578063688114311461031357806370a082311461032857600080fd5b8063313ce567146102a057806336ab5d23146102af578063454f7edd146102c45780634b94f50e146102cd57600080fd5b806309e69ede116101c357806309e69ede146102535780630c195d991461027c57806318160ddd1461028557806323b872dd1461028d57600080fd5b80630197d972146101f55780630369d64e1461021357806306fdde031461021b578063095ea7b314610230575b600080fd5b610200630784ce0081565b6040519081526020015b60405180910390f35b610200601981565b61022361045e565b60405161020a91906116ac565b61024361023e3660046116e2565b6104f0565b604051901515815260200161020a565b61026661026136600461170c565b61050a565b60405161020a9a99989796959493929190611727565b61020060095481565b600254610200565b61024361029b36600461179e565b610678565b6040516012815260200161020a565b6102c26102bd36600461187d565b6106e6565b005b610200600a5481565b610200610a4c565b6102c26102e3366004611909565b610a8f565b6102fb6102f636600461194c565b610bda565b6040516001600160a01b03909116815260200161020a565b61031b610c04565b60405161020a9190611965565b61020061033636600461170c565b6001600160a01b031660009081526020819052604090205490565b6102c2610c65565b61036c61036736600461170c565b610c79565b60405161020a9897969594939291906119b2565b61020061038e36600461170c565b610e0a565b6102006301e1338081565b6005546001600160a01b03166102fb565b6102006a084595161401484a00000081565b610223610f72565b61024361029b3660046116e2565b600854610200565b610200610f81565b600a54610200565b6102006103fd366004611a1a565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6102c2610f9c565b6102c261043e36600461194c565b6110aa565b6102c2611107565b6102c261045936600461170c565b61130e565b60606003805461046d90611a4d565b80601f016020809104026020016040519081016040528092919081815260200182805461049990611a4d565b80156104e65780601f106104bb576101008083540402835291602001916104e6565b820191906000526020600020905b8154815290600101906020018083116104c957829003601f168201915b5050505050905090565b6000336104fe81858561134c565b60019150505b92915050565b60076020526000908152604090208054819061052590611a4d565b80601f016020809104026020016040519081016040528092919081815260200182805461055190611a4d565b801561059e5780601f106105735761010080835404028352916020019161059e565b820191906000526020600020905b81548152906001019060200180831161058157829003601f168201915b5050505050908060010180546105b390611a4d565b80601f01602080910402602001604051908101604052809291908181526020018280546105df90611a4d565b801561062c5780601f106106015761010080835404028352916020019161062c565b820191906000526020600020905b81548152906001019060200180831161060f57829003601f168201915b5050505060028301546003840154600485015460058601546006870154600788015460089098015496976001600160a01b03909516969395509193909260ff808216916101009004168a565b60405162461bcd60e51b815260206004820152603560248201527f446972656374207472616e7366657273206e6f7420616c6c6f7765642e2055736044820152746520636c61696d566573746564546f6b656e73282960581b60648201526000906084015b60405180910390fd5b6106ee61135e565b6001600160a01b03821661073d5760405162461bcd60e51b8152602060048201526016602482015275496e76616c69642077616c6c6574206164647265737360501b60448201526064016106dd565b60008111801561074e575060648111155b61079a5760405162461bcd60e51b815260206004820152601d60248201527f496e76616c696420616c6c6f636174696f6e2070657263656e7461676500000060448201526064016106dd565b6001600160a01b0382811660009081526007602052604090206002015416156108055760405162461bcd60e51b815260206004820152601a60248201527f5061727469636970616e7420616c72656164792065786973747300000000000060448201526064016106dd565b6000606461081e836a084595161401484a000000611a9d565b6108289190611ab4565b90506a084595161401484a000000816009546108449190611ad6565b11156108925760405162461bcd60e51b815260206004820152601f60248201527f546f74616c20616c6c6f636174696f6e206578636565647320737570706c790060448201526064016106dd565b604080516101408101825286815260208082018790526001600160a01b0386168284018190526060830185905260006080840181905260a084018190526301e1338060c0850152630784ce0060e0850152600161010085015261012084018190529081526007909152919091208151819061090d9082611b37565b50602082015160018201906109229082611b37565b5060408201516002820180546001600160a01b03199081166001600160a01b0393841617909155606084015160038401556080840151600484015560a0840151600584015560c0840151600684015560e0840151600784015561010080850151600894850180546101209097015161ffff1990971691151561ff001916919091179515159091029490941790935581546001810183556000929092527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee390910180549092169085161790556009546109fb908290611ad6565b6009556040516001600160a01b038416907ff022b46c0cbb6c0b8c6b656714a8b3ae81d620f3cd91677f11e3d5f12a9ac7b290610a3d90889088908690611bf7565b60405180910390a25050505050565b6000610a6b670de0b6b3a76400006a084595161401484a000000611ab4565b600a54610a8090670de0b6b3a7640000611a9d565b610a8a9190611ab4565b905090565b610a9761135e565b6001600160a01b03808416600090815260076020526040902060020154849116610af75760405162461bcd60e51b8152602060048201526011602482015270139bdd0818481c185c9d1a58da5c185b9d607a1b60448201526064016106dd565b6001600160a01b03811660009081526007602052604090206008015460ff16610b5e5760405162461bcd60e51b81526020600482015260196024820152785061727469636970616e74206973206e6f742061637469766560381b60448201526064016106dd565b6001600160a01b0384166000818152600760209081526040918290206008018054861515610100810261ff00198a151590811661ffff1990941693909317179092558351908152918201527f1141d7a121d08ec2ee81022d7b170a7da04182cfbc14498eefcbc65dcb8cf8fb910160405180910390a250505050565b60088181548110610bea57600080fd5b6000918252602090912001546001600160a01b0316905081565b606060088054806020026020016040519081016040528092919081815260200182805480156104e657602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610c3e575050505050905090565b610c6d61135e565b610c77600061138b565b565b6001600160a01b0380821660009081526007602052604081206002810154600382015460048301546005840154600885015485546060988998978897889788978897889794968796600188019695169460ff8082169261010090920416908890610ce290611a4d565b80601f0160208091040260200160405190810160405280929190818152602001828054610d0e90611a4d565b8015610d5b5780601f10610d3057610100808354040283529160200191610d5b565b820191906000526020600020905b815481529060010190602001808311610d3e57829003601f168201915b50505050509750868054610d6e90611a4d565b80601f0160208091040260200160405190810160405280929190818152602001828054610d9a90611a4d565b8015610de75780601f10610dbc57610100808354040283529160200191610de7565b820191906000526020600020905b815481529060010190602001808311610dca57829003601f168201915b505050505096509850985098509850985098509850985050919395975091939597565b6001600160a01b038082166000908152600760205260408120600281015491929091161580610e3e5750600881015460ff16155b80610e5257506008810154610100900460ff165b15610e605750600092915050565b8060050154600003610e755750600092915050565b6000816005015442610e879190611c2d565b90508160060154811015610e9f575060009392505050565b600082600701548210610eb757506003820154610f43565b6000836006015483610ec99190611c2d565b9050600084600601548560070154610ee19190611c2d565b90506000606460198760030154610ef89190611a9d565b610f029190611ab4565b90506000818760030154610f169190611c2d565b9050600083610f258684611a9d565b610f2f9190611ab4565b9050610f3b8184611ad6565b955050505050505b8260040154811115610f67576004830154610f5e9082611c2d565b95945050505050565b506000949350505050565b60606004805461046d90611a4d565b60006009546a084595161401484a000000610a8a9190611c2d565b610fa461135e565b600854610feb5760405162461bcd60e51b8152602060048201526015602482015274139bc81c185c9d1a58da5c185b9d1cc81859191959605a1b60448201526064016106dd565b4260005b6008548110156110735760006008828154811061100e5761100e611c40565b60009182526020808320909101546001600160a01b0316808352600790915260409091206008015490915060ff1615611060576001600160a01b03811660009081526007602052604090206005018390555b508061106b81611c56565b915050610fef565b506040518181527f3930f04857ba592ba0a6a96942f8350c2415c0a4aa849021aeefee98bb55b1229060200160405180910390a150565b6110b261135e565b600081116111025760405162461bcd60e51b815260206004820152601a60248201527f56616c756174696f6e206d75737420626520706f73697469766500000000000060448201526064016106dd565b600a55565b61110f6113dd565b336000908152600760205260409020600201546001600160a01b031661116b5760405162461bcd60e51b8152602060048201526011602482015270139bdd0818481c185c9d1a58da5c185b9d607a1b60448201526064016106dd565b3360009081526007602052604090206008015460ff166111c95760405162461bcd60e51b81526020600482015260196024820152785061727469636970616e74206973206e6f742061637469766560381b60448201526064016106dd565b33600090815260076020526040902060080154610100900460ff16156112315760405162461bcd60e51b815260206004820181905260248201527f5061727469636970616e7420686173206c656674207468652070726f6a65637460448201526064016106dd565b600061123c33610e0a565b90506000811161128e5760405162461bcd60e51b815260206004820152601d60248201527f4e6f20746f6b656e7320617661696c61626c6520666f7220636c61696d00000060448201526064016106dd565b336000908152600760205260409020600401546112ac908290611ad6565b336000818152600760205260409020600401919091556112ce90309083611407565b60405181815233907f896e034966eaaf1adc54acc0f257056febbd300c9e47182cf761982cf1f5e4309060200160405180910390a250610c776001600655565b61131661135e565b6001600160a01b03811661134057604051631e4fbdf760e01b8152600060048201526024016106dd565b6113498161138b565b50565b6113598383836001611466565b505050565b6005546001600160a01b03163314610c775760405163118cdaa760e01b81523360048201526024016106dd565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60026006540361140057604051633ee5aeb560e01b815260040160405180910390fd5b6002600655565b6001600160a01b03831661143157604051634b637e8f60e11b8152600060048201526024016106dd565b6001600160a01b03821661145b5760405163ec442f0560e01b8152600060048201526024016106dd565b61135983838361153c565b6001600160a01b0384166114905760405163e602df0560e01b8152600060048201526024016106dd565b6001600160a01b0383166114ba57604051634a1406b160e11b8152600060048201526024016106dd565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561153657826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161152d91815260200190565b60405180910390a35b50505050565b6001600160a01b03831661156757806002600082825461155c9190611ad6565b909155506115d99050565b6001600160a01b038316600090815260208190526040902054818110156115ba5760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016106dd565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b0382166115f557600280548290039055611614565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161165991815260200190565b60405180910390a3505050565b6000815180845260005b8181101561168c57602081850181015186830182015201611670565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006116bf6020830184611666565b9392505050565b80356001600160a01b03811681146116dd57600080fd5b919050565b600080604083850312156116f557600080fd5b6116fe836116c6565b946020939093013593505050565b60006020828403121561171e57600080fd5b6116bf826116c6565b600061014080835261173b8184018e611666565b9050828103602084015261174f818d611666565b6001600160a01b039b909b16604084015250506060810197909752608087019590955260a086019390935260c085019190915260e0840152151561010083015215156101209091015292915050565b6000806000606084860312156117b357600080fd5b6117bc846116c6565b92506117ca602085016116c6565b9150604084013590509250925092565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261180157600080fd5b813567ffffffffffffffff8082111561181c5761181c6117da565b604051601f8301601f19908116603f01168101908282118183101715611844576118446117da565b8160405283815286602085880101111561185d57600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000806080858703121561189357600080fd5b843567ffffffffffffffff808211156118ab57600080fd5b6118b7888389016117f0565b955060208701359150808211156118cd57600080fd5b506118da878288016117f0565b9350506118e9604086016116c6565b9396929550929360600135925050565b803580151581146116dd57600080fd5b60008060006060848603121561191e57600080fd5b611927846116c6565b9250611935602085016118f9565b9150611943604085016118f9565b90509250925092565b60006020828403121561195e57600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b818110156119a65783516001600160a01b031683529284019291840191600101611981565b50909695505050505050565b60006101008083526119c68184018c611666565b905082810360208401526119da818b611666565b6001600160a01b0399909916604084015250506060810195909552608085019390935260a0840191909152151560c0830152151560e09091015292915050565b60008060408385031215611a2d57600080fd5b611a36836116c6565b9150611a44602084016116c6565b90509250929050565b600181811c90821680611a6157607f821691505b602082108103611a8157634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761050457610504611a87565b600082611ad157634e487b7160e01b600052601260045260246000fd5b500490565b8082018082111561050457610504611a87565b601f82111561135957600081815260208120601f850160051c81016020861015611b105750805b601f850160051c820191505b81811015611b2f57828155600101611b1c565b505050505050565b815167ffffffffffffffff811115611b5157611b516117da565b611b6581611b5f8454611a4d565b84611ae9565b602080601f831160018114611b9a5760008415611b825750858301515b600019600386901b1c1916600185901b178555611b2f565b600085815260208120601f198616915b82811015611bc957888601518255948401946001909101908401611baa565b5085821015611be75787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b606081526000611c0a6060830186611666565b8281036020840152611c1c8186611666565b915050826040830152949350505050565b8181038181111561050457610504611a87565b634e487b7160e01b600052603260045260246000fd5b600060018201611c6857611c68611a87565b506001019056fea2646970667358221220d6aa538e2bdf711146b316412b81ceca458c0b1ff57eee273e5dc54cfead740264736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH3 0x989680 PUSH1 0xA SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2153 CODESIZE SUB DUP1 PUSH3 0x2153 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x3B SWAP2 PUSH3 0x2D3 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x444546494D4F4E2045717569747920546F6B656E000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x888CB PUSH1 0xEB SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x9F SWAP2 SWAP1 PUSH3 0x3AA JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0xAE DUP3 DUP3 PUSH3 0x3AA JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0xE1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xEC DUP2 PUSH3 0x110 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x6 SSTORE PUSH3 0x109 ADDRESS PUSH11 0x84595161401484A000000 PUSH3 0x162 JUMP JUMPDEST POP PUSH3 0x49E JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x18E JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH3 0xD8 JUMP JUMPDEST PUSH3 0x19C PUSH1 0x0 DUP4 DUP4 PUSH3 0x1A0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH3 0x1CF JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x1C3 SWAP2 SWAP1 PUSH3 0x476 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH3 0x243 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH3 0x224 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH3 0xD8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x261 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH3 0x280 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0x2C6 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x2E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x2FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x330 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x351 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x3A5 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x380 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x3A1 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x38C JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x3C6 JUMPI PUSH3 0x3C6 PUSH3 0x305 JUMP JUMPDEST PUSH3 0x3DE DUP2 PUSH3 0x3D7 DUP5 SLOAD PUSH3 0x31B JUMP JUMPDEST DUP5 PUSH3 0x357 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x416 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x3FD JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x3A1 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x447 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x426 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x466 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH3 0x498 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1CA5 DUP1 PUSH3 0x4AE PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1F0 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x10F JUMPI DUP1 PUSH4 0xAD605729 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xDEB36E32 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xDEB36E32 EQ PUSH2 0x428 JUMPI DUP1 PUSH4 0xE3B591EA EQ PUSH2 0x430 JUMPI DUP1 PUSH4 0xE74F3FBB EQ PUSH2 0x443 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x44B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xAD605729 EQ PUSH2 0x3D7 JUMPI DUP1 PUSH4 0xAF35AE27 EQ PUSH2 0x3DF JUMPI DUP1 PUSH4 0xBBE8B382 EQ PUSH2 0x3E7 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x39E JUMPI DUP1 PUSH4 0x902D55A5 EQ PUSH2 0x3AF JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3C1 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x351 JUMPI DUP1 PUSH4 0x71BDCE55 EQ PUSH2 0x359 JUMPI DUP1 PUSH4 0x7F58B9D3 EQ PUSH2 0x380 JUMPI DUP1 PUSH4 0x8CAD856F EQ PUSH2 0x393 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x187 JUMPI DUP1 PUSH4 0x54BA2DAF GT PUSH2 0x156 JUMPI DUP1 PUSH4 0x54BA2DAF EQ PUSH2 0x2D5 JUMPI DUP1 PUSH4 0x54FFBDDB EQ PUSH2 0x2E8 JUMPI DUP1 PUSH4 0x68811431 EQ PUSH2 0x313 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x328 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2A0 JUMPI DUP1 PUSH4 0x36AB5D23 EQ PUSH2 0x2AF JUMPI DUP1 PUSH4 0x454F7EDD EQ PUSH2 0x2C4 JUMPI DUP1 PUSH4 0x4B94F50E EQ PUSH2 0x2CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9E69EDE GT PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x9E69EDE EQ PUSH2 0x253 JUMPI DUP1 PUSH4 0xC195D99 EQ PUSH2 0x27C JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x28D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x197D972 EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x369D64E EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x21B JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x230 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x200 PUSH4 0x784CE00 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x19 DUP2 JUMP JUMPDEST PUSH2 0x223 PUSH2 0x45E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20A SWAP2 SWAP1 PUSH2 0x16AC JUMP JUMPDEST PUSH2 0x243 PUSH2 0x23E CALLDATASIZE PUSH1 0x4 PUSH2 0x16E2 JUMP JUMPDEST PUSH2 0x4F0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x20A JUMP JUMPDEST PUSH2 0x266 PUSH2 0x261 CALLDATASIZE PUSH1 0x4 PUSH2 0x170C JUMP JUMPDEST PUSH2 0x50A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20A SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1727 JUMP JUMPDEST PUSH2 0x200 PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x200 JUMP JUMPDEST PUSH2 0x243 PUSH2 0x29B CALLDATASIZE PUSH1 0x4 PUSH2 0x179E JUMP JUMPDEST PUSH2 0x678 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x20A JUMP JUMPDEST PUSH2 0x2C2 PUSH2 0x2BD CALLDATASIZE PUSH1 0x4 PUSH2 0x187D JUMP JUMPDEST PUSH2 0x6E6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x200 PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH2 0x200 PUSH2 0xA4C JUMP JUMPDEST PUSH2 0x2C2 PUSH2 0x2E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1909 JUMP JUMPDEST PUSH2 0xA8F JUMP JUMPDEST PUSH2 0x2FB PUSH2 0x2F6 CALLDATASIZE PUSH1 0x4 PUSH2 0x194C JUMP JUMPDEST PUSH2 0xBDA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x20A JUMP JUMPDEST PUSH2 0x31B PUSH2 0xC04 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20A SWAP2 SWAP1 PUSH2 0x1965 JUMP JUMPDEST PUSH2 0x200 PUSH2 0x336 CALLDATASIZE PUSH1 0x4 PUSH2 0x170C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2C2 PUSH2 0xC65 JUMP JUMPDEST PUSH2 0x36C PUSH2 0x367 CALLDATASIZE PUSH1 0x4 PUSH2 0x170C JUMP JUMPDEST PUSH2 0xC79 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20A SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x19B2 JUMP JUMPDEST PUSH2 0x200 PUSH2 0x38E CALLDATASIZE PUSH1 0x4 PUSH2 0x170C JUMP JUMPDEST PUSH2 0xE0A JUMP JUMPDEST PUSH2 0x200 PUSH4 0x1E13380 DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2FB JUMP JUMPDEST PUSH2 0x200 PUSH11 0x84595161401484A000000 DUP2 JUMP JUMPDEST PUSH2 0x223 PUSH2 0xF72 JUMP JUMPDEST PUSH2 0x243 PUSH2 0x29B CALLDATASIZE PUSH1 0x4 PUSH2 0x16E2 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x200 JUMP JUMPDEST PUSH2 0x200 PUSH2 0xF81 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x200 JUMP JUMPDEST PUSH2 0x200 PUSH2 0x3FD CALLDATASIZE PUSH1 0x4 PUSH2 0x1A1A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2C2 PUSH2 0xF9C JUMP JUMPDEST PUSH2 0x2C2 PUSH2 0x43E CALLDATASIZE PUSH1 0x4 PUSH2 0x194C JUMP JUMPDEST PUSH2 0x10AA JUMP JUMPDEST PUSH2 0x2C2 PUSH2 0x1107 JUMP JUMPDEST PUSH2 0x2C2 PUSH2 0x459 CALLDATASIZE PUSH1 0x4 PUSH2 0x170C JUMP JUMPDEST PUSH2 0x130E JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x46D SWAP1 PUSH2 0x1A4D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x499 SWAP1 PUSH2 0x1A4D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4E6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4BB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4E6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4C9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x4FE DUP2 DUP6 DUP6 PUSH2 0x134C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP2 SWAP1 PUSH2 0x525 SWAP1 PUSH2 0x1A4D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x551 SWAP1 PUSH2 0x1A4D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x59E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x573 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x59E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x581 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x5B3 SWAP1 PUSH2 0x1A4D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5DF SWAP1 PUSH2 0x1A4D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x62C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x601 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x62C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x60F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x5 DUP7 ADD SLOAD PUSH1 0x6 DUP8 ADD SLOAD PUSH1 0x7 DUP9 ADD SLOAD PUSH1 0x8 SWAP1 SWAP9 ADD SLOAD SWAP7 SWAP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND SWAP7 SWAP4 SWAP6 POP SWAP2 SWAP4 SWAP1 SWAP3 PUSH1 0xFF DUP1 DUP3 AND SWAP2 PUSH2 0x100 SWAP1 DIV AND DUP11 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x446972656374207472616E7366657273206E6F7420616C6C6F7765642E205573 PUSH1 0x44 DUP3 ADD MSTORE PUSH21 0x6520636C61696D566573746564546F6B656E732829 PUSH1 0x58 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6EE PUSH2 0x135E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x73D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x496E76616C69642077616C6C65742061646472657373 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6DD JUMP JUMPDEST PUSH1 0x0 DUP2 GT DUP1 ISZERO PUSH2 0x74E JUMPI POP PUSH1 0x64 DUP2 GT ISZERO JUMPDEST PUSH2 0x79A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420616C6C6F636174696F6E2070657263656E74616765000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD AND ISZERO PUSH2 0x805 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5061727469636970616E7420616C726561647920657869737473000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6DD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH2 0x81E DUP4 PUSH11 0x84595161401484A000000 PUSH2 0x1A9D JUMP JUMPDEST PUSH2 0x828 SWAP2 SWAP1 PUSH2 0x1AB4 JUMP JUMPDEST SWAP1 POP PUSH11 0x84595161401484A000000 DUP2 PUSH1 0x9 SLOAD PUSH2 0x844 SWAP2 SWAP1 PUSH2 0x1AD6 JUMP JUMPDEST GT ISZERO PUSH2 0x892 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F74616C20616C6C6F636174696F6E206578636565647320737570706C7900 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6DD JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x140 DUP2 ADD DUP3 MSTORE DUP7 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP8 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP3 DUP5 ADD DUP2 SWAP1 MSTORE PUSH1 0x60 DUP4 ADD DUP6 SWAP1 MSTORE PUSH1 0x0 PUSH1 0x80 DUP5 ADD DUP2 SWAP1 MSTORE PUSH1 0xA0 DUP5 ADD DUP2 SWAP1 MSTORE PUSH4 0x1E13380 PUSH1 0xC0 DUP6 ADD MSTORE PUSH4 0x784CE00 PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0x1 PUSH2 0x100 DUP6 ADD MSTORE PUSH2 0x120 DUP5 ADD DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x7 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 DUP2 MLOAD DUP2 SWAP1 PUSH2 0x90D SWAP1 DUP3 PUSH2 0x1B37 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 DUP3 ADD SWAP1 PUSH2 0x922 SWAP1 DUP3 PUSH2 0x1B37 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x3 DUP5 ADD SSTORE PUSH1 0x80 DUP5 ADD MLOAD PUSH1 0x4 DUP5 ADD SSTORE PUSH1 0xA0 DUP5 ADD MLOAD PUSH1 0x5 DUP5 ADD SSTORE PUSH1 0xC0 DUP5 ADD MLOAD PUSH1 0x6 DUP5 ADD SSTORE PUSH1 0xE0 DUP5 ADD MLOAD PUSH1 0x7 DUP5 ADD SSTORE PUSH2 0x100 DUP1 DUP6 ADD MLOAD PUSH1 0x8 SWAP5 DUP6 ADD DUP1 SLOAD PUSH2 0x120 SWAP1 SWAP8 ADD MLOAD PUSH2 0xFFFF NOT SWAP1 SWAP8 AND SWAP2 ISZERO ISZERO PUSH2 0xFF00 NOT AND SWAP2 SWAP1 SWAP2 OR SWAP6 ISZERO ISZERO SWAP1 SWAP2 MUL SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE DUP2 SLOAD PUSH1 0x1 DUP2 ADD DUP4 SSTORE PUSH1 0x0 SWAP3 SWAP1 SWAP3 MSTORE PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 SWAP1 SWAP2 ADD DUP1 SLOAD SWAP1 SWAP3 AND SWAP1 DUP6 AND OR SWAP1 SSTORE PUSH1 0x9 SLOAD PUSH2 0x9FB SWAP1 DUP3 SWAP1 PUSH2 0x1AD6 JUMP JUMPDEST PUSH1 0x9 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH32 0xF022B46C0CBB6C0B8C6B656714A8B3AE81D620F3CD91677F11E3D5F12A9AC7B2 SWAP1 PUSH2 0xA3D SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP7 SWAP1 PUSH2 0x1BF7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA6B PUSH8 0xDE0B6B3A7640000 PUSH11 0x84595161401484A000000 PUSH2 0x1AB4 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0xA80 SWAP1 PUSH8 0xDE0B6B3A7640000 PUSH2 0x1A9D JUMP JUMPDEST PUSH2 0xA8A SWAP2 SWAP1 PUSH2 0x1AB4 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xA97 PUSH2 0x135E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD DUP5 SWAP2 AND PUSH2 0xAF7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x139BDD0818481C185C9D1A58DA5C185B9D PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD SLOAD PUSH1 0xFF AND PUSH2 0xB5E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x5061727469636970616E74206973206E6F7420616374697665 PUSH1 0x38 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD DUP7 ISZERO ISZERO PUSH2 0x100 DUP2 MUL PUSH2 0xFF00 NOT DUP11 ISZERO ISZERO SWAP1 DUP2 AND PUSH2 0xFFFF NOT SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR OR SWAP1 SWAP3 SSTORE DUP4 MLOAD SWAP1 DUP2 MSTORE SWAP2 DUP3 ADD MSTORE PUSH32 0x1141D7A121D08EC2EE81022D7B170A7DA04182CFBC14498EEFCBC65DCB8CF8FB SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x8 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xBEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x8 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x4E6 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC3E JUMPI POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xC6D PUSH2 0x135E JUMP JUMPDEST PUSH2 0xC77 PUSH1 0x0 PUSH2 0x138B JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x4 DUP4 ADD SLOAD PUSH1 0x5 DUP5 ADD SLOAD PUSH1 0x8 DUP6 ADD SLOAD DUP6 SLOAD PUSH1 0x60 SWAP9 DUP10 SWAP9 SWAP8 DUP9 SWAP8 DUP9 SWAP8 DUP9 SWAP8 DUP9 SWAP8 DUP9 SWAP8 SWAP5 SWAP7 DUP8 SWAP7 PUSH1 0x1 DUP9 ADD SWAP7 SWAP6 AND SWAP5 PUSH1 0xFF DUP1 DUP3 AND SWAP3 PUSH2 0x100 SWAP1 SWAP3 DIV AND SWAP1 DUP9 SWAP1 PUSH2 0xCE2 SWAP1 PUSH2 0x1A4D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xD0E SWAP1 PUSH2 0x1A4D JUMP JUMPDEST DUP1 ISZERO PUSH2 0xD5B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD30 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD5B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD3E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP8 POP DUP7 DUP1 SLOAD PUSH2 0xD6E SWAP1 PUSH2 0x1A4D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xD9A SWAP1 PUSH2 0x1A4D JUMP JUMPDEST DUP1 ISZERO PUSH2 0xDE7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xDBC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xDE7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xDCA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP7 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP POP SWAP2 SWAP4 SWAP6 SWAP8 POP SWAP2 SWAP4 SWAP6 SWAP8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 DUP2 ADD SLOAD SWAP2 SWAP3 SWAP1 SWAP2 AND ISZERO DUP1 PUSH2 0xE3E JUMPI POP PUSH1 0x8 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO JUMPDEST DUP1 PUSH2 0xE52 JUMPI POP PUSH1 0x8 DUP2 ADD SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0xE60 JUMPI POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH1 0x5 ADD SLOAD PUSH1 0x0 SUB PUSH2 0xE75 JUMPI POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x5 ADD SLOAD TIMESTAMP PUSH2 0xE87 SWAP2 SWAP1 PUSH2 0x1C2D JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x6 ADD SLOAD DUP2 LT ISZERO PUSH2 0xE9F JUMPI POP PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x7 ADD SLOAD DUP3 LT PUSH2 0xEB7 JUMPI POP PUSH1 0x3 DUP3 ADD SLOAD PUSH2 0xF43 JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x6 ADD SLOAD DUP4 PUSH2 0xEC9 SWAP2 SWAP1 PUSH2 0x1C2D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP5 PUSH1 0x6 ADD SLOAD DUP6 PUSH1 0x7 ADD SLOAD PUSH2 0xEE1 SWAP2 SWAP1 PUSH2 0x1C2D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x64 PUSH1 0x19 DUP8 PUSH1 0x3 ADD SLOAD PUSH2 0xEF8 SWAP2 SWAP1 PUSH2 0x1A9D JUMP JUMPDEST PUSH2 0xF02 SWAP2 SWAP1 PUSH2 0x1AB4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP8 PUSH1 0x3 ADD SLOAD PUSH2 0xF16 SWAP2 SWAP1 PUSH2 0x1C2D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP4 PUSH2 0xF25 DUP7 DUP5 PUSH2 0x1A9D JUMP JUMPDEST PUSH2 0xF2F SWAP2 SWAP1 PUSH2 0x1AB4 JUMP JUMPDEST SWAP1 POP PUSH2 0xF3B DUP2 DUP5 PUSH2 0x1AD6 JUMP JUMPDEST SWAP6 POP POP POP POP POP POP JUMPDEST DUP3 PUSH1 0x4 ADD SLOAD DUP2 GT ISZERO PUSH2 0xF67 JUMPI PUSH1 0x4 DUP4 ADD SLOAD PUSH2 0xF5E SWAP1 DUP3 PUSH2 0x1C2D JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST POP PUSH1 0x0 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x46D SWAP1 PUSH2 0x1A4D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 SLOAD PUSH11 0x84595161401484A000000 PUSH2 0xA8A SWAP2 SWAP1 PUSH2 0x1C2D JUMP JUMPDEST PUSH2 0xFA4 PUSH2 0x135E JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0xFEB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x139BC81C185C9D1A58DA5C185B9D1CC81859191959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6DD JUMP JUMPDEST TIMESTAMP PUSH1 0x0 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x1073 JUMPI PUSH1 0x0 PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x100E JUMPI PUSH2 0x100E PUSH2 0x1C40 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 DUP4 MSTORE PUSH1 0x7 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH1 0x8 ADD SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND ISZERO PUSH2 0x1060 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 ADD DUP4 SWAP1 SSTORE JUMPDEST POP DUP1 PUSH2 0x106B DUP2 PUSH2 0x1C56 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xFEF JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x3930F04857BA592BA0A6A96942F8350C2415C0A4AA849021AEEFEE98BB55B122 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x10B2 PUSH2 0x135E JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x1102 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x56616C756174696F6E206D75737420626520706F736974697665000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6DD JUMP JUMPDEST PUSH1 0xA SSTORE JUMP JUMPDEST PUSH2 0x110F PUSH2 0x13DD JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x116B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x139BDD0818481C185C9D1A58DA5C185B9D PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6DD JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD SLOAD PUSH1 0xFF AND PUSH2 0x11C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x5061727469636970616E74206973206E6F7420616374697665 PUSH1 0x38 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6DD JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1231 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5061727469636970616E7420686173206C656674207468652070726F6A656374 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6DD JUMP JUMPDEST PUSH1 0x0 PUSH2 0x123C CALLER PUSH2 0xE0A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x128E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F20746F6B656E7320617661696C61626C6520666F7220636C61696D000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6DD JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH2 0x12AC SWAP1 DUP3 SWAP1 PUSH2 0x1AD6 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x12CE SWAP1 ADDRESS SWAP1 DUP4 PUSH2 0x1407 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0x896E034966EAAF1ADC54ACC0F257056FEBBD300C9E47182CF761982CF1F5E430 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0xC77 PUSH1 0x1 PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH2 0x1316 PUSH2 0x135E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1340 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x6DD JUMP JUMPDEST PUSH2 0x1349 DUP2 PUSH2 0x138B JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1359 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1466 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC77 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x6DD JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD SUB PUSH2 0x1400 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1431 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x6DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x145B JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x6DD JUMP JUMPDEST PUSH2 0x1359 DUP4 DUP4 DUP4 PUSH2 0x153C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1490 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x6DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x14BA JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x6DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x1536 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x152D SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1567 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x155C SWAP2 SWAP1 PUSH2 0x1AD6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x15D9 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x15BA JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x6DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x15F5 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x1614 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1659 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x168C JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x1670 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x16BF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1666 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x16DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16FE DUP4 PUSH2 0x16C6 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x171E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16BF DUP3 PUSH2 0x16C6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140 DUP1 DUP4 MSTORE PUSH2 0x173B DUP2 DUP5 ADD DUP15 PUSH2 0x1666 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x174F DUP2 DUP14 PUSH2 0x1666 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP12 SWAP1 SWAP12 AND PUSH1 0x40 DUP5 ADD MSTORE POP POP PUSH1 0x60 DUP2 ADD SWAP8 SWAP1 SWAP8 MSTORE PUSH1 0x80 DUP8 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0xA0 DUP7 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0xC0 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xE0 DUP5 ADD MSTORE ISZERO ISZERO PUSH2 0x100 DUP4 ADD MSTORE ISZERO ISZERO PUSH2 0x120 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x17B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x17BC DUP5 PUSH2 0x16C6 JUMP JUMPDEST SWAP3 POP PUSH2 0x17CA PUSH1 0x20 DUP6 ADD PUSH2 0x16C6 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1801 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x181C JUMPI PUSH2 0x181C PUSH2 0x17DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1844 JUMPI PUSH2 0x1844 PUSH2 0x17DA JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x185D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1893 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x18AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x18B7 DUP9 DUP4 DUP10 ADD PUSH2 0x17F0 JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x18CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18DA DUP8 DUP3 DUP9 ADD PUSH2 0x17F0 JUMP JUMPDEST SWAP4 POP POP PUSH2 0x18E9 PUSH1 0x40 DUP7 ADD PUSH2 0x16C6 JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP3 SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x16DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x191E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1927 DUP5 PUSH2 0x16C6 JUMP JUMPDEST SWAP3 POP PUSH2 0x1935 PUSH1 0x20 DUP6 ADD PUSH2 0x18F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x1943 PUSH1 0x40 DUP6 ADD PUSH2 0x18F9 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x195E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x19A6 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1981 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP1 DUP4 MSTORE PUSH2 0x19C6 DUP2 DUP5 ADD DUP13 PUSH2 0x1666 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x19DA DUP2 DUP12 PUSH2 0x1666 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP10 SWAP1 SWAP10 AND PUSH1 0x40 DUP5 ADD MSTORE POP POP PUSH1 0x60 DUP2 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0x80 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0xA0 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE ISZERO ISZERO PUSH1 0xC0 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0xE0 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A36 DUP4 PUSH2 0x16C6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A44 PUSH1 0x20 DUP5 ADD PUSH2 0x16C6 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1A61 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1A81 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x504 JUMPI PUSH2 0x504 PUSH2 0x1A87 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1AD1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x504 JUMPI PUSH2 0x504 PUSH2 0x1A87 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1359 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x1B10 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1B2F JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1B1C JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B51 JUMPI PUSH2 0x1B51 PUSH2 0x17DA JUMP JUMPDEST PUSH2 0x1B65 DUP2 PUSH2 0x1B5F DUP5 SLOAD PUSH2 0x1A4D JUMP JUMPDEST DUP5 PUSH2 0x1AE9 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1B9A JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x1B82 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x1B2F JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1BC9 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x1BAA JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x1BE7 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1C0A PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x1666 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1C1C DUP2 DUP7 PUSH2 0x1666 JUMP JUMPDEST SWAP2 POP POP DUP3 PUSH1 0x40 DUP4 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x504 JUMPI PUSH2 0x504 PUSH2 0x1A87 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1C68 JUMPI PUSH2 0x1C68 PUSH2 0x1A87 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD6 0xAA MSTORE8 DUP15 0x2B 0xDF PUSH18 0x1146B316412B81CECA458C0B1FF57EEE273E 0x5D 0xC5 0x4C INVALID 0xAD PUSH21 0x264736F6C63430008140033000000000000000000 ","sourceMap":"493:12304:10:-:0;;;2039:10;2005:44;;3146:132;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3219:6;1582:113:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1582:113:2;;;1656:5;1648;:13;;;;;;:::i;:::-;-1:-1:-1;1671:7:2;:17;1681:7;1671;:17;:::i;:::-;-1:-1:-1;;;;;;;;1273:26:0;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;3176:51:11;3149:18;;1322:31:0;;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;1857:1:7;2061:7;:21;3237:34:10::2;3251:4;1393:19;3237:5;:34::i;:::-;3146:132:::0;493:12304;;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;7362:208:2:-;-1:-1:-1;;;;;7432:21:2;;7428:91;;7476:32;;-1:-1:-1;;;7476:32:2;;7505:1;7476:32;;;3176:51:11;3149:18;;7476:32:2;3030:203:11;7428:91:2;7528:35;7544:1;7548:7;7557:5;7528:7;:35::i;:::-;7362:208;;:::o;5912:1107::-;-1:-1:-1;;;;;6001:18:2;;5997:540;;6153:5;6137:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;5997:540:2;;-1:-1:-1;5997:540:2;;-1:-1:-1;;;;;6211:15:2;;6189:19;6211:15;;;;;;;;;;;6244:19;;;6240:115;;;6290:50;;-1:-1:-1;;;6290:50:2;;-1:-1:-1;;;;;3685:32:11;;6290:50:2;;;3667:51:11;3734:18;;;3727:34;;;3777:18;;;3770:34;;;3640:18;;6290:50:2;3465:345:11;6240:115:2;-1:-1:-1;;;;;6475:15:2;;:9;:15;;;;;;;;;;6493:19;;;;6475:37;;5997:540;-1:-1:-1;;;;;6551:16:2;;6547:425;;6714:12;:21;;;;;;;6547:425;;;-1:-1:-1;;;;;6925:13:2;;:9;:13;;;;;;;;;;:22;;;;;;6547:425;7002:2;-1:-1:-1;;;;;6987:25:2;6996:4;-1:-1:-1;;;;;6987:25:2;;7006:5;6987:25;;;;3961::11;;3949:2;3934:18;;3815:177;6987:25:2;;;;;;;;5912:1107;;;:::o;14:290:11:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:11;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:11:o;309:127::-;370:10;365:3;361:20;358:1;351:31;401:4;398:1;391:15;425:4;422:1;415:15;441:380;520:1;516:12;;;;563;;;584:61;;638:4;630:6;626:17;616:27;;584:61;691:2;683:6;680:14;660:18;657:38;654:161;;737:10;732:3;728:20;725:1;718:31;772:4;769:1;762:15;800:4;797:1;790:15;654:161;;441:380;;;:::o;952:545::-;1054:2;1049:3;1046:11;1043:448;;;1090:1;1115:5;1111:2;1104:17;1160:4;1156:2;1146:19;1230:2;1218:10;1214:19;1211:1;1207:27;1201:4;1197:38;1266:4;1254:10;1251:20;1248:47;;;-1:-1:-1;1289:4:11;1248:47;1344:2;1339:3;1335:12;1332:1;1328:20;1322:4;1318:31;1308:41;;1399:82;1417:2;1410:5;1407:13;1399:82;;;1462:17;;;1443:1;1432:13;1399:82;;;1403:3;;;1043:448;952:545;;;:::o;1673:1352::-;1793:10;;-1:-1:-1;;;;;1815:30:11;;1812:56;;;1848:18;;:::i;:::-;1877:97;1967:6;1927:38;1959:4;1953:11;1927:38;:::i;:::-;1921:4;1877:97;:::i;:::-;2029:4;;2093:2;2082:14;;2110:1;2105:663;;;;2812:1;2829:6;2826:89;;;-1:-1:-1;2881:19:11;;;2875:26;2826:89;-1:-1:-1;;1630:1:11;1626:11;;;1622:24;1618:29;1608:40;1654:1;1650:11;;;1605:57;2928:81;;2075:944;;2105:663;899:1;892:14;;;936:4;923:18;;-1:-1:-1;;2141:20:11;;;2259:236;2273:7;2270:1;2267:14;2259:236;;;2362:19;;;2356:26;2341:42;;2454:27;;;;2422:1;2410:14;;;;2289:19;;2259:236;;;2263:3;2523:6;2514:7;2511:19;2508:201;;;2584:19;;;2578:26;-1:-1:-1;;2667:1:11;2663:14;;;2679:3;2659:24;2655:37;2651:42;2636:58;2621:74;;2508:201;-1:-1:-1;;;;;2755:1:11;2739:14;;;2735:22;2722:36;;-1:-1:-1;1673:1352:11:o;3238:222::-;3303:9;;;3324:10;;;3321:133;;;3376:10;3371:3;3367:20;3364:1;3357:31;3411:4;3408:1;3401:15;3439:4;3436:1;3429:15;3321:133;3238:222;;;;:::o;3815:177::-;493:12304:10;;;;;;"},"deployedBytecode":{"functionDebugData":{"@CLIFF_PERCENTAGE_4506":{"entryPoint":null,"id":4506,"parameterSlots":0,"returnSlots":0},"@CLIFF_PERIOD_4503":{"entryPoint":null,"id":4503,"parameterSlots":0,"returnSlots":0},"@TOTAL_SUPPLY_4481":{"entryPoint":null,"id":4481,"parameterSlots":0,"returnSlots":0},"@VESTING_PERIOD_4492":{"entryPoint":null,"id":4492,"parameterSlots":0,"returnSlots":0},"@_approve_690":{"entryPoint":4940,"id":690,"parameterSlots":3,"returnSlots":0},"@_approve_750":{"entryPoint":5222,"id":750,"parameterSlots":4,"returnSlots":0},"@_checkOwner_84":{"entryPoint":4958,"id":84,"parameterSlots":0,"returnSlots":0},"@_msgSender_915":{"entryPoint":null,"id":915,"parameterSlots":0,"returnSlots":1},"@_nonReentrantAfter_1042":{"entryPoint":null,"id":1042,"parameterSlots":0,"returnSlots":0},"@_nonReentrantBefore_1034":{"entryPoint":5085,"id":1034,"parameterSlots":0,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":5003,"id":146,"parameterSlots":1,"returnSlots":0},"@_transfer_529":{"entryPoint":5127,"id":529,"parameterSlots":3,"returnSlots":0},"@_update_606":{"entryPoint":5436,"id":606,"parameterSlots":3,"returnSlots":0},"@addParticipant_4735":{"entryPoint":1766,"id":4735,"parameterSlots":4,"returnSlots":0},"@allowance_426":{"entryPoint":null,"id":426,"parameterSlots":2,"returnSlots":1},"@approve_450":{"entryPoint":1264,"id":450,"parameterSlots":2,"returnSlots":1},"@balanceOf_385":{"entryPoint":null,"id":385,"parameterSlots":1,"returnSlots":1},"@claimVestedTokens_4844":{"entryPoint":4359,"id":4844,"parameterSlots":0,"returnSlots":0},"@decimals_363":{"entryPoint":null,"id":363,"parameterSlots":0,"returnSlots":1},"@getAllParticipantAddresses_5069":{"entryPoint":3076,"id":5069,"parameterSlots":0,"returnSlots":1},"@getParticipantCount_5079":{"entryPoint":null,"id":5079,"parameterSlots":0,"returnSlots":1},"@getParticipantInfo_5059":{"entryPoint":3193,"id":5059,"parameterSlots":1,"returnSlots":8},"@getProjectValuation_5099":{"entryPoint":null,"id":5099,"parameterSlots":0,"returnSlots":1},"@getRemainingTokens_5090":{"entryPoint":3969,"id":5090,"parameterSlots":0,"returnSlots":1},"@getTokenPrice_5139":{"entryPoint":2636,"id":5139,"parameterSlots":0,"returnSlots":1},"@getVestedBalance_4975":{"entryPoint":3594,"id":4975,"parameterSlots":1,"returnSlots":1},"@name_345":{"entryPoint":1118,"id":345,"parameterSlots":0,"returnSlots":1},"@owner_67":{"entryPoint":null,"id":67,"parameterSlots":0,"returnSlots":1},"@participantAddresses_4514":{"entryPoint":3034,"id":4514,"parameterSlots":0,"returnSlots":0},"@participants_4511":{"entryPoint":1290,"id":4511,"parameterSlots":0,"returnSlots":0},"@projectValuation_4519":{"entryPoint":null,"id":4519,"parameterSlots":0,"returnSlots":0},"@renounceOwnership_98":{"entryPoint":3173,"id":98,"parameterSlots":0,"returnSlots":0},"@setParticipantStatus_5011":{"entryPoint":2703,"id":5011,"parameterSlots":3,"returnSlots":0},"@startVesting_4791":{"entryPoint":3996,"id":4791,"parameterSlots":0,"returnSlots":0},"@symbol_354":{"entryPoint":3954,"id":354,"parameterSlots":0,"returnSlots":1},"@totalAllocatedTokens_4516":{"entryPoint":null,"id":4516,"parameterSlots":0,"returnSlots":0},"@totalSupply_372":{"entryPoint":null,"id":372,"parameterSlots":0,"returnSlots":1},"@transferFrom_5177":{"entryPoint":1656,"id":5177,"parameterSlots":3,"returnSlots":1},"@transferOwnership_126":{"entryPoint":4878,"id":126,"parameterSlots":1,"returnSlots":0},"@transfer_5157":{"entryPoint":null,"id":5157,"parameterSlots":2,"returnSlots":1},"@updateProjectValuation_5119":{"entryPoint":4266,"id":5119,"parameterSlots":1,"returnSlots":0},"abi_decode_address":{"entryPoint":5830,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_bool":{"entryPoint":6393,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_string":{"entryPoint":6128,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":5900,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":6682,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":6046,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_boolt_bool":{"entryPoint":6409,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":5858,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_addresst_uint256":{"entryPoint":6269,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_uint256":{"entryPoint":6476,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string":{"entryPoint":5734,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":6501,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool_t_bool__to_t_bool_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5804,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_address_t_uint256_t_uint256_t_uint256_t_bool_t_bool__to_t_string_memory_ptr_t_string_memory_ptr_t_address_t_uint256_t_uint256_t_uint256_t_bool_t_bool__fromStack_reversed":{"entryPoint":6578,"id":null,"parameterSlots":9,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_bool__to_t_string_memory_ptr_t_string_memory_ptr_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_bool__fromStack_reversed":{"entryPoint":5927,"id":null,"parameterSlots":11,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_uint256__to_t_string_memory_ptr_t_string_memory_ptr_t_uint256__fromStack_reversed":{"entryPoint":7159,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_stringliteral_11f62d0fb8618a929bf1cf2b60befadc2f28b23a8c72ce2e7904e6a75d66ecd7__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_36294eea575da5f966433b0b292d82b2b7eeb81a34c05d7a6850129b8879662c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_39380453c9f7800ce01faa0ded64f5e5e58b5e83489ff3b955fa5b4d55cad1f5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_5c0b74416edcfc67accf704e19bd57cb9217cae2440f64edf8ce8a1ca27508d5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_63e9229a8fa1f95078a5177d9a88a047bdea7f35bc1d19b14eee40f939d3a995__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ad0541420148dbb2367eac08105a1bad9f8841b2d3b4ac3c8b42a0aa83e9855f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ba931d06c9e8c3c863beb457700c9a59ea91d428f30af1b525bf5885a1c343a1__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_bfa4b0e127ac972ceaa42f4b0227d4aa2f83ec1f5f44d3cffbeea103fe373b8e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c3083844e6ae086f32b4b28fe6399ccf6a6a41e8265ee628860987b496b4a69c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_dd128e933d077647bedee942f8fad0896dbcf403dd101362daa9f1ef97dd6adf__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f6b6cf7016efa501486950119b41c3c9ed5c3a8fa9317fc01ea50ca9165fe740__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":6870,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":6836,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":6813,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":7213,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":6889,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":6967,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":6733,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"increment_t_uint256":{"entryPoint":7254,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":6791,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":7232,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":6106,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:16167:11","statements":[{"nodeType":"YulBlock","src":"6:3:11","statements":[]},{"body":{"nodeType":"YulBlock","src":"115:76:11","statements":[{"nodeType":"YulAssignment","src":"125:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"137:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"148:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"133:3:11"},"nodeType":"YulFunctionCall","src":"133:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"125:4:11"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"167:9:11"},{"name":"value0","nodeType":"YulIdentifier","src":"178:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"160:6:11"},"nodeType":"YulFunctionCall","src":"160:25:11"},"nodeType":"YulExpressionStatement","src":"160:25:11"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"84:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"95:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"106:4:11","type":""}],"src":"14:177:11"},{"body":{"nodeType":"YulBlock","src":"246:373:11","statements":[{"nodeType":"YulVariableDeclaration","src":"256:26:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"276:5:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"270:5:11"},"nodeType":"YulFunctionCall","src":"270:12:11"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"260:6:11","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"298:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"303:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"291:6:11"},"nodeType":"YulFunctionCall","src":"291:19:11"},"nodeType":"YulExpressionStatement","src":"291:19:11"},{"nodeType":"YulVariableDeclaration","src":"319:10:11","value":{"kind":"number","nodeType":"YulLiteral","src":"328:1:11","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"323:1:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"390:110:11","statements":[{"nodeType":"YulVariableDeclaration","src":"404:14:11","value":{"kind":"number","nodeType":"YulLiteral","src":"414:4:11","type":"","value":"0x20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"408:2:11","type":""}]},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"446:3:11"},{"name":"i","nodeType":"YulIdentifier","src":"451:1:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"442:3:11"},"nodeType":"YulFunctionCall","src":"442:11:11"},{"name":"_1","nodeType":"YulIdentifier","src":"455:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"438:3:11"},"nodeType":"YulFunctionCall","src":"438:20:11"},{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"474:5:11"},{"name":"i","nodeType":"YulIdentifier","src":"481:1:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"470:3:11"},"nodeType":"YulFunctionCall","src":"470:13:11"},{"name":"_1","nodeType":"YulIdentifier","src":"485:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"466:3:11"},"nodeType":"YulFunctionCall","src":"466:22:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"460:5:11"},"nodeType":"YulFunctionCall","src":"460:29:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"431:6:11"},"nodeType":"YulFunctionCall","src":"431:59:11"},"nodeType":"YulExpressionStatement","src":"431:59:11"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"349:1:11"},{"name":"length","nodeType":"YulIdentifier","src":"352:6:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"346:2:11"},"nodeType":"YulFunctionCall","src":"346:13:11"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"360:21:11","statements":[{"nodeType":"YulAssignment","src":"362:17:11","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"371:1:11"},{"kind":"number","nodeType":"YulLiteral","src":"374:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"367:3:11"},"nodeType":"YulFunctionCall","src":"367:12:11"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"362:1:11"}]}]},"pre":{"nodeType":"YulBlock","src":"342:3:11","statements":[]},"src":"338:162:11"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"524:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"529:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"520:3:11"},"nodeType":"YulFunctionCall","src":"520:16:11"},{"kind":"number","nodeType":"YulLiteral","src":"538:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"516:3:11"},"nodeType":"YulFunctionCall","src":"516:27:11"},{"kind":"number","nodeType":"YulLiteral","src":"545:1:11","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"509:6:11"},"nodeType":"YulFunctionCall","src":"509:38:11"},"nodeType":"YulExpressionStatement","src":"509:38:11"},{"nodeType":"YulAssignment","src":"556:57:11","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"571:3:11"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"584:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"592:2:11","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"580:3:11"},"nodeType":"YulFunctionCall","src":"580:15:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"601:2:11","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"597:3:11"},"nodeType":"YulFunctionCall","src":"597:7:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"576:3:11"},"nodeType":"YulFunctionCall","src":"576:29:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"567:3:11"},"nodeType":"YulFunctionCall","src":"567:39:11"},{"kind":"number","nodeType":"YulLiteral","src":"608:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"563:3:11"},"nodeType":"YulFunctionCall","src":"563:50:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"556:3:11"}]}]},"name":"abi_encode_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"223:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"230:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"238:3:11","type":""}],"src":"196:423:11"},{"body":{"nodeType":"YulBlock","src":"745:99:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"762:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"773:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"755:6:11"},"nodeType":"YulFunctionCall","src":"755:21:11"},"nodeType":"YulExpressionStatement","src":"755:21:11"},{"nodeType":"YulAssignment","src":"785:53:11","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"811:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"823:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"834:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"819:3:11"},"nodeType":"YulFunctionCall","src":"819:18:11"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"793:17:11"},"nodeType":"YulFunctionCall","src":"793:45:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"785:4:11"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"714:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"725:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"736:4:11","type":""}],"src":"624:220:11"},{"body":{"nodeType":"YulBlock","src":"898:124:11","statements":[{"nodeType":"YulAssignment","src":"908:29:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"930:6:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"917:12:11"},"nodeType":"YulFunctionCall","src":"917:20:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"908:5:11"}]},{"body":{"nodeType":"YulBlock","src":"1000:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1009:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1012:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1002:6:11"},"nodeType":"YulFunctionCall","src":"1002:12:11"},"nodeType":"YulExpressionStatement","src":"1002:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"959:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"970:5:11"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"985:3:11","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"990:1:11","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"981:3:11"},"nodeType":"YulFunctionCall","src":"981:11:11"},{"kind":"number","nodeType":"YulLiteral","src":"994:1:11","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"977:3:11"},"nodeType":"YulFunctionCall","src":"977:19:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"966:3:11"},"nodeType":"YulFunctionCall","src":"966:31:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"956:2:11"},"nodeType":"YulFunctionCall","src":"956:42:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"949:6:11"},"nodeType":"YulFunctionCall","src":"949:50:11"},"nodeType":"YulIf","src":"946:70:11"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"877:6:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"888:5:11","type":""}],"src":"849:173:11"},{"body":{"nodeType":"YulBlock","src":"1114:167:11","statements":[{"body":{"nodeType":"YulBlock","src":"1160:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1169:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1172:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1162:6:11"},"nodeType":"YulFunctionCall","src":"1162:12:11"},"nodeType":"YulExpressionStatement","src":"1162:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1135:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"1144:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1131:3:11"},"nodeType":"YulFunctionCall","src":"1131:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"1156:2:11","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1127:3:11"},"nodeType":"YulFunctionCall","src":"1127:32:11"},"nodeType":"YulIf","src":"1124:52:11"},{"nodeType":"YulAssignment","src":"1185:39:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1214:9:11"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1195:18:11"},"nodeType":"YulFunctionCall","src":"1195:29:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1185:6:11"}]},{"nodeType":"YulAssignment","src":"1233:42:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1260:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"1271:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1256:3:11"},"nodeType":"YulFunctionCall","src":"1256:18:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1243:12:11"},"nodeType":"YulFunctionCall","src":"1243:32:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1233:6:11"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1072:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1083:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1095:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1103:6:11","type":""}],"src":"1027:254:11"},{"body":{"nodeType":"YulBlock","src":"1381:92:11","statements":[{"nodeType":"YulAssignment","src":"1391:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1403:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"1414:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1399:3:11"},"nodeType":"YulFunctionCall","src":"1399:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1391:4:11"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1433:9:11"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1458:6:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1451:6:11"},"nodeType":"YulFunctionCall","src":"1451:14:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1444:6:11"},"nodeType":"YulFunctionCall","src":"1444:22:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1426:6:11"},"nodeType":"YulFunctionCall","src":"1426:41:11"},"nodeType":"YulExpressionStatement","src":"1426:41:11"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1350:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1361:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1372:4:11","type":""}],"src":"1286:187:11"},{"body":{"nodeType":"YulBlock","src":"1548:116:11","statements":[{"body":{"nodeType":"YulBlock","src":"1594:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1603:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1606:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1596:6:11"},"nodeType":"YulFunctionCall","src":"1596:12:11"},"nodeType":"YulExpressionStatement","src":"1596:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1569:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"1578:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1565:3:11"},"nodeType":"YulFunctionCall","src":"1565:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"1590:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1561:3:11"},"nodeType":"YulFunctionCall","src":"1561:32:11"},"nodeType":"YulIf","src":"1558:52:11"},{"nodeType":"YulAssignment","src":"1619:39:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1648:9:11"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1629:18:11"},"nodeType":"YulFunctionCall","src":"1629:29:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1619:6:11"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1514:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1525:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1537:6:11","type":""}],"src":"1478:186:11"},{"body":{"nodeType":"YulBlock","src":"2050:644:11","statements":[{"nodeType":"YulVariableDeclaration","src":"2060:13:11","value":{"kind":"number","nodeType":"YulLiteral","src":"2070:3:11","type":"","value":"320"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2064:2:11","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2089:9:11"},{"name":"_1","nodeType":"YulIdentifier","src":"2100:2:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2082:6:11"},"nodeType":"YulFunctionCall","src":"2082:21:11"},"nodeType":"YulExpressionStatement","src":"2082:21:11"},{"nodeType":"YulVariableDeclaration","src":"2112:59:11","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2144:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2156:9:11"},{"name":"_1","nodeType":"YulIdentifier","src":"2167:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2152:3:11"},"nodeType":"YulFunctionCall","src":"2152:18:11"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"2126:17:11"},"nodeType":"YulFunctionCall","src":"2126:45:11"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"2116:6:11","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2191:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"2202:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2187:3:11"},"nodeType":"YulFunctionCall","src":"2187:18:11"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"2211:6:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"2219:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2207:3:11"},"nodeType":"YulFunctionCall","src":"2207:22:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2180:6:11"},"nodeType":"YulFunctionCall","src":"2180:50:11"},"nodeType":"YulExpressionStatement","src":"2180:50:11"},{"nodeType":"YulAssignment","src":"2239:41:11","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"2265:6:11"},{"name":"tail_1","nodeType":"YulIdentifier","src":"2273:6:11"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"2247:17:11"},"nodeType":"YulFunctionCall","src":"2247:33:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2239:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2300:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"2311:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2296:3:11"},"nodeType":"YulFunctionCall","src":"2296:18:11"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"2320:6:11"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2336:3:11","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2341:1:11","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2332:3:11"},"nodeType":"YulFunctionCall","src":"2332:11:11"},{"kind":"number","nodeType":"YulLiteral","src":"2345:1:11","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2328:3:11"},"nodeType":"YulFunctionCall","src":"2328:19:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2316:3:11"},"nodeType":"YulFunctionCall","src":"2316:32:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2289:6:11"},"nodeType":"YulFunctionCall","src":"2289:60:11"},"nodeType":"YulExpressionStatement","src":"2289:60:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2369:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"2380:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2365:3:11"},"nodeType":"YulFunctionCall","src":"2365:18:11"},{"name":"value3","nodeType":"YulIdentifier","src":"2385:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2358:6:11"},"nodeType":"YulFunctionCall","src":"2358:34:11"},"nodeType":"YulExpressionStatement","src":"2358:34:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2412:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"2423:3:11","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2408:3:11"},"nodeType":"YulFunctionCall","src":"2408:19:11"},{"name":"value4","nodeType":"YulIdentifier","src":"2429:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2401:6:11"},"nodeType":"YulFunctionCall","src":"2401:35:11"},"nodeType":"YulExpressionStatement","src":"2401:35:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2456:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"2467:3:11","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2452:3:11"},"nodeType":"YulFunctionCall","src":"2452:19:11"},{"name":"value5","nodeType":"YulIdentifier","src":"2473:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2445:6:11"},"nodeType":"YulFunctionCall","src":"2445:35:11"},"nodeType":"YulExpressionStatement","src":"2445:35:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2500:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"2511:3:11","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2496:3:11"},"nodeType":"YulFunctionCall","src":"2496:19:11"},{"name":"value6","nodeType":"YulIdentifier","src":"2517:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2489:6:11"},"nodeType":"YulFunctionCall","src":"2489:35:11"},"nodeType":"YulExpressionStatement","src":"2489:35:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2544:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"2555:3:11","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2540:3:11"},"nodeType":"YulFunctionCall","src":"2540:19:11"},{"name":"value7","nodeType":"YulIdentifier","src":"2561:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2533:6:11"},"nodeType":"YulFunctionCall","src":"2533:35:11"},"nodeType":"YulExpressionStatement","src":"2533:35:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2588:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"2599:3:11","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2584:3:11"},"nodeType":"YulFunctionCall","src":"2584:19:11"},{"arguments":[{"arguments":[{"name":"value8","nodeType":"YulIdentifier","src":"2619:6:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2612:6:11"},"nodeType":"YulFunctionCall","src":"2612:14:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2605:6:11"},"nodeType":"YulFunctionCall","src":"2605:22:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2577:6:11"},"nodeType":"YulFunctionCall","src":"2577:51:11"},"nodeType":"YulExpressionStatement","src":"2577:51:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2648:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"2659:3:11","type":"","value":"288"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2644:3:11"},"nodeType":"YulFunctionCall","src":"2644:19:11"},{"arguments":[{"arguments":[{"name":"value9","nodeType":"YulIdentifier","src":"2679:6:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2672:6:11"},"nodeType":"YulFunctionCall","src":"2672:14:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2665:6:11"},"nodeType":"YulFunctionCall","src":"2665:22:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2637:6:11"},"nodeType":"YulFunctionCall","src":"2637:51:11"},"nodeType":"YulExpressionStatement","src":"2637:51:11"}]},"name":"abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_bool__to_t_string_memory_ptr_t_string_memory_ptr_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1947:9:11","type":""},{"name":"value9","nodeType":"YulTypedName","src":"1958:6:11","type":""},{"name":"value8","nodeType":"YulTypedName","src":"1966:6:11","type":""},{"name":"value7","nodeType":"YulTypedName","src":"1974:6:11","type":""},{"name":"value6","nodeType":"YulTypedName","src":"1982:6:11","type":""},{"name":"value5","nodeType":"YulTypedName","src":"1990:6:11","type":""},{"name":"value4","nodeType":"YulTypedName","src":"1998:6:11","type":""},{"name":"value3","nodeType":"YulTypedName","src":"2006:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2014:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2022:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2030:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2041:4:11","type":""}],"src":"1669:1025:11"},{"body":{"nodeType":"YulBlock","src":"2803:224:11","statements":[{"body":{"nodeType":"YulBlock","src":"2849:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2858:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2861:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2851:6:11"},"nodeType":"YulFunctionCall","src":"2851:12:11"},"nodeType":"YulExpressionStatement","src":"2851:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2824:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"2833:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2820:3:11"},"nodeType":"YulFunctionCall","src":"2820:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"2845:2:11","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2816:3:11"},"nodeType":"YulFunctionCall","src":"2816:32:11"},"nodeType":"YulIf","src":"2813:52:11"},{"nodeType":"YulAssignment","src":"2874:39:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2903:9:11"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2884:18:11"},"nodeType":"YulFunctionCall","src":"2884:29:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2874:6:11"}]},{"nodeType":"YulAssignment","src":"2922:48:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2955:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"2966:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2951:3:11"},"nodeType":"YulFunctionCall","src":"2951:18:11"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2932:18:11"},"nodeType":"YulFunctionCall","src":"2932:38:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2922:6:11"}]},{"nodeType":"YulAssignment","src":"2979:42:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3006:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"3017:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3002:3:11"},"nodeType":"YulFunctionCall","src":"3002:18:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2989:12:11"},"nodeType":"YulFunctionCall","src":"2989:32:11"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2979:6:11"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2753:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2764:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2776:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2784:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2792:6:11","type":""}],"src":"2699:328:11"},{"body":{"nodeType":"YulBlock","src":"3129:87:11","statements":[{"nodeType":"YulAssignment","src":"3139:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3151:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"3162:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3147:3:11"},"nodeType":"YulFunctionCall","src":"3147:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3139:4:11"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3181:9:11"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3196:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"3204:4:11","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3192:3:11"},"nodeType":"YulFunctionCall","src":"3192:17:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3174:6:11"},"nodeType":"YulFunctionCall","src":"3174:36:11"},"nodeType":"YulExpressionStatement","src":"3174:36:11"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3098:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3109:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3120:4:11","type":""}],"src":"3032:184:11"},{"body":{"nodeType":"YulBlock","src":"3253:95:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3270:1:11","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3277:3:11","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"3282:10:11","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3273:3:11"},"nodeType":"YulFunctionCall","src":"3273:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3263:6:11"},"nodeType":"YulFunctionCall","src":"3263:31:11"},"nodeType":"YulExpressionStatement","src":"3263:31:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3310:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3313:4:11","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3303:6:11"},"nodeType":"YulFunctionCall","src":"3303:15:11"},"nodeType":"YulExpressionStatement","src":"3303:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3334:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3337:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3327:6:11"},"nodeType":"YulFunctionCall","src":"3327:15:11"},"nodeType":"YulExpressionStatement","src":"3327:15:11"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"3221:127:11"},{"body":{"nodeType":"YulBlock","src":"3406:666:11","statements":[{"body":{"nodeType":"YulBlock","src":"3455:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3464:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3467:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3457:6:11"},"nodeType":"YulFunctionCall","src":"3457:12:11"},"nodeType":"YulExpressionStatement","src":"3457:12:11"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3434:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"3442:4:11","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3430:3:11"},"nodeType":"YulFunctionCall","src":"3430:17:11"},{"name":"end","nodeType":"YulIdentifier","src":"3449:3:11"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3426:3:11"},"nodeType":"YulFunctionCall","src":"3426:27:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3419:6:11"},"nodeType":"YulFunctionCall","src":"3419:35:11"},"nodeType":"YulIf","src":"3416:55:11"},{"nodeType":"YulVariableDeclaration","src":"3480:30:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3503:6:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3490:12:11"},"nodeType":"YulFunctionCall","src":"3490:20:11"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3484:2:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3519:28:11","value":{"kind":"number","nodeType":"YulLiteral","src":"3529:18:11","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"3523:2:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"3570:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3572:16:11"},"nodeType":"YulFunctionCall","src":"3572:18:11"},"nodeType":"YulExpressionStatement","src":"3572:18:11"}]},"condition":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"3562:2:11"},{"name":"_2","nodeType":"YulIdentifier","src":"3566:2:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3559:2:11"},"nodeType":"YulFunctionCall","src":"3559:10:11"},"nodeType":"YulIf","src":"3556:36:11"},{"nodeType":"YulVariableDeclaration","src":"3601:17:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3615:2:11","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3611:3:11"},"nodeType":"YulFunctionCall","src":"3611:7:11"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"3605:2:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3627:23:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3647:2:11","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3641:5:11"},"nodeType":"YulFunctionCall","src":"3641:9:11"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"3631:6:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3659:71:11","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3681:6:11"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"3705:2:11"},{"kind":"number","nodeType":"YulLiteral","src":"3709:4:11","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3701:3:11"},"nodeType":"YulFunctionCall","src":"3701:13:11"},{"name":"_3","nodeType":"YulIdentifier","src":"3716:2:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3697:3:11"},"nodeType":"YulFunctionCall","src":"3697:22:11"},{"kind":"number","nodeType":"YulLiteral","src":"3721:2:11","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3693:3:11"},"nodeType":"YulFunctionCall","src":"3693:31:11"},{"name":"_3","nodeType":"YulIdentifier","src":"3726:2:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3689:3:11"},"nodeType":"YulFunctionCall","src":"3689:40:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3677:3:11"},"nodeType":"YulFunctionCall","src":"3677:53:11"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"3663:10:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"3789:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3791:16:11"},"nodeType":"YulFunctionCall","src":"3791:18:11"},"nodeType":"YulExpressionStatement","src":"3791:18:11"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3748:10:11"},{"name":"_2","nodeType":"YulIdentifier","src":"3760:2:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3745:2:11"},"nodeType":"YulFunctionCall","src":"3745:18:11"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3768:10:11"},{"name":"memPtr","nodeType":"YulIdentifier","src":"3780:6:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3765:2:11"},"nodeType":"YulFunctionCall","src":"3765:22:11"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3742:2:11"},"nodeType":"YulFunctionCall","src":"3742:46:11"},"nodeType":"YulIf","src":"3739:72:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3827:2:11","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3831:10:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3820:6:11"},"nodeType":"YulFunctionCall","src":"3820:22:11"},"nodeType":"YulExpressionStatement","src":"3820:22:11"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3858:6:11"},{"name":"_1","nodeType":"YulIdentifier","src":"3866:2:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3851:6:11"},"nodeType":"YulFunctionCall","src":"3851:18:11"},"nodeType":"YulExpressionStatement","src":"3851:18:11"},{"body":{"nodeType":"YulBlock","src":"3917:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3926:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3929:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3919:6:11"},"nodeType":"YulFunctionCall","src":"3919:12:11"},"nodeType":"YulExpressionStatement","src":"3919:12:11"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3892:6:11"},{"name":"_1","nodeType":"YulIdentifier","src":"3900:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3888:3:11"},"nodeType":"YulFunctionCall","src":"3888:15:11"},{"kind":"number","nodeType":"YulLiteral","src":"3905:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3884:3:11"},"nodeType":"YulFunctionCall","src":"3884:26:11"},{"name":"end","nodeType":"YulIdentifier","src":"3912:3:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3881:2:11"},"nodeType":"YulFunctionCall","src":"3881:35:11"},"nodeType":"YulIf","src":"3878:55:11"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3959:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"3967:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3955:3:11"},"nodeType":"YulFunctionCall","src":"3955:17:11"},{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3978:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"3986:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3974:3:11"},"nodeType":"YulFunctionCall","src":"3974:17:11"},{"name":"_1","nodeType":"YulIdentifier","src":"3993:2:11"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"3942:12:11"},"nodeType":"YulFunctionCall","src":"3942:54:11"},"nodeType":"YulExpressionStatement","src":"3942:54:11"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4020:6:11"},{"name":"_1","nodeType":"YulIdentifier","src":"4028:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4016:3:11"},"nodeType":"YulFunctionCall","src":"4016:15:11"},{"kind":"number","nodeType":"YulLiteral","src":"4033:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4012:3:11"},"nodeType":"YulFunctionCall","src":"4012:26:11"},{"kind":"number","nodeType":"YulLiteral","src":"4040:1:11","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4005:6:11"},"nodeType":"YulFunctionCall","src":"4005:37:11"},"nodeType":"YulExpressionStatement","src":"4005:37:11"},{"nodeType":"YulAssignment","src":"4051:15:11","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"4060:6:11"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"4051:5:11"}]}]},"name":"abi_decode_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3380:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"3388:3:11","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"3396:5:11","type":""}],"src":"3353:719:11"},{"body":{"nodeType":"YulBlock","src":"4218:545:11","statements":[{"body":{"nodeType":"YulBlock","src":"4265:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4274:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4277:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4267:6:11"},"nodeType":"YulFunctionCall","src":"4267:12:11"},"nodeType":"YulExpressionStatement","src":"4267:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4239:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"4248:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4235:3:11"},"nodeType":"YulFunctionCall","src":"4235:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"4260:3:11","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4231:3:11"},"nodeType":"YulFunctionCall","src":"4231:33:11"},"nodeType":"YulIf","src":"4228:53:11"},{"nodeType":"YulVariableDeclaration","src":"4290:37:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4317:9:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4304:12:11"},"nodeType":"YulFunctionCall","src":"4304:23:11"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4294:6:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4336:28:11","value":{"kind":"number","nodeType":"YulLiteral","src":"4346:18:11","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"4340:2:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"4391:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4400:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4403:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4393:6:11"},"nodeType":"YulFunctionCall","src":"4393:12:11"},"nodeType":"YulExpressionStatement","src":"4393:12:11"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4379:6:11"},{"name":"_1","nodeType":"YulIdentifier","src":"4387:2:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4376:2:11"},"nodeType":"YulFunctionCall","src":"4376:14:11"},"nodeType":"YulIf","src":"4373:34:11"},{"nodeType":"YulAssignment","src":"4416:60:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4448:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"4459:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4444:3:11"},"nodeType":"YulFunctionCall","src":"4444:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4468:7:11"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"4426:17:11"},"nodeType":"YulFunctionCall","src":"4426:50:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4416:6:11"}]},{"nodeType":"YulVariableDeclaration","src":"4485:48:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4518:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"4529:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4514:3:11"},"nodeType":"YulFunctionCall","src":"4514:18:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4501:12:11"},"nodeType":"YulFunctionCall","src":"4501:32:11"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"4489:8:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"4562:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4571:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4574:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4564:6:11"},"nodeType":"YulFunctionCall","src":"4564:12:11"},"nodeType":"YulExpressionStatement","src":"4564:12:11"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"4548:8:11"},{"name":"_1","nodeType":"YulIdentifier","src":"4558:2:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4545:2:11"},"nodeType":"YulFunctionCall","src":"4545:16:11"},"nodeType":"YulIf","src":"4542:36:11"},{"nodeType":"YulAssignment","src":"4587:62:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4619:9:11"},{"name":"offset_1","nodeType":"YulIdentifier","src":"4630:8:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4615:3:11"},"nodeType":"YulFunctionCall","src":"4615:24:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4641:7:11"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"4597:17:11"},"nodeType":"YulFunctionCall","src":"4597:52:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4587:6:11"}]},{"nodeType":"YulAssignment","src":"4658:48:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4691:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"4702:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4687:3:11"},"nodeType":"YulFunctionCall","src":"4687:18:11"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"4668:18:11"},"nodeType":"YulFunctionCall","src":"4668:38:11"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4658:6:11"}]},{"nodeType":"YulAssignment","src":"4715:42:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4742:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"4753:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4738:3:11"},"nodeType":"YulFunctionCall","src":"4738:18:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4725:12:11"},"nodeType":"YulFunctionCall","src":"4725:32:11"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"4715:6:11"}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4160:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4171:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4183:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4191:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4199:6:11","type":""},{"name":"value3","nodeType":"YulTypedName","src":"4207:6:11","type":""}],"src":"4077:686:11"},{"body":{"nodeType":"YulBlock","src":"4814:114:11","statements":[{"nodeType":"YulAssignment","src":"4824:29:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4846:6:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4833:12:11"},"nodeType":"YulFunctionCall","src":"4833:20:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4824:5:11"}]},{"body":{"nodeType":"YulBlock","src":"4906:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4915:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4918:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4908:6:11"},"nodeType":"YulFunctionCall","src":"4908:12:11"},"nodeType":"YulExpressionStatement","src":"4908:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4875:5:11"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4896:5:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4889:6:11"},"nodeType":"YulFunctionCall","src":"4889:13:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4882:6:11"},"nodeType":"YulFunctionCall","src":"4882:21:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4872:2:11"},"nodeType":"YulFunctionCall","src":"4872:32:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4865:6:11"},"nodeType":"YulFunctionCall","src":"4865:40:11"},"nodeType":"YulIf","src":"4862:60:11"}]},"name":"abi_decode_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4793:6:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"4804:5:11","type":""}],"src":"4768:160:11"},{"body":{"nodeType":"YulBlock","src":"5031:224:11","statements":[{"body":{"nodeType":"YulBlock","src":"5077:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5086:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5089:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5079:6:11"},"nodeType":"YulFunctionCall","src":"5079:12:11"},"nodeType":"YulExpressionStatement","src":"5079:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5052:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"5061:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5048:3:11"},"nodeType":"YulFunctionCall","src":"5048:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"5073:2:11","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5044:3:11"},"nodeType":"YulFunctionCall","src":"5044:32:11"},"nodeType":"YulIf","src":"5041:52:11"},{"nodeType":"YulAssignment","src":"5102:39:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5131:9:11"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"5112:18:11"},"nodeType":"YulFunctionCall","src":"5112:29:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5102:6:11"}]},{"nodeType":"YulAssignment","src":"5150:45:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5180:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"5191:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5176:3:11"},"nodeType":"YulFunctionCall","src":"5176:18:11"}],"functionName":{"name":"abi_decode_bool","nodeType":"YulIdentifier","src":"5160:15:11"},"nodeType":"YulFunctionCall","src":"5160:35:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5150:6:11"}]},{"nodeType":"YulAssignment","src":"5204:45:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5234:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"5245:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5230:3:11"},"nodeType":"YulFunctionCall","src":"5230:18:11"}],"functionName":{"name":"abi_decode_bool","nodeType":"YulIdentifier","src":"5214:15:11"},"nodeType":"YulFunctionCall","src":"5214:35:11"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5204:6:11"}]}]},"name":"abi_decode_tuple_t_addresst_boolt_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4981:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4992:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5004:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5012:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5020:6:11","type":""}],"src":"4933:322:11"},{"body":{"nodeType":"YulBlock","src":"5330:110:11","statements":[{"body":{"nodeType":"YulBlock","src":"5376:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5385:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5388:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5378:6:11"},"nodeType":"YulFunctionCall","src":"5378:12:11"},"nodeType":"YulExpressionStatement","src":"5378:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5351:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"5360:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5347:3:11"},"nodeType":"YulFunctionCall","src":"5347:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"5372:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5343:3:11"},"nodeType":"YulFunctionCall","src":"5343:32:11"},"nodeType":"YulIf","src":"5340:52:11"},{"nodeType":"YulAssignment","src":"5401:33:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5424:9:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5411:12:11"},"nodeType":"YulFunctionCall","src":"5411:23:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5401:6:11"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5296:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5307:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5319:6:11","type":""}],"src":"5260:180:11"},{"body":{"nodeType":"YulBlock","src":"5546:102:11","statements":[{"nodeType":"YulAssignment","src":"5556:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5568:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"5579:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5564:3:11"},"nodeType":"YulFunctionCall","src":"5564:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5556:4:11"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5598:9:11"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5613:6:11"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5629:3:11","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"5634:1:11","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5625:3:11"},"nodeType":"YulFunctionCall","src":"5625:11:11"},{"kind":"number","nodeType":"YulLiteral","src":"5638:1:11","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5621:3:11"},"nodeType":"YulFunctionCall","src":"5621:19:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5609:3:11"},"nodeType":"YulFunctionCall","src":"5609:32:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5591:6:11"},"nodeType":"YulFunctionCall","src":"5591:51:11"},"nodeType":"YulExpressionStatement","src":"5591:51:11"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5515:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5526:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5537:4:11","type":""}],"src":"5445:203:11"},{"body":{"nodeType":"YulBlock","src":"5804:507:11","statements":[{"nodeType":"YulVariableDeclaration","src":"5814:12:11","value":{"kind":"number","nodeType":"YulLiteral","src":"5824:2:11","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"5818:2:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5835:32:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5853:9:11"},{"name":"_1","nodeType":"YulIdentifier","src":"5864:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5849:3:11"},"nodeType":"YulFunctionCall","src":"5849:18:11"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"5839:6:11","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5883:9:11"},{"name":"_1","nodeType":"YulIdentifier","src":"5894:2:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5876:6:11"},"nodeType":"YulFunctionCall","src":"5876:21:11"},"nodeType":"YulExpressionStatement","src":"5876:21:11"},{"nodeType":"YulVariableDeclaration","src":"5906:17:11","value":{"name":"tail_1","nodeType":"YulIdentifier","src":"5917:6:11"},"variables":[{"name":"pos","nodeType":"YulTypedName","src":"5910:3:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5932:27:11","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5952:6:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5946:5:11"},"nodeType":"YulFunctionCall","src":"5946:13:11"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5936:6:11","type":""}]},{"expression":{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"5975:6:11"},{"name":"length","nodeType":"YulIdentifier","src":"5983:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5968:6:11"},"nodeType":"YulFunctionCall","src":"5968:22:11"},"nodeType":"YulExpressionStatement","src":"5968:22:11"},{"nodeType":"YulAssignment","src":"5999:25:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6010:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"6021:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6006:3:11"},"nodeType":"YulFunctionCall","src":"6006:18:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5999:3:11"}]},{"nodeType":"YulVariableDeclaration","src":"6033:29:11","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6051:6:11"},{"name":"_1","nodeType":"YulIdentifier","src":"6059:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6047:3:11"},"nodeType":"YulFunctionCall","src":"6047:15:11"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"6037:6:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6071:10:11","value":{"kind":"number","nodeType":"YulLiteral","src":"6080:1:11","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"6075:1:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"6139:146:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6160:3:11"},{"arguments":[{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"6175:6:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6169:5:11"},"nodeType":"YulFunctionCall","src":"6169:13:11"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6192:3:11","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"6197:1:11","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6188:3:11"},"nodeType":"YulFunctionCall","src":"6188:11:11"},{"kind":"number","nodeType":"YulLiteral","src":"6201:1:11","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6184:3:11"},"nodeType":"YulFunctionCall","src":"6184:19:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6165:3:11"},"nodeType":"YulFunctionCall","src":"6165:39:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6153:6:11"},"nodeType":"YulFunctionCall","src":"6153:52:11"},"nodeType":"YulExpressionStatement","src":"6153:52:11"},{"nodeType":"YulAssignment","src":"6218:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6229:3:11"},{"name":"_1","nodeType":"YulIdentifier","src":"6234:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6225:3:11"},"nodeType":"YulFunctionCall","src":"6225:12:11"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6218:3:11"}]},{"nodeType":"YulAssignment","src":"6250:25:11","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"6264:6:11"},{"name":"_1","nodeType":"YulIdentifier","src":"6272:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6260:3:11"},"nodeType":"YulFunctionCall","src":"6260:15:11"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"6250:6:11"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6101:1:11"},{"name":"length","nodeType":"YulIdentifier","src":"6104:6:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6098:2:11"},"nodeType":"YulFunctionCall","src":"6098:13:11"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"6112:18:11","statements":[{"nodeType":"YulAssignment","src":"6114:14:11","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6123:1:11"},{"kind":"number","nodeType":"YulLiteral","src":"6126:1:11","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6119:3:11"},"nodeType":"YulFunctionCall","src":"6119:9:11"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"6114:1:11"}]}]},"pre":{"nodeType":"YulBlock","src":"6094:3:11","statements":[]},"src":"6090:195:11"},{"nodeType":"YulAssignment","src":"6294:11:11","value":{"name":"pos","nodeType":"YulIdentifier","src":"6302:3:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6294:4:11"}]}]},"name":"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5773:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5784:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5795:4:11","type":""}],"src":"5653:658:11"},{"body":{"nodeType":"YulBlock","src":"6641:556:11","statements":[{"nodeType":"YulVariableDeclaration","src":"6651:13:11","value":{"kind":"number","nodeType":"YulLiteral","src":"6661:3:11","type":"","value":"256"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"6655:2:11","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6680:9:11"},{"name":"_1","nodeType":"YulIdentifier","src":"6691:2:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6673:6:11"},"nodeType":"YulFunctionCall","src":"6673:21:11"},"nodeType":"YulExpressionStatement","src":"6673:21:11"},{"nodeType":"YulVariableDeclaration","src":"6703:59:11","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6735:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6747:9:11"},{"name":"_1","nodeType":"YulIdentifier","src":"6758:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6743:3:11"},"nodeType":"YulFunctionCall","src":"6743:18:11"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"6717:17:11"},"nodeType":"YulFunctionCall","src":"6717:45:11"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"6707:6:11","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6782:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"6793:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6778:3:11"},"nodeType":"YulFunctionCall","src":"6778:18:11"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"6802:6:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"6810:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6798:3:11"},"nodeType":"YulFunctionCall","src":"6798:22:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6771:6:11"},"nodeType":"YulFunctionCall","src":"6771:50:11"},"nodeType":"YulExpressionStatement","src":"6771:50:11"},{"nodeType":"YulAssignment","src":"6830:41:11","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"6856:6:11"},{"name":"tail_1","nodeType":"YulIdentifier","src":"6864:6:11"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"6838:17:11"},"nodeType":"YulFunctionCall","src":"6838:33:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6830:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6891:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"6902:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6887:3:11"},"nodeType":"YulFunctionCall","src":"6887:18:11"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"6911:6:11"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6927:3:11","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"6932:1:11","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6923:3:11"},"nodeType":"YulFunctionCall","src":"6923:11:11"},{"kind":"number","nodeType":"YulLiteral","src":"6936:1:11","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6919:3:11"},"nodeType":"YulFunctionCall","src":"6919:19:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6907:3:11"},"nodeType":"YulFunctionCall","src":"6907:32:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6880:6:11"},"nodeType":"YulFunctionCall","src":"6880:60:11"},"nodeType":"YulExpressionStatement","src":"6880:60:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6960:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"6971:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6956:3:11"},"nodeType":"YulFunctionCall","src":"6956:18:11"},{"name":"value3","nodeType":"YulIdentifier","src":"6976:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6949:6:11"},"nodeType":"YulFunctionCall","src":"6949:34:11"},"nodeType":"YulExpressionStatement","src":"6949:34:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7003:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"7014:3:11","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6999:3:11"},"nodeType":"YulFunctionCall","src":"6999:19:11"},{"name":"value4","nodeType":"YulIdentifier","src":"7020:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6992:6:11"},"nodeType":"YulFunctionCall","src":"6992:35:11"},"nodeType":"YulExpressionStatement","src":"6992:35:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7047:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"7058:3:11","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7043:3:11"},"nodeType":"YulFunctionCall","src":"7043:19:11"},{"name":"value5","nodeType":"YulIdentifier","src":"7064:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7036:6:11"},"nodeType":"YulFunctionCall","src":"7036:35:11"},"nodeType":"YulExpressionStatement","src":"7036:35:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7091:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"7102:3:11","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7087:3:11"},"nodeType":"YulFunctionCall","src":"7087:19:11"},{"arguments":[{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"7122:6:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7115:6:11"},"nodeType":"YulFunctionCall","src":"7115:14:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7108:6:11"},"nodeType":"YulFunctionCall","src":"7108:22:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7080:6:11"},"nodeType":"YulFunctionCall","src":"7080:51:11"},"nodeType":"YulExpressionStatement","src":"7080:51:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7151:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"7162:3:11","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7147:3:11"},"nodeType":"YulFunctionCall","src":"7147:19:11"},{"arguments":[{"arguments":[{"name":"value7","nodeType":"YulIdentifier","src":"7182:6:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7175:6:11"},"nodeType":"YulFunctionCall","src":"7175:14:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7168:6:11"},"nodeType":"YulFunctionCall","src":"7168:22:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7140:6:11"},"nodeType":"YulFunctionCall","src":"7140:51:11"},"nodeType":"YulExpressionStatement","src":"7140:51:11"}]},"name":"abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_address_t_uint256_t_uint256_t_uint256_t_bool_t_bool__to_t_string_memory_ptr_t_string_memory_ptr_t_address_t_uint256_t_uint256_t_uint256_t_bool_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6554:9:11","type":""},{"name":"value7","nodeType":"YulTypedName","src":"6565:6:11","type":""},{"name":"value6","nodeType":"YulTypedName","src":"6573:6:11","type":""},{"name":"value5","nodeType":"YulTypedName","src":"6581:6:11","type":""},{"name":"value4","nodeType":"YulTypedName","src":"6589:6:11","type":""},{"name":"value3","nodeType":"YulTypedName","src":"6597:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6605:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6613:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6621:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6632:4:11","type":""}],"src":"6316:881:11"},{"body":{"nodeType":"YulBlock","src":"7289:173:11","statements":[{"body":{"nodeType":"YulBlock","src":"7335:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7344:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7347:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7337:6:11"},"nodeType":"YulFunctionCall","src":"7337:12:11"},"nodeType":"YulExpressionStatement","src":"7337:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7310:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"7319:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7306:3:11"},"nodeType":"YulFunctionCall","src":"7306:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"7331:2:11","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7302:3:11"},"nodeType":"YulFunctionCall","src":"7302:32:11"},"nodeType":"YulIf","src":"7299:52:11"},{"nodeType":"YulAssignment","src":"7360:39:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7389:9:11"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"7370:18:11"},"nodeType":"YulFunctionCall","src":"7370:29:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7360:6:11"}]},{"nodeType":"YulAssignment","src":"7408:48:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7441:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"7452:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7437:3:11"},"nodeType":"YulFunctionCall","src":"7437:18:11"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"7418:18:11"},"nodeType":"YulFunctionCall","src":"7418:38:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7408:6:11"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7247:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7258:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7270:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7278:6:11","type":""}],"src":"7202:260:11"},{"body":{"nodeType":"YulBlock","src":"7522:325:11","statements":[{"nodeType":"YulAssignment","src":"7532:22:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7546:1:11","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"7549:4:11"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"7542:3:11"},"nodeType":"YulFunctionCall","src":"7542:12:11"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"7532:6:11"}]},{"nodeType":"YulVariableDeclaration","src":"7563:38:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7593:4:11"},{"kind":"number","nodeType":"YulLiteral","src":"7599:1:11","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7589:3:11"},"nodeType":"YulFunctionCall","src":"7589:12:11"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"7567:18:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"7640:31:11","statements":[{"nodeType":"YulAssignment","src":"7642:27:11","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7656:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"7664:4:11","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7652:3:11"},"nodeType":"YulFunctionCall","src":"7652:17:11"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"7642:6:11"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"7620:18:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7613:6:11"},"nodeType":"YulFunctionCall","src":"7613:26:11"},"nodeType":"YulIf","src":"7610:61:11"},{"body":{"nodeType":"YulBlock","src":"7730:111:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7751:1:11","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7758:3:11","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"7763:10:11","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7754:3:11"},"nodeType":"YulFunctionCall","src":"7754:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7744:6:11"},"nodeType":"YulFunctionCall","src":"7744:31:11"},"nodeType":"YulExpressionStatement","src":"7744:31:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7795:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7798:4:11","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7788:6:11"},"nodeType":"YulFunctionCall","src":"7788:15:11"},"nodeType":"YulExpressionStatement","src":"7788:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7823:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7826:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7816:6:11"},"nodeType":"YulFunctionCall","src":"7816:15:11"},"nodeType":"YulExpressionStatement","src":"7816:15:11"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"7686:18:11"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7709:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"7717:2:11","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7706:2:11"},"nodeType":"YulFunctionCall","src":"7706:14:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7683:2:11"},"nodeType":"YulFunctionCall","src":"7683:38:11"},"nodeType":"YulIf","src":"7680:161:11"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"7502:4:11","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"7511:6:11","type":""}],"src":"7467:380:11"},{"body":{"nodeType":"YulBlock","src":"8026:243:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8043:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"8054:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8036:6:11"},"nodeType":"YulFunctionCall","src":"8036:21:11"},"nodeType":"YulExpressionStatement","src":"8036:21:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8077:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"8088:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8073:3:11"},"nodeType":"YulFunctionCall","src":"8073:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"8093:2:11","type":"","value":"53"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8066:6:11"},"nodeType":"YulFunctionCall","src":"8066:30:11"},"nodeType":"YulExpressionStatement","src":"8066:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8116:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"8127:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8112:3:11"},"nodeType":"YulFunctionCall","src":"8112:18:11"},{"hexValue":"446972656374207472616e7366657273206e6f7420616c6c6f7765642e205573","kind":"string","nodeType":"YulLiteral","src":"8132:34:11","type":"","value":"Direct transfers not allowed. Us"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8105:6:11"},"nodeType":"YulFunctionCall","src":"8105:62:11"},"nodeType":"YulExpressionStatement","src":"8105:62:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8187:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"8198:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8183:3:11"},"nodeType":"YulFunctionCall","src":"8183:18:11"},{"hexValue":"6520636c61696d566573746564546f6b656e732829","kind":"string","nodeType":"YulLiteral","src":"8203:23:11","type":"","value":"e claimVestedTokens()"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8176:6:11"},"nodeType":"YulFunctionCall","src":"8176:51:11"},"nodeType":"YulExpressionStatement","src":"8176:51:11"},{"nodeType":"YulAssignment","src":"8236:27:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8248:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"8259:3:11","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8244:3:11"},"nodeType":"YulFunctionCall","src":"8244:19:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8236:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_5c0b74416edcfc67accf704e19bd57cb9217cae2440f64edf8ce8a1ca27508d5__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8003:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8017:4:11","type":""}],"src":"7852:417:11"},{"body":{"nodeType":"YulBlock","src":"8448:172:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8465:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"8476:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8458:6:11"},"nodeType":"YulFunctionCall","src":"8458:21:11"},"nodeType":"YulExpressionStatement","src":"8458:21:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8499:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"8510:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8495:3:11"},"nodeType":"YulFunctionCall","src":"8495:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"8515:2:11","type":"","value":"22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8488:6:11"},"nodeType":"YulFunctionCall","src":"8488:30:11"},"nodeType":"YulExpressionStatement","src":"8488:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8538:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"8549:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8534:3:11"},"nodeType":"YulFunctionCall","src":"8534:18:11"},{"hexValue":"496e76616c69642077616c6c65742061646472657373","kind":"string","nodeType":"YulLiteral","src":"8554:24:11","type":"","value":"Invalid wallet address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8527:6:11"},"nodeType":"YulFunctionCall","src":"8527:52:11"},"nodeType":"YulExpressionStatement","src":"8527:52:11"},{"nodeType":"YulAssignment","src":"8588:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8600:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"8611:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8596:3:11"},"nodeType":"YulFunctionCall","src":"8596:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8588:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_dd128e933d077647bedee942f8fad0896dbcf403dd101362daa9f1ef97dd6adf__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8425:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8439:4:11","type":""}],"src":"8274:346:11"},{"body":{"nodeType":"YulBlock","src":"8799:179:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8816:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"8827:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8809:6:11"},"nodeType":"YulFunctionCall","src":"8809:21:11"},"nodeType":"YulExpressionStatement","src":"8809:21:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8850:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"8861:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8846:3:11"},"nodeType":"YulFunctionCall","src":"8846:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"8866:2:11","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8839:6:11"},"nodeType":"YulFunctionCall","src":"8839:30:11"},"nodeType":"YulExpressionStatement","src":"8839:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8889:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"8900:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8885:3:11"},"nodeType":"YulFunctionCall","src":"8885:18:11"},{"hexValue":"496e76616c696420616c6c6f636174696f6e2070657263656e74616765","kind":"string","nodeType":"YulLiteral","src":"8905:31:11","type":"","value":"Invalid allocation percentage"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8878:6:11"},"nodeType":"YulFunctionCall","src":"8878:59:11"},"nodeType":"YulExpressionStatement","src":"8878:59:11"},{"nodeType":"YulAssignment","src":"8946:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8958:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"8969:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8954:3:11"},"nodeType":"YulFunctionCall","src":"8954:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8946:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_63e9229a8fa1f95078a5177d9a88a047bdea7f35bc1d19b14eee40f939d3a995__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8776:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8790:4:11","type":""}],"src":"8625:353:11"},{"body":{"nodeType":"YulBlock","src":"9157:176:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9174:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"9185:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9167:6:11"},"nodeType":"YulFunctionCall","src":"9167:21:11"},"nodeType":"YulExpressionStatement","src":"9167:21:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9208:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"9219:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9204:3:11"},"nodeType":"YulFunctionCall","src":"9204:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"9224:2:11","type":"","value":"26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9197:6:11"},"nodeType":"YulFunctionCall","src":"9197:30:11"},"nodeType":"YulExpressionStatement","src":"9197:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9247:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"9258:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9243:3:11"},"nodeType":"YulFunctionCall","src":"9243:18:11"},{"hexValue":"5061727469636970616e7420616c726561647920657869737473","kind":"string","nodeType":"YulLiteral","src":"9263:28:11","type":"","value":"Participant already exists"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9236:6:11"},"nodeType":"YulFunctionCall","src":"9236:56:11"},"nodeType":"YulExpressionStatement","src":"9236:56:11"},{"nodeType":"YulAssignment","src":"9301:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9313:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"9324:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9309:3:11"},"nodeType":"YulFunctionCall","src":"9309:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9301:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_36294eea575da5f966433b0b292d82b2b7eeb81a34c05d7a6850129b8879662c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9134:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9148:4:11","type":""}],"src":"8983:350:11"},{"body":{"nodeType":"YulBlock","src":"9370:95:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9387:1:11","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9394:3:11","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"9399:10:11","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9390:3:11"},"nodeType":"YulFunctionCall","src":"9390:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9380:6:11"},"nodeType":"YulFunctionCall","src":"9380:31:11"},"nodeType":"YulExpressionStatement","src":"9380:31:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9427:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"9430:4:11","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9420:6:11"},"nodeType":"YulFunctionCall","src":"9420:15:11"},"nodeType":"YulExpressionStatement","src":"9420:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9451:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9454:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9444:6:11"},"nodeType":"YulFunctionCall","src":"9444:15:11"},"nodeType":"YulExpressionStatement","src":"9444:15:11"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"9338:127:11"},{"body":{"nodeType":"YulBlock","src":"9522:116:11","statements":[{"nodeType":"YulAssignment","src":"9532:20:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9547:1:11"},{"name":"y","nodeType":"YulIdentifier","src":"9550:1:11"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"9543:3:11"},"nodeType":"YulFunctionCall","src":"9543:9:11"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"9532:7:11"}]},{"body":{"nodeType":"YulBlock","src":"9610:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"9612:16:11"},"nodeType":"YulFunctionCall","src":"9612:18:11"},"nodeType":"YulExpressionStatement","src":"9612:18:11"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9581:1:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9574:6:11"},"nodeType":"YulFunctionCall","src":"9574:9:11"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"9588:1:11"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"9595:7:11"},{"name":"x","nodeType":"YulIdentifier","src":"9604:1:11"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9591:3:11"},"nodeType":"YulFunctionCall","src":"9591:15:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"9585:2:11"},"nodeType":"YulFunctionCall","src":"9585:22:11"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"9571:2:11"},"nodeType":"YulFunctionCall","src":"9571:37:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9564:6:11"},"nodeType":"YulFunctionCall","src":"9564:45:11"},"nodeType":"YulIf","src":"9561:71:11"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"9501:1:11","type":""},{"name":"y","nodeType":"YulTypedName","src":"9504:1:11","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"9510:7:11","type":""}],"src":"9470:168:11"},{"body":{"nodeType":"YulBlock","src":"9689:171:11","statements":[{"body":{"nodeType":"YulBlock","src":"9720:111:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9741:1:11","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9748:3:11","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"9753:10:11","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9744:3:11"},"nodeType":"YulFunctionCall","src":"9744:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9734:6:11"},"nodeType":"YulFunctionCall","src":"9734:31:11"},"nodeType":"YulExpressionStatement","src":"9734:31:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9785:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"9788:4:11","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9778:6:11"},"nodeType":"YulFunctionCall","src":"9778:15:11"},"nodeType":"YulExpressionStatement","src":"9778:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9813:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9816:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9806:6:11"},"nodeType":"YulFunctionCall","src":"9806:15:11"},"nodeType":"YulExpressionStatement","src":"9806:15:11"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"9709:1:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9702:6:11"},"nodeType":"YulFunctionCall","src":"9702:9:11"},"nodeType":"YulIf","src":"9699:132:11"},{"nodeType":"YulAssignment","src":"9840:14:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9849:1:11"},{"name":"y","nodeType":"YulIdentifier","src":"9852:1:11"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9845:3:11"},"nodeType":"YulFunctionCall","src":"9845:9:11"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"9840:1:11"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"9674:1:11","type":""},{"name":"y","nodeType":"YulTypedName","src":"9677:1:11","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"9683:1:11","type":""}],"src":"9643:217:11"},{"body":{"nodeType":"YulBlock","src":"9913:77:11","statements":[{"nodeType":"YulAssignment","src":"9923:16:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9934:1:11"},{"name":"y","nodeType":"YulIdentifier","src":"9937:1:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9930:3:11"},"nodeType":"YulFunctionCall","src":"9930:9:11"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"9923:3:11"}]},{"body":{"nodeType":"YulBlock","src":"9962:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"9964:16:11"},"nodeType":"YulFunctionCall","src":"9964:18:11"},"nodeType":"YulExpressionStatement","src":"9964:18:11"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9954:1:11"},{"name":"sum","nodeType":"YulIdentifier","src":"9957:3:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9951:2:11"},"nodeType":"YulFunctionCall","src":"9951:10:11"},"nodeType":"YulIf","src":"9948:36:11"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"9896:1:11","type":""},{"name":"y","nodeType":"YulTypedName","src":"9899:1:11","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"9905:3:11","type":""}],"src":"9865:125:11"},{"body":{"nodeType":"YulBlock","src":"10169:181:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10186:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"10197:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10179:6:11"},"nodeType":"YulFunctionCall","src":"10179:21:11"},"nodeType":"YulExpressionStatement","src":"10179:21:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10220:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"10231:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10216:3:11"},"nodeType":"YulFunctionCall","src":"10216:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"10236:2:11","type":"","value":"31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10209:6:11"},"nodeType":"YulFunctionCall","src":"10209:30:11"},"nodeType":"YulExpressionStatement","src":"10209:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10259:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"10270:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10255:3:11"},"nodeType":"YulFunctionCall","src":"10255:18:11"},{"hexValue":"546f74616c20616c6c6f636174696f6e206578636565647320737570706c79","kind":"string","nodeType":"YulLiteral","src":"10275:33:11","type":"","value":"Total allocation exceeds supply"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10248:6:11"},"nodeType":"YulFunctionCall","src":"10248:61:11"},"nodeType":"YulExpressionStatement","src":"10248:61:11"},{"nodeType":"YulAssignment","src":"10318:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10330:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"10341:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10326:3:11"},"nodeType":"YulFunctionCall","src":"10326:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10318:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_39380453c9f7800ce01faa0ded64f5e5e58b5e83489ff3b955fa5b4d55cad1f5__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10146:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10160:4:11","type":""}],"src":"9995:355:11"},{"body":{"nodeType":"YulBlock","src":"10411:65:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10428:1:11","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"10431:3:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10421:6:11"},"nodeType":"YulFunctionCall","src":"10421:14:11"},"nodeType":"YulExpressionStatement","src":"10421:14:11"},{"nodeType":"YulAssignment","src":"10444:26:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10462:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10465:4:11","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"10452:9:11"},"nodeType":"YulFunctionCall","src":"10452:18:11"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"10444:4:11"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"10394:3:11","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"10402:4:11","type":""}],"src":"10355:121:11"},{"body":{"nodeType":"YulBlock","src":"10562:464:11","statements":[{"body":{"nodeType":"YulBlock","src":"10595:425:11","statements":[{"nodeType":"YulVariableDeclaration","src":"10609:11:11","value":{"kind":"number","nodeType":"YulLiteral","src":"10619:1:11","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"10613:2:11","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"10640:2:11"},{"name":"array","nodeType":"YulIdentifier","src":"10644:5:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10633:6:11"},"nodeType":"YulFunctionCall","src":"10633:17:11"},"nodeType":"YulExpressionStatement","src":"10633:17:11"},{"nodeType":"YulVariableDeclaration","src":"10663:31:11","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"10685:2:11"},{"kind":"number","nodeType":"YulLiteral","src":"10689:4:11","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"10675:9:11"},"nodeType":"YulFunctionCall","src":"10675:19:11"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"10667:4:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"10707:57:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"10730:4:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10740:1:11","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"10747:10:11"},{"kind":"number","nodeType":"YulLiteral","src":"10759:2:11","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10743:3:11"},"nodeType":"YulFunctionCall","src":"10743:19:11"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"10736:3:11"},"nodeType":"YulFunctionCall","src":"10736:27:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10726:3:11"},"nodeType":"YulFunctionCall","src":"10726:38:11"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"10711:11:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"10801:23:11","statements":[{"nodeType":"YulAssignment","src":"10803:19:11","value":{"name":"data","nodeType":"YulIdentifier","src":"10818:4:11"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"10803:11:11"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"10783:10:11"},{"kind":"number","nodeType":"YulLiteral","src":"10795:4:11","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10780:2:11"},"nodeType":"YulFunctionCall","src":"10780:20:11"},"nodeType":"YulIf","src":"10777:47:11"},{"nodeType":"YulVariableDeclaration","src":"10837:41:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"10851:4:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10861:1:11","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"10868:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"10873:2:11","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10864:3:11"},"nodeType":"YulFunctionCall","src":"10864:12:11"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"10857:3:11"},"nodeType":"YulFunctionCall","src":"10857:20:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10847:3:11"},"nodeType":"YulFunctionCall","src":"10847:31:11"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"10841:2:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"10891:24:11","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"10904:11:11"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"10895:5:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"10989:21:11","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"10998:5:11"},{"name":"_1","nodeType":"YulIdentifier","src":"11005:2:11"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"10991:6:11"},"nodeType":"YulFunctionCall","src":"10991:17:11"},"nodeType":"YulExpressionStatement","src":"10991:17:11"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"10939:5:11"},{"name":"_2","nodeType":"YulIdentifier","src":"10946:2:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10936:2:11"},"nodeType":"YulFunctionCall","src":"10936:13:11"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"10950:26:11","statements":[{"nodeType":"YulAssignment","src":"10952:22:11","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"10965:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"10972:1:11","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10961:3:11"},"nodeType":"YulFunctionCall","src":"10961:13:11"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"10952:5:11"}]}]},"pre":{"nodeType":"YulBlock","src":"10932:3:11","statements":[]},"src":"10928:82:11"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"10578:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"10583:2:11","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10575:2:11"},"nodeType":"YulFunctionCall","src":"10575:11:11"},"nodeType":"YulIf","src":"10572:448:11"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"10534:5:11","type":""},{"name":"len","nodeType":"YulTypedName","src":"10541:3:11","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"10546:10:11","type":""}],"src":"10481:545:11"},{"body":{"nodeType":"YulBlock","src":"11116:81:11","statements":[{"nodeType":"YulAssignment","src":"11126:65:11","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"11141:4:11"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11159:1:11","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"11162:3:11"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"11155:3:11"},"nodeType":"YulFunctionCall","src":"11155:11:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11172:1:11","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"11168:3:11"},"nodeType":"YulFunctionCall","src":"11168:6:11"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"11151:3:11"},"nodeType":"YulFunctionCall","src":"11151:24:11"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"11147:3:11"},"nodeType":"YulFunctionCall","src":"11147:29:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11137:3:11"},"nodeType":"YulFunctionCall","src":"11137:40:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11183:1:11","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"11186:3:11"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"11179:3:11"},"nodeType":"YulFunctionCall","src":"11179:11:11"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"11134:2:11"},"nodeType":"YulFunctionCall","src":"11134:57:11"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"11126:4:11"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"11093:4:11","type":""},{"name":"len","nodeType":"YulTypedName","src":"11099:3:11","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"11107:4:11","type":""}],"src":"11031:166:11"},{"body":{"nodeType":"YulBlock","src":"11298:1256:11","statements":[{"nodeType":"YulVariableDeclaration","src":"11308:24:11","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"11328:3:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11322:5:11"},"nodeType":"YulFunctionCall","src":"11322:10:11"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"11312:6:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"11375:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"11377:16:11"},"nodeType":"YulFunctionCall","src":"11377:18:11"},"nodeType":"YulExpressionStatement","src":"11377:18:11"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"11347:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"11355:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11344:2:11"},"nodeType":"YulFunctionCall","src":"11344:30:11"},"nodeType":"YulIf","src":"11341:56:11"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"11450:4:11"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"11488:4:11"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"11482:5:11"},"nodeType":"YulFunctionCall","src":"11482:11:11"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"11456:25:11"},"nodeType":"YulFunctionCall","src":"11456:38:11"},{"name":"newLen","nodeType":"YulIdentifier","src":"11496:6:11"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"11406:43:11"},"nodeType":"YulFunctionCall","src":"11406:97:11"},"nodeType":"YulExpressionStatement","src":"11406:97:11"},{"nodeType":"YulVariableDeclaration","src":"11512:18:11","value":{"kind":"number","nodeType":"YulLiteral","src":"11529:1:11","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"11516:9:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"11539:23:11","value":{"kind":"number","nodeType":"YulLiteral","src":"11558:4:11","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"11543:11:11","type":""}]},{"nodeType":"YulAssignment","src":"11571:24:11","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"11584:11:11"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"11571:9:11"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"11641:656:11","statements":[{"nodeType":"YulVariableDeclaration","src":"11655:35:11","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"11674:6:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11686:2:11","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"11682:3:11"},"nodeType":"YulFunctionCall","src":"11682:7:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11670:3:11"},"nodeType":"YulFunctionCall","src":"11670:20:11"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"11659:7:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"11703:49:11","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"11747:4:11"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"11717:29:11"},"nodeType":"YulFunctionCall","src":"11717:35:11"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"11707:6:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"11765:10:11","value":{"kind":"number","nodeType":"YulLiteral","src":"11774:1:11","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"11769:1:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"11852:172:11","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"11877:6:11"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"11895:3:11"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"11900:9:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11891:3:11"},"nodeType":"YulFunctionCall","src":"11891:19:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11885:5:11"},"nodeType":"YulFunctionCall","src":"11885:26:11"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"11870:6:11"},"nodeType":"YulFunctionCall","src":"11870:42:11"},"nodeType":"YulExpressionStatement","src":"11870:42:11"},{"nodeType":"YulAssignment","src":"11929:24:11","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"11943:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"11951:1:11","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11939:3:11"},"nodeType":"YulFunctionCall","src":"11939:14:11"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"11929:6:11"}]},{"nodeType":"YulAssignment","src":"11970:40:11","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"11987:9:11"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"11998:11:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11983:3:11"},"nodeType":"YulFunctionCall","src":"11983:27:11"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"11970:9:11"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"11799:1:11"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"11802:7:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11796:2:11"},"nodeType":"YulFunctionCall","src":"11796:14:11"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"11811:28:11","statements":[{"nodeType":"YulAssignment","src":"11813:24:11","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"11822:1:11"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"11825:11:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11818:3:11"},"nodeType":"YulFunctionCall","src":"11818:19:11"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"11813:1:11"}]}]},"pre":{"nodeType":"YulBlock","src":"11792:3:11","statements":[]},"src":"11788:236:11"},{"body":{"nodeType":"YulBlock","src":"12072:166:11","statements":[{"nodeType":"YulVariableDeclaration","src":"12090:43:11","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"12117:3:11"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"12122:9:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12113:3:11"},"nodeType":"YulFunctionCall","src":"12113:19:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12107:5:11"},"nodeType":"YulFunctionCall","src":"12107:26:11"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"12094:9:11","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"12157:6:11"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"12169:9:11"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12196:1:11","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"12199:6:11"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"12192:3:11"},"nodeType":"YulFunctionCall","src":"12192:14:11"},{"kind":"number","nodeType":"YulLiteral","src":"12208:3:11","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12188:3:11"},"nodeType":"YulFunctionCall","src":"12188:24:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12218:1:11","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"12214:3:11"},"nodeType":"YulFunctionCall","src":"12214:6:11"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"12184:3:11"},"nodeType":"YulFunctionCall","src":"12184:37:11"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"12180:3:11"},"nodeType":"YulFunctionCall","src":"12180:42:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12165:3:11"},"nodeType":"YulFunctionCall","src":"12165:58:11"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"12150:6:11"},"nodeType":"YulFunctionCall","src":"12150:74:11"},"nodeType":"YulExpressionStatement","src":"12150:74:11"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"12043:7:11"},{"name":"newLen","nodeType":"YulIdentifier","src":"12052:6:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"12040:2:11"},"nodeType":"YulFunctionCall","src":"12040:19:11"},"nodeType":"YulIf","src":"12037:201:11"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"12258:4:11"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12272:1:11","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"12275:6:11"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"12268:3:11"},"nodeType":"YulFunctionCall","src":"12268:14:11"},{"kind":"number","nodeType":"YulLiteral","src":"12284:1:11","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12264:3:11"},"nodeType":"YulFunctionCall","src":"12264:22:11"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"12251:6:11"},"nodeType":"YulFunctionCall","src":"12251:36:11"},"nodeType":"YulExpressionStatement","src":"12251:36:11"}]},"nodeType":"YulCase","src":"11634:663:11","value":{"kind":"number","nodeType":"YulLiteral","src":"11639:1:11","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"12314:234:11","statements":[{"nodeType":"YulVariableDeclaration","src":"12328:14:11","value":{"kind":"number","nodeType":"YulLiteral","src":"12341:1:11","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"12332:5:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"12377:67:11","statements":[{"nodeType":"YulAssignment","src":"12395:35:11","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"12414:3:11"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"12419:9:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12410:3:11"},"nodeType":"YulFunctionCall","src":"12410:19:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12404:5:11"},"nodeType":"YulFunctionCall","src":"12404:26:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"12395:5:11"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"12358:6:11"},"nodeType":"YulIf","src":"12355:89:11"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"12464:4:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12523:5:11"},{"name":"newLen","nodeType":"YulIdentifier","src":"12530:6:11"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"12470:52:11"},"nodeType":"YulFunctionCall","src":"12470:67:11"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"12457:6:11"},"nodeType":"YulFunctionCall","src":"12457:81:11"},"nodeType":"YulExpressionStatement","src":"12457:81:11"}]},"nodeType":"YulCase","src":"12306:242:11","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"11614:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"11622:2:11","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11611:2:11"},"nodeType":"YulFunctionCall","src":"11611:14:11"},"nodeType":"YulSwitch","src":"11604:944:11"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"11283:4:11","type":""},{"name":"src","nodeType":"YulTypedName","src":"11289:3:11","type":""}],"src":"11202:1352:11"},{"body":{"nodeType":"YulBlock","src":"12756:257:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12773:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"12784:2:11","type":"","value":"96"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12766:6:11"},"nodeType":"YulFunctionCall","src":"12766:21:11"},"nodeType":"YulExpressionStatement","src":"12766:21:11"},{"nodeType":"YulVariableDeclaration","src":"12796:59:11","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12828:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12840:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"12851:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12836:3:11"},"nodeType":"YulFunctionCall","src":"12836:18:11"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"12810:17:11"},"nodeType":"YulFunctionCall","src":"12810:45:11"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"12800:6:11","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12875:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"12886:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12871:3:11"},"nodeType":"YulFunctionCall","src":"12871:18:11"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"12895:6:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"12903:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12891:3:11"},"nodeType":"YulFunctionCall","src":"12891:22:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12864:6:11"},"nodeType":"YulFunctionCall","src":"12864:50:11"},"nodeType":"YulExpressionStatement","src":"12864:50:11"},{"nodeType":"YulAssignment","src":"12923:41:11","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"12949:6:11"},{"name":"tail_1","nodeType":"YulIdentifier","src":"12957:6:11"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"12931:17:11"},"nodeType":"YulFunctionCall","src":"12931:33:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12923:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12984:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"12995:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12980:3:11"},"nodeType":"YulFunctionCall","src":"12980:18:11"},{"name":"value2","nodeType":"YulIdentifier","src":"13000:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12973:6:11"},"nodeType":"YulFunctionCall","src":"12973:34:11"},"nodeType":"YulExpressionStatement","src":"12973:34:11"}]},"name":"abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_uint256__to_t_string_memory_ptr_t_string_memory_ptr_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12709:9:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"12720:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12728:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12736:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12747:4:11","type":""}],"src":"12559:454:11"},{"body":{"nodeType":"YulBlock","src":"13192:167:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13209:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"13220:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13202:6:11"},"nodeType":"YulFunctionCall","src":"13202:21:11"},"nodeType":"YulExpressionStatement","src":"13202:21:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13243:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"13254:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13239:3:11"},"nodeType":"YulFunctionCall","src":"13239:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"13259:2:11","type":"","value":"17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13232:6:11"},"nodeType":"YulFunctionCall","src":"13232:30:11"},"nodeType":"YulExpressionStatement","src":"13232:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13282:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"13293:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13278:3:11"},"nodeType":"YulFunctionCall","src":"13278:18:11"},{"hexValue":"4e6f742061207061727469636970616e74","kind":"string","nodeType":"YulLiteral","src":"13298:19:11","type":"","value":"Not a participant"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13271:6:11"},"nodeType":"YulFunctionCall","src":"13271:47:11"},"nodeType":"YulExpressionStatement","src":"13271:47:11"},{"nodeType":"YulAssignment","src":"13327:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13339:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"13350:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13335:3:11"},"nodeType":"YulFunctionCall","src":"13335:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13327:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_11f62d0fb8618a929bf1cf2b60befadc2f28b23a8c72ce2e7904e6a75d66ecd7__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13169:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13183:4:11","type":""}],"src":"13018:341:11"},{"body":{"nodeType":"YulBlock","src":"13538:175:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13555:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"13566:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13548:6:11"},"nodeType":"YulFunctionCall","src":"13548:21:11"},"nodeType":"YulExpressionStatement","src":"13548:21:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13589:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"13600:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13585:3:11"},"nodeType":"YulFunctionCall","src":"13585:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"13605:2:11","type":"","value":"25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13578:6:11"},"nodeType":"YulFunctionCall","src":"13578:30:11"},"nodeType":"YulExpressionStatement","src":"13578:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13628:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"13639:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13624:3:11"},"nodeType":"YulFunctionCall","src":"13624:18:11"},{"hexValue":"5061727469636970616e74206973206e6f7420616374697665","kind":"string","nodeType":"YulLiteral","src":"13644:27:11","type":"","value":"Participant is not active"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13617:6:11"},"nodeType":"YulFunctionCall","src":"13617:55:11"},"nodeType":"YulExpressionStatement","src":"13617:55:11"},{"nodeType":"YulAssignment","src":"13681:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13693:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"13704:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13689:3:11"},"nodeType":"YulFunctionCall","src":"13689:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13681:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_ba931d06c9e8c3c863beb457700c9a59ea91d428f30af1b525bf5885a1c343a1__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13515:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13529:4:11","type":""}],"src":"13364:349:11"},{"body":{"nodeType":"YulBlock","src":"13835:151:11","statements":[{"nodeType":"YulAssignment","src":"13845:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13857:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"13868:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13853:3:11"},"nodeType":"YulFunctionCall","src":"13853:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13845:4:11"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13887:9:11"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13912:6:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"13905:6:11"},"nodeType":"YulFunctionCall","src":"13905:14:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"13898:6:11"},"nodeType":"YulFunctionCall","src":"13898:22:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13880:6:11"},"nodeType":"YulFunctionCall","src":"13880:41:11"},"nodeType":"YulExpressionStatement","src":"13880:41:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13941:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"13952:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13937:3:11"},"nodeType":"YulFunctionCall","src":"13937:18:11"},{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"13971:6:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"13964:6:11"},"nodeType":"YulFunctionCall","src":"13964:14:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"13957:6:11"},"nodeType":"YulFunctionCall","src":"13957:22:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13930:6:11"},"nodeType":"YulFunctionCall","src":"13930:50:11"},"nodeType":"YulExpressionStatement","src":"13930:50:11"}]},"name":"abi_encode_tuple_t_bool_t_bool__to_t_bool_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13796:9:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13807:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13815:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13826:4:11","type":""}],"src":"13718:268:11"},{"body":{"nodeType":"YulBlock","src":"14040:79:11","statements":[{"nodeType":"YulAssignment","src":"14050:17:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"14062:1:11"},{"name":"y","nodeType":"YulIdentifier","src":"14065:1:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14058:3:11"},"nodeType":"YulFunctionCall","src":"14058:9:11"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"14050:4:11"}]},{"body":{"nodeType":"YulBlock","src":"14091:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"14093:16:11"},"nodeType":"YulFunctionCall","src":"14093:18:11"},"nodeType":"YulExpressionStatement","src":"14093:18:11"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"14082:4:11"},{"name":"x","nodeType":"YulIdentifier","src":"14088:1:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14079:2:11"},"nodeType":"YulFunctionCall","src":"14079:11:11"},"nodeType":"YulIf","src":"14076:37:11"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"14022:1:11","type":""},{"name":"y","nodeType":"YulTypedName","src":"14025:1:11","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"14031:4:11","type":""}],"src":"13991:128:11"},{"body":{"nodeType":"YulBlock","src":"14298:171:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14315:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"14326:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14308:6:11"},"nodeType":"YulFunctionCall","src":"14308:21:11"},"nodeType":"YulExpressionStatement","src":"14308:21:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14349:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"14360:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14345:3:11"},"nodeType":"YulFunctionCall","src":"14345:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"14365:2:11","type":"","value":"21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14338:6:11"},"nodeType":"YulFunctionCall","src":"14338:30:11"},"nodeType":"YulExpressionStatement","src":"14338:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14388:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"14399:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14384:3:11"},"nodeType":"YulFunctionCall","src":"14384:18:11"},{"hexValue":"4e6f207061727469636970616e7473206164646564","kind":"string","nodeType":"YulLiteral","src":"14404:23:11","type":"","value":"No participants added"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14377:6:11"},"nodeType":"YulFunctionCall","src":"14377:51:11"},"nodeType":"YulExpressionStatement","src":"14377:51:11"},{"nodeType":"YulAssignment","src":"14437:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14449:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"14460:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14445:3:11"},"nodeType":"YulFunctionCall","src":"14445:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14437:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_bfa4b0e127ac972ceaa42f4b0227d4aa2f83ec1f5f44d3cffbeea103fe373b8e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14275:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14289:4:11","type":""}],"src":"14124:345:11"},{"body":{"nodeType":"YulBlock","src":"14506:95:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14523:1:11","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14530:3:11","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"14535:10:11","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"14526:3:11"},"nodeType":"YulFunctionCall","src":"14526:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14516:6:11"},"nodeType":"YulFunctionCall","src":"14516:31:11"},"nodeType":"YulExpressionStatement","src":"14516:31:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14563:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"14566:4:11","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14556:6:11"},"nodeType":"YulFunctionCall","src":"14556:15:11"},"nodeType":"YulExpressionStatement","src":"14556:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14587:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14590:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14580:6:11"},"nodeType":"YulFunctionCall","src":"14580:15:11"},"nodeType":"YulExpressionStatement","src":"14580:15:11"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"14474:127:11"},{"body":{"nodeType":"YulBlock","src":"14653:88:11","statements":[{"body":{"nodeType":"YulBlock","src":"14684:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"14686:16:11"},"nodeType":"YulFunctionCall","src":"14686:18:11"},"nodeType":"YulExpressionStatement","src":"14686:18:11"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14669:5:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14680:1:11","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"14676:3:11"},"nodeType":"YulFunctionCall","src":"14676:6:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"14666:2:11"},"nodeType":"YulFunctionCall","src":"14666:17:11"},"nodeType":"YulIf","src":"14663:43:11"},{"nodeType":"YulAssignment","src":"14715:20:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14726:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"14733:1:11","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14722:3:11"},"nodeType":"YulFunctionCall","src":"14722:13:11"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"14715:3:11"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14635:5:11","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"14645:3:11","type":""}],"src":"14606:135:11"},{"body":{"nodeType":"YulBlock","src":"14920:176:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14937:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"14948:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14930:6:11"},"nodeType":"YulFunctionCall","src":"14930:21:11"},"nodeType":"YulExpressionStatement","src":"14930:21:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14971:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"14982:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14967:3:11"},"nodeType":"YulFunctionCall","src":"14967:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"14987:2:11","type":"","value":"26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14960:6:11"},"nodeType":"YulFunctionCall","src":"14960:30:11"},"nodeType":"YulExpressionStatement","src":"14960:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15010:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"15021:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15006:3:11"},"nodeType":"YulFunctionCall","src":"15006:18:11"},{"hexValue":"56616c756174696f6e206d75737420626520706f736974697665","kind":"string","nodeType":"YulLiteral","src":"15026:28:11","type":"","value":"Valuation must be positive"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14999:6:11"},"nodeType":"YulFunctionCall","src":"14999:56:11"},"nodeType":"YulExpressionStatement","src":"14999:56:11"},{"nodeType":"YulAssignment","src":"15064:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15076:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"15087:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15072:3:11"},"nodeType":"YulFunctionCall","src":"15072:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15064:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_c3083844e6ae086f32b4b28fe6399ccf6a6a41e8265ee628860987b496b4a69c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14897:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14911:4:11","type":""}],"src":"14746:350:11"},{"body":{"nodeType":"YulBlock","src":"15275:182:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15292:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"15303:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15285:6:11"},"nodeType":"YulFunctionCall","src":"15285:21:11"},"nodeType":"YulExpressionStatement","src":"15285:21:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15326:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"15337:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15322:3:11"},"nodeType":"YulFunctionCall","src":"15322:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"15342:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15315:6:11"},"nodeType":"YulFunctionCall","src":"15315:30:11"},"nodeType":"YulExpressionStatement","src":"15315:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15365:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"15376:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15361:3:11"},"nodeType":"YulFunctionCall","src":"15361:18:11"},{"hexValue":"5061727469636970616e7420686173206c656674207468652070726f6a656374","kind":"string","nodeType":"YulLiteral","src":"15381:34:11","type":"","value":"Participant has left the project"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15354:6:11"},"nodeType":"YulFunctionCall","src":"15354:62:11"},"nodeType":"YulExpressionStatement","src":"15354:62:11"},{"nodeType":"YulAssignment","src":"15425:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15437:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"15448:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15433:3:11"},"nodeType":"YulFunctionCall","src":"15433:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15425:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_ad0541420148dbb2367eac08105a1bad9f8841b2d3b4ac3c8b42a0aa83e9855f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15252:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15266:4:11","type":""}],"src":"15101:356:11"},{"body":{"nodeType":"YulBlock","src":"15636:179:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15653:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"15664:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15646:6:11"},"nodeType":"YulFunctionCall","src":"15646:21:11"},"nodeType":"YulExpressionStatement","src":"15646:21:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15687:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"15698:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15683:3:11"},"nodeType":"YulFunctionCall","src":"15683:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"15703:2:11","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15676:6:11"},"nodeType":"YulFunctionCall","src":"15676:30:11"},"nodeType":"YulExpressionStatement","src":"15676:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15726:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"15737:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15722:3:11"},"nodeType":"YulFunctionCall","src":"15722:18:11"},{"hexValue":"4e6f20746f6b656e7320617661696c61626c6520666f7220636c61696d","kind":"string","nodeType":"YulLiteral","src":"15742:31:11","type":"","value":"No tokens available for claim"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15715:6:11"},"nodeType":"YulFunctionCall","src":"15715:59:11"},"nodeType":"YulExpressionStatement","src":"15715:59:11"},{"nodeType":"YulAssignment","src":"15783:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15795:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"15806:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15791:3:11"},"nodeType":"YulFunctionCall","src":"15791:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15783:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_f6b6cf7016efa501486950119b41c3c9ed5c3a8fa9317fc01ea50ca9165fe740__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15613:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15627:4:11","type":""}],"src":"15462:353:11"},{"body":{"nodeType":"YulBlock","src":"15977:188:11","statements":[{"nodeType":"YulAssignment","src":"15987:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15999:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"16010:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15995:3:11"},"nodeType":"YulFunctionCall","src":"15995:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15987:4:11"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16029:9:11"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16044:6:11"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16060:3:11","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"16065:1:11","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"16056:3:11"},"nodeType":"YulFunctionCall","src":"16056:11:11"},{"kind":"number","nodeType":"YulLiteral","src":"16069:1:11","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16052:3:11"},"nodeType":"YulFunctionCall","src":"16052:19:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16040:3:11"},"nodeType":"YulFunctionCall","src":"16040:32:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16022:6:11"},"nodeType":"YulFunctionCall","src":"16022:51:11"},"nodeType":"YulExpressionStatement","src":"16022:51:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16093:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"16104:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16089:3:11"},"nodeType":"YulFunctionCall","src":"16089:18:11"},{"name":"value1","nodeType":"YulIdentifier","src":"16109:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16082:6:11"},"nodeType":"YulFunctionCall","src":"16082:34:11"},"nodeType":"YulExpressionStatement","src":"16082:34:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16136:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"16147:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16132:3:11"},"nodeType":"YulFunctionCall","src":"16132:18:11"},{"name":"value2","nodeType":"YulIdentifier","src":"16152:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16125:6:11"},"nodeType":"YulFunctionCall","src":"16125:34:11"},"nodeType":"YulExpressionStatement","src":"16125:34:11"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15930:9:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"15941:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15949:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15957:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15968:4:11","type":""}],"src":"15820:345:11"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_bool__to_t_string_memory_ptr_t_string_memory_ptr_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_bool__fromStack_reversed(headStart, value9, value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := 320\n        mstore(headStart, _1)\n        let tail_1 := abi_encode_string(value0, add(headStart, _1))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_string(value1, tail_1)\n        mstore(add(headStart, 64), and(value2, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), value6)\n        mstore(add(headStart, 224), value7)\n        mstore(add(headStart, 256), iszero(iszero(value8)))\n        mstore(add(headStart, 288), iszero(iszero(value9)))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0xffffffffffffffff\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_addresst_uint256(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string(add(headStart, offset_1), dataEnd)\n        value2 := abi_decode_address(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n    }\n    function abi_decode_bool(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_boolt_bool(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_bool(add(headStart, 32))\n        value2 := abi_decode_bool(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_address_t_uint256_t_uint256_t_uint256_t_bool_t_bool__to_t_string_memory_ptr_t_string_memory_ptr_t_address_t_uint256_t_uint256_t_uint256_t_bool_t_bool__fromStack_reversed(headStart, value7, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := 256\n        mstore(headStart, _1)\n        let tail_1 := abi_encode_string(value0, add(headStart, _1))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_string(value1, tail_1)\n        mstore(add(headStart, 64), and(value2, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), iszero(iszero(value6)))\n        mstore(add(headStart, 224), iszero(iszero(value7)))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_5c0b74416edcfc67accf704e19bd57cb9217cae2440f64edf8ce8a1ca27508d5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 53)\n        mstore(add(headStart, 64), \"Direct transfers not allowed. Us\")\n        mstore(add(headStart, 96), \"e claimVestedTokens()\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_dd128e933d077647bedee942f8fad0896dbcf403dd101362daa9f1ef97dd6adf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Invalid wallet address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_63e9229a8fa1f95078a5177d9a88a047bdea7f35bc1d19b14eee40f939d3a995__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Invalid allocation percentage\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_36294eea575da5f966433b0b292d82b2b7eeb81a34c05d7a6850129b8879662c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Participant already exists\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_39380453c9f7800ce01faa0ded64f5e5e58b5e83489ff3b955fa5b4d55cad1f5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Total allocation exceeds supply\")\n        tail := add(headStart, 96)\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_uint256__to_t_string_memory_ptr_t_string_memory_ptr_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 96)\n        let tail_1 := abi_encode_string(value0, add(headStart, 96))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_string(value1, tail_1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_11f62d0fb8618a929bf1cf2b60befadc2f28b23a8c72ce2e7904e6a75d66ecd7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Not a participant\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ba931d06c9e8c3c863beb457700c9a59ea91d428f30af1b525bf5885a1c343a1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Participant is not active\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_bool_t_bool__to_t_bool_t_bool__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, iszero(iszero(value0)))\n        mstore(add(headStart, 32), iszero(iszero(value1)))\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_bfa4b0e127ac972ceaa42f4b0227d4aa2f83ec1f5f44d3cffbeea103fe373b8e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"No participants added\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_c3083844e6ae086f32b4b28fe6399ccf6a6a41e8265ee628860987b496b4a69c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Valuation must be positive\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ad0541420148dbb2367eac08105a1bad9f8841b2d3b4ac3c8b42a0aa83e9855f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Participant has left the project\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f6b6cf7016efa501486950119b41c3c9ed5c3a8fa9317fc01ea50ca9165fe740__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"No tokens available for claim\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n}","id":11,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106101f05760003560e01c8063715018a61161010f578063ad605729116100a2578063deb36e3211610071578063deb36e3214610428578063e3b591ea14610430578063e74f3fbb14610443578063f2fde38b1461044b57600080fd5b8063ad605729146103d7578063af35ae27146103df578063bbe8b382146103e7578063dd62ed3e146103ef57600080fd5b80638da5cb5b116100de5780638da5cb5b1461039e578063902d55a5146103af57806395d89b41146103c1578063a9059cbb146103c957600080fd5b8063715018a61461035157806371bdce55146103595780637f58b9d3146103805780638cad856f1461039357600080fd5b8063313ce5671161018757806354ba2daf1161015657806354ba2daf146102d557806354ffbddb146102e8578063688114311461031357806370a082311461032857600080fd5b8063313ce567146102a057806336ab5d23146102af578063454f7edd146102c45780634b94f50e146102cd57600080fd5b806309e69ede116101c357806309e69ede146102535780630c195d991461027c57806318160ddd1461028557806323b872dd1461028d57600080fd5b80630197d972146101f55780630369d64e1461021357806306fdde031461021b578063095ea7b314610230575b600080fd5b610200630784ce0081565b6040519081526020015b60405180910390f35b610200601981565b61022361045e565b60405161020a91906116ac565b61024361023e3660046116e2565b6104f0565b604051901515815260200161020a565b61026661026136600461170c565b61050a565b60405161020a9a99989796959493929190611727565b61020060095481565b600254610200565b61024361029b36600461179e565b610678565b6040516012815260200161020a565b6102c26102bd36600461187d565b6106e6565b005b610200600a5481565b610200610a4c565b6102c26102e3366004611909565b610a8f565b6102fb6102f636600461194c565b610bda565b6040516001600160a01b03909116815260200161020a565b61031b610c04565b60405161020a9190611965565b61020061033636600461170c565b6001600160a01b031660009081526020819052604090205490565b6102c2610c65565b61036c61036736600461170c565b610c79565b60405161020a9897969594939291906119b2565b61020061038e36600461170c565b610e0a565b6102006301e1338081565b6005546001600160a01b03166102fb565b6102006a084595161401484a00000081565b610223610f72565b61024361029b3660046116e2565b600854610200565b610200610f81565b600a54610200565b6102006103fd366004611a1a565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6102c2610f9c565b6102c261043e36600461194c565b6110aa565b6102c2611107565b6102c261045936600461170c565b61130e565b60606003805461046d90611a4d565b80601f016020809104026020016040519081016040528092919081815260200182805461049990611a4d565b80156104e65780601f106104bb576101008083540402835291602001916104e6565b820191906000526020600020905b8154815290600101906020018083116104c957829003601f168201915b5050505050905090565b6000336104fe81858561134c565b60019150505b92915050565b60076020526000908152604090208054819061052590611a4d565b80601f016020809104026020016040519081016040528092919081815260200182805461055190611a4d565b801561059e5780601f106105735761010080835404028352916020019161059e565b820191906000526020600020905b81548152906001019060200180831161058157829003601f168201915b5050505050908060010180546105b390611a4d565b80601f01602080910402602001604051908101604052809291908181526020018280546105df90611a4d565b801561062c5780601f106106015761010080835404028352916020019161062c565b820191906000526020600020905b81548152906001019060200180831161060f57829003601f168201915b5050505060028301546003840154600485015460058601546006870154600788015460089098015496976001600160a01b03909516969395509193909260ff808216916101009004168a565b60405162461bcd60e51b815260206004820152603560248201527f446972656374207472616e7366657273206e6f7420616c6c6f7765642e2055736044820152746520636c61696d566573746564546f6b656e73282960581b60648201526000906084015b60405180910390fd5b6106ee61135e565b6001600160a01b03821661073d5760405162461bcd60e51b8152602060048201526016602482015275496e76616c69642077616c6c6574206164647265737360501b60448201526064016106dd565b60008111801561074e575060648111155b61079a5760405162461bcd60e51b815260206004820152601d60248201527f496e76616c696420616c6c6f636174696f6e2070657263656e7461676500000060448201526064016106dd565b6001600160a01b0382811660009081526007602052604090206002015416156108055760405162461bcd60e51b815260206004820152601a60248201527f5061727469636970616e7420616c72656164792065786973747300000000000060448201526064016106dd565b6000606461081e836a084595161401484a000000611a9d565b6108289190611ab4565b90506a084595161401484a000000816009546108449190611ad6565b11156108925760405162461bcd60e51b815260206004820152601f60248201527f546f74616c20616c6c6f636174696f6e206578636565647320737570706c790060448201526064016106dd565b604080516101408101825286815260208082018790526001600160a01b0386168284018190526060830185905260006080840181905260a084018190526301e1338060c0850152630784ce0060e0850152600161010085015261012084018190529081526007909152919091208151819061090d9082611b37565b50602082015160018201906109229082611b37565b5060408201516002820180546001600160a01b03199081166001600160a01b0393841617909155606084015160038401556080840151600484015560a0840151600584015560c0840151600684015560e0840151600784015561010080850151600894850180546101209097015161ffff1990971691151561ff001916919091179515159091029490941790935581546001810183556000929092527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee390910180549092169085161790556009546109fb908290611ad6565b6009556040516001600160a01b038416907ff022b46c0cbb6c0b8c6b656714a8b3ae81d620f3cd91677f11e3d5f12a9ac7b290610a3d90889088908690611bf7565b60405180910390a25050505050565b6000610a6b670de0b6b3a76400006a084595161401484a000000611ab4565b600a54610a8090670de0b6b3a7640000611a9d565b610a8a9190611ab4565b905090565b610a9761135e565b6001600160a01b03808416600090815260076020526040902060020154849116610af75760405162461bcd60e51b8152602060048201526011602482015270139bdd0818481c185c9d1a58da5c185b9d607a1b60448201526064016106dd565b6001600160a01b03811660009081526007602052604090206008015460ff16610b5e5760405162461bcd60e51b81526020600482015260196024820152785061727469636970616e74206973206e6f742061637469766560381b60448201526064016106dd565b6001600160a01b0384166000818152600760209081526040918290206008018054861515610100810261ff00198a151590811661ffff1990941693909317179092558351908152918201527f1141d7a121d08ec2ee81022d7b170a7da04182cfbc14498eefcbc65dcb8cf8fb910160405180910390a250505050565b60088181548110610bea57600080fd5b6000918252602090912001546001600160a01b0316905081565b606060088054806020026020016040519081016040528092919081815260200182805480156104e657602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610c3e575050505050905090565b610c6d61135e565b610c77600061138b565b565b6001600160a01b0380821660009081526007602052604081206002810154600382015460048301546005840154600885015485546060988998978897889788978897889794968796600188019695169460ff8082169261010090920416908890610ce290611a4d565b80601f0160208091040260200160405190810160405280929190818152602001828054610d0e90611a4d565b8015610d5b5780601f10610d3057610100808354040283529160200191610d5b565b820191906000526020600020905b815481529060010190602001808311610d3e57829003601f168201915b50505050509750868054610d6e90611a4d565b80601f0160208091040260200160405190810160405280929190818152602001828054610d9a90611a4d565b8015610de75780601f10610dbc57610100808354040283529160200191610de7565b820191906000526020600020905b815481529060010190602001808311610dca57829003601f168201915b505050505096509850985098509850985098509850985050919395975091939597565b6001600160a01b038082166000908152600760205260408120600281015491929091161580610e3e5750600881015460ff16155b80610e5257506008810154610100900460ff165b15610e605750600092915050565b8060050154600003610e755750600092915050565b6000816005015442610e879190611c2d565b90508160060154811015610e9f575060009392505050565b600082600701548210610eb757506003820154610f43565b6000836006015483610ec99190611c2d565b9050600084600601548560070154610ee19190611c2d565b90506000606460198760030154610ef89190611a9d565b610f029190611ab4565b90506000818760030154610f169190611c2d565b9050600083610f258684611a9d565b610f2f9190611ab4565b9050610f3b8184611ad6565b955050505050505b8260040154811115610f67576004830154610f5e9082611c2d565b95945050505050565b506000949350505050565b60606004805461046d90611a4d565b60006009546a084595161401484a000000610a8a9190611c2d565b610fa461135e565b600854610feb5760405162461bcd60e51b8152602060048201526015602482015274139bc81c185c9d1a58da5c185b9d1cc81859191959605a1b60448201526064016106dd565b4260005b6008548110156110735760006008828154811061100e5761100e611c40565b60009182526020808320909101546001600160a01b0316808352600790915260409091206008015490915060ff1615611060576001600160a01b03811660009081526007602052604090206005018390555b508061106b81611c56565b915050610fef565b506040518181527f3930f04857ba592ba0a6a96942f8350c2415c0a4aa849021aeefee98bb55b1229060200160405180910390a150565b6110b261135e565b600081116111025760405162461bcd60e51b815260206004820152601a60248201527f56616c756174696f6e206d75737420626520706f73697469766500000000000060448201526064016106dd565b600a55565b61110f6113dd565b336000908152600760205260409020600201546001600160a01b031661116b5760405162461bcd60e51b8152602060048201526011602482015270139bdd0818481c185c9d1a58da5c185b9d607a1b60448201526064016106dd565b3360009081526007602052604090206008015460ff166111c95760405162461bcd60e51b81526020600482015260196024820152785061727469636970616e74206973206e6f742061637469766560381b60448201526064016106dd565b33600090815260076020526040902060080154610100900460ff16156112315760405162461bcd60e51b815260206004820181905260248201527f5061727469636970616e7420686173206c656674207468652070726f6a65637460448201526064016106dd565b600061123c33610e0a565b90506000811161128e5760405162461bcd60e51b815260206004820152601d60248201527f4e6f20746f6b656e7320617661696c61626c6520666f7220636c61696d00000060448201526064016106dd565b336000908152600760205260409020600401546112ac908290611ad6565b336000818152600760205260409020600401919091556112ce90309083611407565b60405181815233907f896e034966eaaf1adc54acc0f257056febbd300c9e47182cf761982cf1f5e4309060200160405180910390a250610c776001600655565b61131661135e565b6001600160a01b03811661134057604051631e4fbdf760e01b8152600060048201526024016106dd565b6113498161138b565b50565b6113598383836001611466565b505050565b6005546001600160a01b03163314610c775760405163118cdaa760e01b81523360048201526024016106dd565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60026006540361140057604051633ee5aeb560e01b815260040160405180910390fd5b6002600655565b6001600160a01b03831661143157604051634b637e8f60e11b8152600060048201526024016106dd565b6001600160a01b03821661145b5760405163ec442f0560e01b8152600060048201526024016106dd565b61135983838361153c565b6001600160a01b0384166114905760405163e602df0560e01b8152600060048201526024016106dd565b6001600160a01b0383166114ba57604051634a1406b160e11b8152600060048201526024016106dd565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561153657826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161152d91815260200190565b60405180910390a35b50505050565b6001600160a01b03831661156757806002600082825461155c9190611ad6565b909155506115d99050565b6001600160a01b038316600090815260208190526040902054818110156115ba5760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016106dd565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b0382166115f557600280548290039055611614565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161165991815260200190565b60405180910390a3505050565b6000815180845260005b8181101561168c57602081850181015186830182015201611670565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006116bf6020830184611666565b9392505050565b80356001600160a01b03811681146116dd57600080fd5b919050565b600080604083850312156116f557600080fd5b6116fe836116c6565b946020939093013593505050565b60006020828403121561171e57600080fd5b6116bf826116c6565b600061014080835261173b8184018e611666565b9050828103602084015261174f818d611666565b6001600160a01b039b909b16604084015250506060810197909752608087019590955260a086019390935260c085019190915260e0840152151561010083015215156101209091015292915050565b6000806000606084860312156117b357600080fd5b6117bc846116c6565b92506117ca602085016116c6565b9150604084013590509250925092565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261180157600080fd5b813567ffffffffffffffff8082111561181c5761181c6117da565b604051601f8301601f19908116603f01168101908282118183101715611844576118446117da565b8160405283815286602085880101111561185d57600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000806080858703121561189357600080fd5b843567ffffffffffffffff808211156118ab57600080fd5b6118b7888389016117f0565b955060208701359150808211156118cd57600080fd5b506118da878288016117f0565b9350506118e9604086016116c6565b9396929550929360600135925050565b803580151581146116dd57600080fd5b60008060006060848603121561191e57600080fd5b611927846116c6565b9250611935602085016118f9565b9150611943604085016118f9565b90509250925092565b60006020828403121561195e57600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b818110156119a65783516001600160a01b031683529284019291840191600101611981565b50909695505050505050565b60006101008083526119c68184018c611666565b905082810360208401526119da818b611666565b6001600160a01b0399909916604084015250506060810195909552608085019390935260a0840191909152151560c0830152151560e09091015292915050565b60008060408385031215611a2d57600080fd5b611a36836116c6565b9150611a44602084016116c6565b90509250929050565b600181811c90821680611a6157607f821691505b602082108103611a8157634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761050457610504611a87565b600082611ad157634e487b7160e01b600052601260045260246000fd5b500490565b8082018082111561050457610504611a87565b601f82111561135957600081815260208120601f850160051c81016020861015611b105750805b601f850160051c820191505b81811015611b2f57828155600101611b1c565b505050505050565b815167ffffffffffffffff811115611b5157611b516117da565b611b6581611b5f8454611a4d565b84611ae9565b602080601f831160018114611b9a5760008415611b825750858301515b600019600386901b1c1916600185901b178555611b2f565b600085815260208120601f198616915b82811015611bc957888601518255948401946001909101908401611baa565b5085821015611be75787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b606081526000611c0a6060830186611666565b8281036020840152611c1c8186611666565b915050826040830152949350505050565b8181038181111561050457610504611a87565b634e487b7160e01b600052603260045260246000fd5b600060018201611c6857611c68611a87565b506001019056fea2646970667358221220d6aa538e2bdf711146b316412b81ceca458c0b1ff57eee273e5dc54cfead740264736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1F0 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x10F JUMPI DUP1 PUSH4 0xAD605729 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xDEB36E32 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xDEB36E32 EQ PUSH2 0x428 JUMPI DUP1 PUSH4 0xE3B591EA EQ PUSH2 0x430 JUMPI DUP1 PUSH4 0xE74F3FBB EQ PUSH2 0x443 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x44B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xAD605729 EQ PUSH2 0x3D7 JUMPI DUP1 PUSH4 0xAF35AE27 EQ PUSH2 0x3DF JUMPI DUP1 PUSH4 0xBBE8B382 EQ PUSH2 0x3E7 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x39E JUMPI DUP1 PUSH4 0x902D55A5 EQ PUSH2 0x3AF JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3C1 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x351 JUMPI DUP1 PUSH4 0x71BDCE55 EQ PUSH2 0x359 JUMPI DUP1 PUSH4 0x7F58B9D3 EQ PUSH2 0x380 JUMPI DUP1 PUSH4 0x8CAD856F EQ PUSH2 0x393 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x187 JUMPI DUP1 PUSH4 0x54BA2DAF GT PUSH2 0x156 JUMPI DUP1 PUSH4 0x54BA2DAF EQ PUSH2 0x2D5 JUMPI DUP1 PUSH4 0x54FFBDDB EQ PUSH2 0x2E8 JUMPI DUP1 PUSH4 0x68811431 EQ PUSH2 0x313 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x328 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2A0 JUMPI DUP1 PUSH4 0x36AB5D23 EQ PUSH2 0x2AF JUMPI DUP1 PUSH4 0x454F7EDD EQ PUSH2 0x2C4 JUMPI DUP1 PUSH4 0x4B94F50E EQ PUSH2 0x2CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9E69EDE GT PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x9E69EDE EQ PUSH2 0x253 JUMPI DUP1 PUSH4 0xC195D99 EQ PUSH2 0x27C JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x28D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x197D972 EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x369D64E EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x21B JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x230 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x200 PUSH4 0x784CE00 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x19 DUP2 JUMP JUMPDEST PUSH2 0x223 PUSH2 0x45E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20A SWAP2 SWAP1 PUSH2 0x16AC JUMP JUMPDEST PUSH2 0x243 PUSH2 0x23E CALLDATASIZE PUSH1 0x4 PUSH2 0x16E2 JUMP JUMPDEST PUSH2 0x4F0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x20A JUMP JUMPDEST PUSH2 0x266 PUSH2 0x261 CALLDATASIZE PUSH1 0x4 PUSH2 0x170C JUMP JUMPDEST PUSH2 0x50A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20A SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1727 JUMP JUMPDEST PUSH2 0x200 PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x200 JUMP JUMPDEST PUSH2 0x243 PUSH2 0x29B CALLDATASIZE PUSH1 0x4 PUSH2 0x179E JUMP JUMPDEST PUSH2 0x678 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x20A JUMP JUMPDEST PUSH2 0x2C2 PUSH2 0x2BD CALLDATASIZE PUSH1 0x4 PUSH2 0x187D JUMP JUMPDEST PUSH2 0x6E6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x200 PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH2 0x200 PUSH2 0xA4C JUMP JUMPDEST PUSH2 0x2C2 PUSH2 0x2E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1909 JUMP JUMPDEST PUSH2 0xA8F JUMP JUMPDEST PUSH2 0x2FB PUSH2 0x2F6 CALLDATASIZE PUSH1 0x4 PUSH2 0x194C JUMP JUMPDEST PUSH2 0xBDA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x20A JUMP JUMPDEST PUSH2 0x31B PUSH2 0xC04 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20A SWAP2 SWAP1 PUSH2 0x1965 JUMP JUMPDEST PUSH2 0x200 PUSH2 0x336 CALLDATASIZE PUSH1 0x4 PUSH2 0x170C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2C2 PUSH2 0xC65 JUMP JUMPDEST PUSH2 0x36C PUSH2 0x367 CALLDATASIZE PUSH1 0x4 PUSH2 0x170C JUMP JUMPDEST PUSH2 0xC79 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20A SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x19B2 JUMP JUMPDEST PUSH2 0x200 PUSH2 0x38E CALLDATASIZE PUSH1 0x4 PUSH2 0x170C JUMP JUMPDEST PUSH2 0xE0A JUMP JUMPDEST PUSH2 0x200 PUSH4 0x1E13380 DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2FB JUMP JUMPDEST PUSH2 0x200 PUSH11 0x84595161401484A000000 DUP2 JUMP JUMPDEST PUSH2 0x223 PUSH2 0xF72 JUMP JUMPDEST PUSH2 0x243 PUSH2 0x29B CALLDATASIZE PUSH1 0x4 PUSH2 0x16E2 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x200 JUMP JUMPDEST PUSH2 0x200 PUSH2 0xF81 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x200 JUMP JUMPDEST PUSH2 0x200 PUSH2 0x3FD CALLDATASIZE PUSH1 0x4 PUSH2 0x1A1A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2C2 PUSH2 0xF9C JUMP JUMPDEST PUSH2 0x2C2 PUSH2 0x43E CALLDATASIZE PUSH1 0x4 PUSH2 0x194C JUMP JUMPDEST PUSH2 0x10AA JUMP JUMPDEST PUSH2 0x2C2 PUSH2 0x1107 JUMP JUMPDEST PUSH2 0x2C2 PUSH2 0x459 CALLDATASIZE PUSH1 0x4 PUSH2 0x170C JUMP JUMPDEST PUSH2 0x130E JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x46D SWAP1 PUSH2 0x1A4D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x499 SWAP1 PUSH2 0x1A4D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4E6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4BB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4E6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4C9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x4FE DUP2 DUP6 DUP6 PUSH2 0x134C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP2 SWAP1 PUSH2 0x525 SWAP1 PUSH2 0x1A4D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x551 SWAP1 PUSH2 0x1A4D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x59E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x573 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x59E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x581 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x5B3 SWAP1 PUSH2 0x1A4D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5DF SWAP1 PUSH2 0x1A4D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x62C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x601 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x62C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x60F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x5 DUP7 ADD SLOAD PUSH1 0x6 DUP8 ADD SLOAD PUSH1 0x7 DUP9 ADD SLOAD PUSH1 0x8 SWAP1 SWAP9 ADD SLOAD SWAP7 SWAP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND SWAP7 SWAP4 SWAP6 POP SWAP2 SWAP4 SWAP1 SWAP3 PUSH1 0xFF DUP1 DUP3 AND SWAP2 PUSH2 0x100 SWAP1 DIV AND DUP11 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x446972656374207472616E7366657273206E6F7420616C6C6F7765642E205573 PUSH1 0x44 DUP3 ADD MSTORE PUSH21 0x6520636C61696D566573746564546F6B656E732829 PUSH1 0x58 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6EE PUSH2 0x135E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x73D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x496E76616C69642077616C6C65742061646472657373 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6DD JUMP JUMPDEST PUSH1 0x0 DUP2 GT DUP1 ISZERO PUSH2 0x74E JUMPI POP PUSH1 0x64 DUP2 GT ISZERO JUMPDEST PUSH2 0x79A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420616C6C6F636174696F6E2070657263656E74616765000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD AND ISZERO PUSH2 0x805 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5061727469636970616E7420616C726561647920657869737473000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6DD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH2 0x81E DUP4 PUSH11 0x84595161401484A000000 PUSH2 0x1A9D JUMP JUMPDEST PUSH2 0x828 SWAP2 SWAP1 PUSH2 0x1AB4 JUMP JUMPDEST SWAP1 POP PUSH11 0x84595161401484A000000 DUP2 PUSH1 0x9 SLOAD PUSH2 0x844 SWAP2 SWAP1 PUSH2 0x1AD6 JUMP JUMPDEST GT ISZERO PUSH2 0x892 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F74616C20616C6C6F636174696F6E206578636565647320737570706C7900 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6DD JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x140 DUP2 ADD DUP3 MSTORE DUP7 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP8 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP3 DUP5 ADD DUP2 SWAP1 MSTORE PUSH1 0x60 DUP4 ADD DUP6 SWAP1 MSTORE PUSH1 0x0 PUSH1 0x80 DUP5 ADD DUP2 SWAP1 MSTORE PUSH1 0xA0 DUP5 ADD DUP2 SWAP1 MSTORE PUSH4 0x1E13380 PUSH1 0xC0 DUP6 ADD MSTORE PUSH4 0x784CE00 PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0x1 PUSH2 0x100 DUP6 ADD MSTORE PUSH2 0x120 DUP5 ADD DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x7 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 DUP2 MLOAD DUP2 SWAP1 PUSH2 0x90D SWAP1 DUP3 PUSH2 0x1B37 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 DUP3 ADD SWAP1 PUSH2 0x922 SWAP1 DUP3 PUSH2 0x1B37 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x3 DUP5 ADD SSTORE PUSH1 0x80 DUP5 ADD MLOAD PUSH1 0x4 DUP5 ADD SSTORE PUSH1 0xA0 DUP5 ADD MLOAD PUSH1 0x5 DUP5 ADD SSTORE PUSH1 0xC0 DUP5 ADD MLOAD PUSH1 0x6 DUP5 ADD SSTORE PUSH1 0xE0 DUP5 ADD MLOAD PUSH1 0x7 DUP5 ADD SSTORE PUSH2 0x100 DUP1 DUP6 ADD MLOAD PUSH1 0x8 SWAP5 DUP6 ADD DUP1 SLOAD PUSH2 0x120 SWAP1 SWAP8 ADD MLOAD PUSH2 0xFFFF NOT SWAP1 SWAP8 AND SWAP2 ISZERO ISZERO PUSH2 0xFF00 NOT AND SWAP2 SWAP1 SWAP2 OR SWAP6 ISZERO ISZERO SWAP1 SWAP2 MUL SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE DUP2 SLOAD PUSH1 0x1 DUP2 ADD DUP4 SSTORE PUSH1 0x0 SWAP3 SWAP1 SWAP3 MSTORE PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 SWAP1 SWAP2 ADD DUP1 SLOAD SWAP1 SWAP3 AND SWAP1 DUP6 AND OR SWAP1 SSTORE PUSH1 0x9 SLOAD PUSH2 0x9FB SWAP1 DUP3 SWAP1 PUSH2 0x1AD6 JUMP JUMPDEST PUSH1 0x9 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH32 0xF022B46C0CBB6C0B8C6B656714A8B3AE81D620F3CD91677F11E3D5F12A9AC7B2 SWAP1 PUSH2 0xA3D SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP7 SWAP1 PUSH2 0x1BF7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA6B PUSH8 0xDE0B6B3A7640000 PUSH11 0x84595161401484A000000 PUSH2 0x1AB4 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0xA80 SWAP1 PUSH8 0xDE0B6B3A7640000 PUSH2 0x1A9D JUMP JUMPDEST PUSH2 0xA8A SWAP2 SWAP1 PUSH2 0x1AB4 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xA97 PUSH2 0x135E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD DUP5 SWAP2 AND PUSH2 0xAF7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x139BDD0818481C185C9D1A58DA5C185B9D PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD SLOAD PUSH1 0xFF AND PUSH2 0xB5E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x5061727469636970616E74206973206E6F7420616374697665 PUSH1 0x38 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD DUP7 ISZERO ISZERO PUSH2 0x100 DUP2 MUL PUSH2 0xFF00 NOT DUP11 ISZERO ISZERO SWAP1 DUP2 AND PUSH2 0xFFFF NOT SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR OR SWAP1 SWAP3 SSTORE DUP4 MLOAD SWAP1 DUP2 MSTORE SWAP2 DUP3 ADD MSTORE PUSH32 0x1141D7A121D08EC2EE81022D7B170A7DA04182CFBC14498EEFCBC65DCB8CF8FB SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x8 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xBEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x8 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x4E6 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC3E JUMPI POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xC6D PUSH2 0x135E JUMP JUMPDEST PUSH2 0xC77 PUSH1 0x0 PUSH2 0x138B JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x4 DUP4 ADD SLOAD PUSH1 0x5 DUP5 ADD SLOAD PUSH1 0x8 DUP6 ADD SLOAD DUP6 SLOAD PUSH1 0x60 SWAP9 DUP10 SWAP9 SWAP8 DUP9 SWAP8 DUP9 SWAP8 DUP9 SWAP8 DUP9 SWAP8 DUP9 SWAP8 SWAP5 SWAP7 DUP8 SWAP7 PUSH1 0x1 DUP9 ADD SWAP7 SWAP6 AND SWAP5 PUSH1 0xFF DUP1 DUP3 AND SWAP3 PUSH2 0x100 SWAP1 SWAP3 DIV AND SWAP1 DUP9 SWAP1 PUSH2 0xCE2 SWAP1 PUSH2 0x1A4D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xD0E SWAP1 PUSH2 0x1A4D JUMP JUMPDEST DUP1 ISZERO PUSH2 0xD5B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD30 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD5B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD3E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP8 POP DUP7 DUP1 SLOAD PUSH2 0xD6E SWAP1 PUSH2 0x1A4D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xD9A SWAP1 PUSH2 0x1A4D JUMP JUMPDEST DUP1 ISZERO PUSH2 0xDE7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xDBC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xDE7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xDCA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP7 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP POP SWAP2 SWAP4 SWAP6 SWAP8 POP SWAP2 SWAP4 SWAP6 SWAP8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 DUP2 ADD SLOAD SWAP2 SWAP3 SWAP1 SWAP2 AND ISZERO DUP1 PUSH2 0xE3E JUMPI POP PUSH1 0x8 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO JUMPDEST DUP1 PUSH2 0xE52 JUMPI POP PUSH1 0x8 DUP2 ADD SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0xE60 JUMPI POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH1 0x5 ADD SLOAD PUSH1 0x0 SUB PUSH2 0xE75 JUMPI POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x5 ADD SLOAD TIMESTAMP PUSH2 0xE87 SWAP2 SWAP1 PUSH2 0x1C2D JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x6 ADD SLOAD DUP2 LT ISZERO PUSH2 0xE9F JUMPI POP PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x7 ADD SLOAD DUP3 LT PUSH2 0xEB7 JUMPI POP PUSH1 0x3 DUP3 ADD SLOAD PUSH2 0xF43 JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x6 ADD SLOAD DUP4 PUSH2 0xEC9 SWAP2 SWAP1 PUSH2 0x1C2D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP5 PUSH1 0x6 ADD SLOAD DUP6 PUSH1 0x7 ADD SLOAD PUSH2 0xEE1 SWAP2 SWAP1 PUSH2 0x1C2D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x64 PUSH1 0x19 DUP8 PUSH1 0x3 ADD SLOAD PUSH2 0xEF8 SWAP2 SWAP1 PUSH2 0x1A9D JUMP JUMPDEST PUSH2 0xF02 SWAP2 SWAP1 PUSH2 0x1AB4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP8 PUSH1 0x3 ADD SLOAD PUSH2 0xF16 SWAP2 SWAP1 PUSH2 0x1C2D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP4 PUSH2 0xF25 DUP7 DUP5 PUSH2 0x1A9D JUMP JUMPDEST PUSH2 0xF2F SWAP2 SWAP1 PUSH2 0x1AB4 JUMP JUMPDEST SWAP1 POP PUSH2 0xF3B DUP2 DUP5 PUSH2 0x1AD6 JUMP JUMPDEST SWAP6 POP POP POP POP POP POP JUMPDEST DUP3 PUSH1 0x4 ADD SLOAD DUP2 GT ISZERO PUSH2 0xF67 JUMPI PUSH1 0x4 DUP4 ADD SLOAD PUSH2 0xF5E SWAP1 DUP3 PUSH2 0x1C2D JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST POP PUSH1 0x0 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x46D SWAP1 PUSH2 0x1A4D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 SLOAD PUSH11 0x84595161401484A000000 PUSH2 0xA8A SWAP2 SWAP1 PUSH2 0x1C2D JUMP JUMPDEST PUSH2 0xFA4 PUSH2 0x135E JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0xFEB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x139BC81C185C9D1A58DA5C185B9D1CC81859191959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6DD JUMP JUMPDEST TIMESTAMP PUSH1 0x0 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x1073 JUMPI PUSH1 0x0 PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x100E JUMPI PUSH2 0x100E PUSH2 0x1C40 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 DUP4 MSTORE PUSH1 0x7 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH1 0x8 ADD SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND ISZERO PUSH2 0x1060 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 ADD DUP4 SWAP1 SSTORE JUMPDEST POP DUP1 PUSH2 0x106B DUP2 PUSH2 0x1C56 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xFEF JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x3930F04857BA592BA0A6A96942F8350C2415C0A4AA849021AEEFEE98BB55B122 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x10B2 PUSH2 0x135E JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x1102 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x56616C756174696F6E206D75737420626520706F736974697665000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6DD JUMP JUMPDEST PUSH1 0xA SSTORE JUMP JUMPDEST PUSH2 0x110F PUSH2 0x13DD JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x116B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x139BDD0818481C185C9D1A58DA5C185B9D PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6DD JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD SLOAD PUSH1 0xFF AND PUSH2 0x11C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x5061727469636970616E74206973206E6F7420616374697665 PUSH1 0x38 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6DD JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1231 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5061727469636970616E7420686173206C656674207468652070726F6A656374 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6DD JUMP JUMPDEST PUSH1 0x0 PUSH2 0x123C CALLER PUSH2 0xE0A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x128E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F20746F6B656E7320617661696C61626C6520666F7220636C61696D000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6DD JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH2 0x12AC SWAP1 DUP3 SWAP1 PUSH2 0x1AD6 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x12CE SWAP1 ADDRESS SWAP1 DUP4 PUSH2 0x1407 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0x896E034966EAAF1ADC54ACC0F257056FEBBD300C9E47182CF761982CF1F5E430 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0xC77 PUSH1 0x1 PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH2 0x1316 PUSH2 0x135E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1340 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x6DD JUMP JUMPDEST PUSH2 0x1349 DUP2 PUSH2 0x138B JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1359 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1466 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC77 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x6DD JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD SUB PUSH2 0x1400 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1431 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x6DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x145B JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x6DD JUMP JUMPDEST PUSH2 0x1359 DUP4 DUP4 DUP4 PUSH2 0x153C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1490 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x6DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x14BA JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x6DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x1536 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x152D SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1567 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x155C SWAP2 SWAP1 PUSH2 0x1AD6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x15D9 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x15BA JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x6DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x15F5 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x1614 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1659 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x168C JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x1670 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x16BF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1666 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x16DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16FE DUP4 PUSH2 0x16C6 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x171E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16BF DUP3 PUSH2 0x16C6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140 DUP1 DUP4 MSTORE PUSH2 0x173B DUP2 DUP5 ADD DUP15 PUSH2 0x1666 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x174F DUP2 DUP14 PUSH2 0x1666 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP12 SWAP1 SWAP12 AND PUSH1 0x40 DUP5 ADD MSTORE POP POP PUSH1 0x60 DUP2 ADD SWAP8 SWAP1 SWAP8 MSTORE PUSH1 0x80 DUP8 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0xA0 DUP7 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0xC0 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xE0 DUP5 ADD MSTORE ISZERO ISZERO PUSH2 0x100 DUP4 ADD MSTORE ISZERO ISZERO PUSH2 0x120 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x17B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x17BC DUP5 PUSH2 0x16C6 JUMP JUMPDEST SWAP3 POP PUSH2 0x17CA PUSH1 0x20 DUP6 ADD PUSH2 0x16C6 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1801 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x181C JUMPI PUSH2 0x181C PUSH2 0x17DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1844 JUMPI PUSH2 0x1844 PUSH2 0x17DA JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x185D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1893 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x18AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x18B7 DUP9 DUP4 DUP10 ADD PUSH2 0x17F0 JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x18CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18DA DUP8 DUP3 DUP9 ADD PUSH2 0x17F0 JUMP JUMPDEST SWAP4 POP POP PUSH2 0x18E9 PUSH1 0x40 DUP7 ADD PUSH2 0x16C6 JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP3 SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x16DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x191E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1927 DUP5 PUSH2 0x16C6 JUMP JUMPDEST SWAP3 POP PUSH2 0x1935 PUSH1 0x20 DUP6 ADD PUSH2 0x18F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x1943 PUSH1 0x40 DUP6 ADD PUSH2 0x18F9 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x195E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x19A6 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1981 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP1 DUP4 MSTORE PUSH2 0x19C6 DUP2 DUP5 ADD DUP13 PUSH2 0x1666 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x19DA DUP2 DUP12 PUSH2 0x1666 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP10 SWAP1 SWAP10 AND PUSH1 0x40 DUP5 ADD MSTORE POP POP PUSH1 0x60 DUP2 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0x80 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0xA0 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE ISZERO ISZERO PUSH1 0xC0 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0xE0 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A36 DUP4 PUSH2 0x16C6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A44 PUSH1 0x20 DUP5 ADD PUSH2 0x16C6 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1A61 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1A81 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x504 JUMPI PUSH2 0x504 PUSH2 0x1A87 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1AD1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x504 JUMPI PUSH2 0x504 PUSH2 0x1A87 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1359 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x1B10 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1B2F JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1B1C JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B51 JUMPI PUSH2 0x1B51 PUSH2 0x17DA JUMP JUMPDEST PUSH2 0x1B65 DUP2 PUSH2 0x1B5F DUP5 SLOAD PUSH2 0x1A4D JUMP JUMPDEST DUP5 PUSH2 0x1AE9 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1B9A JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x1B82 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x1B2F JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1BC9 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x1BAA JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x1BE7 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1C0A PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x1666 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1C1C DUP2 DUP7 PUSH2 0x1666 JUMP JUMPDEST SWAP2 POP POP DUP3 PUSH1 0x40 DUP4 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x504 JUMPI PUSH2 0x504 PUSH2 0x1A87 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1C68 JUMPI PUSH2 0x1C68 PUSH2 0x1A87 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD6 0xAA MSTORE8 DUP15 0x2B 0xDF PUSH18 0x1146B316412B81CECA458C0B1FF57EEE273E 0x5D 0xC5 0x4C INVALID 0xAD PUSH21 0x264736F6C63430008140033000000000000000000 ","sourceMap":"493:12304:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1484:63;;1525:22;1484:63;;;;;160:25:11;;;148:2;133:18;1484:63:10;;;;;;;;1688:45;;1731:2;1688:45;;1760:89:2;;;:::i;:::-;;;;;;;:::i;3902:186::-;;;;;;:::i;:::-;;:::i;:::-;;;1451:14:11;;1444:22;1426:41;;1414:2;1399:18;3902:186:2;1286:187:11;1864:51:10;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;:::i;1964:35::-;;;;;;2803:97:2;2881:12;;2803:97;;12582:213:10;;;;;;:::i;:::-;;:::i;2688:82:2:-;;;2761:2;3174:36:11;;3162:2;3147:18;2688:82:2;3032:184:11;3642:1293:10;;;;;;:::i;:::-;;:::i;:::-;;2005:44;;;;;;12138:132;;;:::i;8754:366::-;;;;;;:::i;:::-;;:::i;1921:37::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;5609:32:11;;;5591:51;;5579:2;5564:18;1921:37:10;5445:203:11;10566:123:10;;;:::i;:::-;;;;;;;:::i;2933:116:2:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3024:18:2;2998:7;3024:18;;;;;;;;;;;;2933:116;2293:101:0;;;:::i;9684:707:10:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;:::i;6394:2057::-;;;;;;:::i;:::-;;:::i;1587:61::-;;1626:22;1587:61;;1638:85:0;1710:6;;-1:-1:-1;;;;;1710:6:0;1638:85;;1354:58:10;;1393:19;1354:58;;1962:93:2;;;:::i;12381:195:10:-;;;;;;:::i;10854:114::-;10934:20;:27;10854:114;;11174:121;;;:::i;11439:103::-;11519:16;;11439:103;;3455:140:2;;;;;;:::i;:::-;-1:-1:-1;;;;;3561:18:2;;;3535:7;3561:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3455:140;5036:515:10;;;:::i;11738:189::-;;;;;;:::i;:::-;;:::i;5667:438::-;;;:::i;2543:215:0:-;;;;;;:::i;:::-;;:::i;1760:89:2:-;1805:13;1837:5;1830:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89;:::o;3902:186::-;3975:4;735:10:5;4029:31:2;735:10:5;4045:7:2;4054:5;4029:8;:31::i;:::-;4077:4;4070:11;;;3902:186;;;;;:::o;1864:51:10:-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;1864:51:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1864:51:10;;;;;;-1:-1:-1;1864:51:10;;;;;;;;;;;;;;:::o;12582:213::-;12695:71;;-1:-1:-1;;;12695:71:10;;8054:2:11;12695:71:10;;;8036:21:11;8093:2;8073:18;;;8066:30;8132:34;8112:18;;;8105:62;-1:-1:-1;;;8183:18:11;;;8176:51;12679:4:10;;8244:19:11;;12695:71:10;;;;;;;;3642:1293;1531:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;3840:21:10;::::1;3832:56;;;::::0;-1:-1:-1;;;3832:56:10;;8476:2:11;3832:56:10::1;::::0;::::1;8458:21:11::0;8515:2;8495:18;;;8488:30;-1:-1:-1;;;8534:18:11;;;8527:52;8596:18;;3832:56:10::1;8274:346:11::0;3832:56:10::1;3930:1;3906:21;:25;:57;;;;;3960:3;3935:21;:28;;3906:57;3898:99;;;::::0;-1:-1:-1;;;3898:99:10;;8827:2:11;3898:99:10::1;::::0;::::1;8809:21:11::0;8866:2;8846:18;;;8839:30;8905:31;8885:18;;;8878:59;8954:18;;3898:99:10::1;8625:353:11::0;3898:99:10::1;-1:-1:-1::0;;;;;4015:21:10;;::::1;4055:1;4015:21:::0;;;:12:::1;:21;::::0;;;;:28:::1;;::::0;::::1;:42:::0;4007:81:::1;;;::::0;-1:-1:-1;;;4007:81:10;;9185:2:11;4007:81:10::1;::::0;::::1;9167:21:11::0;9224:2;9204:18;;;9197:30;9263:28;9243:18;;;9236:56;9309:18;;4007:81:10::1;8983:350:11::0;4007:81:10::1;4099:18;4159:3;4120:36;4135:21:::0;1393:19:::1;4120:36;:::i;:::-;:42;;;;:::i;:::-;4099:63;;1393:19;4203:10;4180:20;;:33;;;;:::i;:::-;:49;;4172:93;;;::::0;-1:-1:-1;;;4172:93:10;;10197:2:11;4172:93:10::1;::::0;::::1;10179:21:11::0;10236:2;10216:18;;;10209:30;10275:33;10255:18;;;10248:61;10326:18;;4172:93:10::1;9995:355:11::0;4172:93:10::1;4300:441;::::0;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;;::::1;::::0;;;-1:-1:-1;;;;;4300:441:10;::::1;::::0;;;;;;;;;;;;-1:-1:-1;4300:441:10;;;;;;;;;;;;1626:22:::1;4300:441:::0;;;;1525:22:::1;4300:441:::0;;;;4697:4:::1;4300:441:::0;;;;;;;;;;4276:21;;;:12:::1;:21:::0;;;;;;;:465;;:21;;:465:::1;::::0;:21;:465:::1;:::i;:::-;-1:-1:-1::0;4276:465:10::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;:::i;:::-;-1:-1:-1::0;4276:465:10::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;;4276:465:10;;::::1;-1:-1:-1::0;;;;;4276:465:10;;::::1;;::::0;;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;;::::1;::::0;;::::1;::::0;-1:-1:-1;;4276:465:10;;;;::::1;;-1:-1:-1::0;;4276:465:10;;;;;;::::1;;::::0;;::::1;::::0;;;::::1;::::0;;;4752:34;;-1:-1:-1;4752:34:10;::::1;::::0;;-1:-1:-1;4752:34:10;;;;;;;::::1;::::0;;;;::::1;::::0;;::::1;;::::0;;4819:20:::1;::::0;:33:::1;::::0;4842:10;;4819:33:::1;:::i;:::-;4796:20;:56:::0;4868:60:::1;::::0;-1:-1:-1;;;;;4868:60:10;::::1;::::0;::::1;::::0;::::1;::::0;4894:10;;4906:9;;4917:10;;4868:60:::1;:::i;:::-;;;;;;;;3822:1113;3642:1293:::0;;;;:::o;12138:132::-;12186:7;12241:21;12256:6;1393:19;12241:21;:::i;:::-;12212:16;;:25;;12231:6;12212:25;:::i;:::-;:51;;;;:::i;:::-;12205:58;;12138:132;:::o;8754:366::-;1531:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;2832:25:10;;::::1;2876:1;2832:25:::0;;;:12:::1;:25;::::0;;;;:32:::1;;::::0;8909:12;;2832:32:::1;2824:76;;;::::0;-1:-1:-1;;;2824:76:10;;13220:2:11;2824:76:10::1;::::0;::::1;13202:21:11::0;13259:2;13239:18;;;13232:30;-1:-1:-1;;;13278:18:11;;;13271:47;13335:18;;2824:76:10::1;13018:341:11::0;2824:76:10::1;-1:-1:-1::0;;;;;2918:25:10;::::1;;::::0;;;:12:::1;:25;::::0;;;;:34:::1;;::::0;::::1;;2910:72;;;::::0;-1:-1:-1;;;2910:72:10;;13566:2:11;2910:72:10::1;::::0;::::1;13548:21:11::0;13605:2;13585:18;;;13578:30;-1:-1:-1;;;13624:18:11;;;13617:55;13689:18;;2910:72:10::1;13364:349:11::0;2910:72:10::1;-1:-1:-1::0;;;;;8933:26:10;::::2;;::::0;;;:12:::2;:26;::::0;;;;;;;;:35:::2;;:47:::0;;8990;::::2;;8933;8990::::0;::::2;-1:-1:-1::0;;8933:47:10;::::2;;8990::::0;;;-1:-1:-1;;8990:47:10;;;;;;;::::2;::::0;;;9053:60;;13880:41:11;;;13937:18;;;13930:50;9053:60:10::2;::::0;13853:18:11;9053:60:10::2;;;;;;;1554:1:0::1;8754:366:10::0;;;:::o;1921:37::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1921:37:10;;-1:-1:-1;1921:37:10;:::o;10566:123::-;10627:16;10662:20;10655:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;10655:27:10;;;;;;;;;;;;;;;;;;;;;;10566:123;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;9684:707:10:-;-1:-1:-1;;;;;10040:26:10;;;9831:14;10040:26;;;:12;:26;;;;;10166:18;;;;10198:27;;;;10239:25;;;;10278:28;;;;10320:20;;;;10076:308;;9766:23;;;;9831:14;;;;;;;;;;;10040:26;;;;10132:20;;;;10166:18;;;10320:20;;;;;10166:18;10354:20;;;;;10040:26;;10076:308;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9684:707;;;;;;;;;:::o;6394:2057::-;-1:-1:-1;;;;;6516:26:10;;;6463:7;6516:26;;;:12;:26;;;;;6565:18;;;;6463:7;;6516:26;;6565:18;:32;;:57;;-1:-1:-1;6602:20:10;;;;;;6601:21;6565:57;:81;;;-1:-1:-1;6626:20:10;;;;;;;;;6565:81;6561:120;;;-1:-1:-1;6669:1:10;;6394:2057;-1:-1:-1;;6394:2057:10:o;6561:120::-;6695:11;:28;;;6727:1;6695:33;6691:117;;-1:-1:-1;6751:1:10;;6394:2057;-1:-1:-1;;6394:2057:10:o;6691:117::-;6818:19;6858:11;:28;;;6840:15;:46;;;;:::i;:::-;6818:68;;7007:11;:25;;;6993:11;:39;6989:78;;;-1:-1:-1;7055:1:10;;6394:2057;-1:-1:-1;;;6394:2057:10:o;6989:78::-;7181:19;7238:11;:27;;;7223:11;:42;7219:936;;-1:-1:-1;7387:27:10;;;;7219:936;;;7513:23;7553:11;:25;;;7539:11;:39;;;;:::i;:::-;7513:65;;7592:28;7653:11;:25;;;7623:11;:27;;;:55;;;;:::i;:::-;7592:86;;7819:19;7890:3;1731:2;7841:11;:27;;;:46;;;;:::i;:::-;:52;;;;:::i;:::-;7819:74;;7907:23;7963:11;7933;:27;;;:41;;;;:::i;:::-;7907:67;-1:-1:-1;7988:25:10;8052:20;8016:33;8034:15;7907:67;8016:33;:::i;:::-;:56;;;;:::i;:::-;7988:84;-1:-1:-1;8113:31:10;7988:84;8113:11;:31;:::i;:::-;8099:45;;7431:724;;;;;7219:936;8320:11;:25;;;8306:11;:39;8302:116;;;8382:25;;;;8368:39;;:11;:39;:::i;:::-;8361:46;6394:2057;-1:-1:-1;;;;;6394:2057:10:o;8302:116::-;-1:-1:-1;8443:1:10;;6394:2057;-1:-1:-1;;;;6394:2057:10:o;1962:93:2:-;2009:13;2041:7;2034:14;;;;;:::i;11174:121:10:-;11227:7;11268:20;;1393:19;11253:35;;;;:::i;5036:515::-;1531:13:0;:11;:13::i;:::-;5097:20:10::1;:27:::0;5089:65:::1;;;::::0;-1:-1:-1;;;5089:65:10;;14326:2:11;5089:65:10::1;::::0;::::1;14308:21:11::0;14365:2;14345:18;;;14338:30;-1:-1:-1;;;14384:18:11;;;14377:51;14445:18;;5089:65:10::1;14124:345:11::0;5089:65:10::1;5193:15;5173:17;5227:277;5248:20;:27:::0;5244:31;::::1;5227:277;;;5296:23;5322:20;5343:1;5322:23;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;;::::1;::::0;-1:-1:-1;;;;;5322:23:10::1;5363:29:::0;;;:12:::1;:29:::0;;;;;;;:38:::1;;::::0;5322:23;;-1:-1:-1;5363:38:10::1;;5359:135;;;-1:-1:-1::0;;;;;5421:29:10;::::1;;::::0;;;:12:::1;:29;::::0;;;;:46:::1;;:58:::0;;;5359:135:::1;-1:-1:-1::0;5277:3:10;::::1;::::0;::::1;:::i;:::-;;;;5227:277;;;-1:-1:-1::0;5519:25:10::1;::::0;160::11;;;5519::10::1;::::0;148:2:11;133:18;5519:25:10::1;;;;;;;5079:472;5036:515::o:0;11738:189::-;1531:13:0;:11;:13::i;:::-;11846:1:10::1;11830:13;:17;11822:56;;;::::0;-1:-1:-1;;;11822:56:10;;14948:2:11;11822:56:10::1;::::0;::::1;14930:21:11::0;14987:2;14967:18;;;14960:30;15026:28;15006:18;;;14999:56;15072:18;;11822:56:10::1;14746:350:11::0;11822:56:10::1;11888:16;:32:::0;11738:189::o;5667:438::-;2500:21:7;:19;:21::i;:::-;2514:10:10::1;2544:1;2501:24:::0;;;:12:::1;:24;::::0;;;;:31:::1;;::::0;-1:-1:-1;;;;;2501:31:10::1;2493:75;;;::::0;-1:-1:-1;;;2493:75:10;;13220:2:11;2493:75:10::1;::::0;::::1;13202:21:11::0;13259:2;13239:18;;;13232:30;-1:-1:-1;;;13278:18:11;;;13271:47;13335:18;;2493:75:10::1;13018:341:11::0;2493:75:10::1;2599:10;2586:24;::::0;;;:12:::1;:24;::::0;;;;:33:::1;;::::0;::::1;;2578:71;;;::::0;-1:-1:-1;;;2578:71:10;;13566:2:11;2578:71:10::1;::::0;::::1;13548:21:11::0;13605:2;13585:18;;;13578:30;-1:-1:-1;;;13624:18:11;;;13617:55;13689:18;;2578:71:10::1;13364:349:11::0;2578:71:10::1;2681:10;2668:24;::::0;;;:12:::1;:24;::::0;;;;:33:::1;;::::0;::::1;::::0;::::1;;;2667:34;2659:79;;;::::0;-1:-1:-1;;;2659:79:10;;15303:2:11;2659:79:10::1;::::0;::::1;15285:21:11::0;;;15322:18;;;15315:30;15381:34;15361:18;;;15354:62;15433:18;;2659:79:10::1;15101:356:11::0;2659:79:10::1;5744:23:::2;5770:28;5787:10;5770:16;:28::i;:::-;5744:54;;5834:1;5816:15;:19;5808:61;;;::::0;-1:-1:-1;;;5808:61:10;;15664:2:11;5808:61:10::2;::::0;::::2;15646:21:11::0;15703:2;15683:18;;;15676:30;15742:31;15722:18;;;15715:59;15791:18;;5808:61:10::2;15462:353:11::0;5808:61:10::2;5934:10;5921:24;::::0;;;:12:::2;:24;::::0;;;;:38:::2;;::::0;:56:::2;::::0;5962:15;;5921:56:::2;:::i;:::-;5893:10;5880:24;::::0;;;:12:::2;:24;::::0;;;;:38:::2;;:97:::0;;;;5987:53:::2;::::0;6005:4:::2;::::0;6024:15;5987:9:::2;:53::i;:::-;6056:42;::::0;160:25:11;;;6070:10:10::2;::::0;6056:42:::2;::::0;148:2:11;133:18;6056:42:10::2;;;;;;;5734:371;2542:20:7::0;1857:1;3068:7;:21;2888:208;2543:215:0;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;5591:51:11::0;5564:18;;2672:31:0::1;5445:203:11::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;8630:128:2:-;8714:37;8723:5;8730:7;8739:5;8746:4;8714:8;:37::i;:::-;8630:128;;;:::o;1796:162:0:-;1710:6;;-1:-1:-1;;;;;1710:6:0;735:10:5;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:5;1901:40:0;;;5591:51:11;5564:18;;1901:40:0;5445:203:11;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;2575:307:7:-;1899:1;2702:7;;:18;2698:86;;2743:30;;-1:-1:-1;;;2743:30:7;;;;;;;;;;;2698:86;1899:1;2858:7;:17;2575:307::o;5297:300:2:-;-1:-1:-1;;;;;5380:18:2;;5376:86;;5421:30;;-1:-1:-1;;;5421:30:2;;5448:1;5421:30;;;5591:51:11;5564:18;;5421:30:2;5445:203:11;5376:86:2;-1:-1:-1;;;;;5475:16:2;;5471:86;;5514:32;;-1:-1:-1;;;5514:32:2;;5543:1;5514:32;;;5591:51:11;5564:18;;5514:32:2;5445:203:11;5471:86:2;5566:24;5574:4;5580:2;5584:5;5566:7;:24::i;9605:432::-;-1:-1:-1;;;;;9717:19:2;;9713:89;;9759:32;;-1:-1:-1;;;9759:32:2;;9788:1;9759:32;;;5591:51:11;5564:18;;9759:32:2;5445:203:11;9713:89:2;-1:-1:-1;;;;;9815:21:2;;9811:90;;9859:31;;-1:-1:-1;;;9859:31:2;;9887:1;9859:31;;;5591:51:11;5564:18;;9859:31:2;5445:203:11;9811:90:2;-1:-1:-1;;;;;9910:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;9955:76;;;;10005:7;-1:-1:-1;;;;;9989:31:2;9998:5;-1:-1:-1;;;;;9989:31:2;;10014:5;9989:31;;;;160:25:11;;148:2;133:18;;14:177;9989:31:2;;;;;;;;9955:76;9605:432;;;;:::o;5912:1107::-;-1:-1:-1;;;;;6001:18:2;;5997:540;;6153:5;6137:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;5997:540:2;;-1:-1:-1;5997:540:2;;-1:-1:-1;;;;;6211:15:2;;6189:19;6211:15;;;;;;;;;;;6244:19;;;6240:115;;;6290:50;;-1:-1:-1;;;6290:50:2;;-1:-1:-1;;;;;16040:32:11;;6290:50:2;;;16022:51:11;16089:18;;;16082:34;;;16132:18;;;16125:34;;;15995:18;;6290:50:2;15820:345:11;6240:115:2;-1:-1:-1;;;;;6475:15:2;;:9;:15;;;;;;;;;;6493:19;;;;6475:37;;5997:540;-1:-1:-1;;;;;6551:16:2;;6547:425;;6714:12;:21;;;;;;;6547:425;;;-1:-1:-1;;;;;6925:13:2;;:9;:13;;;;;;;;;;:22;;;;;;6547:425;7002:2;-1:-1:-1;;;;;6987:25:2;6996:4;-1:-1:-1;;;;;6987:25:2;;7006:5;6987:25;;;;160::11;;148:2;133:18;;14:177;6987:25:2;;;;;;;;5912:1107;;;:::o;196:423:11:-;238:3;276:5;270:12;303:6;298:3;291:19;328:1;338:162;352:6;349:1;346:13;338:162;;;414:4;470:13;;;466:22;;460:29;442:11;;;438:20;;431:59;367:12;338:162;;;342:3;545:1;538:4;529:6;524:3;520:16;516:27;509:38;608:4;601:2;597:7;592:2;584:6;580:15;576:29;571:3;567:39;563:50;556:57;;;196:423;;;;:::o;624:220::-;773:2;762:9;755:21;736:4;793:45;834:2;823:9;819:18;811:6;793:45;:::i;:::-;785:53;624:220;-1:-1:-1;;;624:220:11:o;849:173::-;917:20;;-1:-1:-1;;;;;966:31:11;;956:42;;946:70;;1012:1;1009;1002:12;946:70;849:173;;;:::o;1027:254::-;1095:6;1103;1156:2;1144:9;1135:7;1131:23;1127:32;1124:52;;;1172:1;1169;1162:12;1124:52;1195:29;1214:9;1195:29;:::i;:::-;1185:39;1271:2;1256:18;;;;1243:32;;-1:-1:-1;;;1027:254:11:o;1478:186::-;1537:6;1590:2;1578:9;1569:7;1565:23;1561:32;1558:52;;;1606:1;1603;1596:12;1558:52;1629:29;1648:9;1629:29;:::i;1669:1025::-;2041:4;2070:3;2100:2;2089:9;2082:21;2126:45;2167:2;2156:9;2152:18;2144:6;2126:45;:::i;:::-;2112:59;;2219:9;2211:6;2207:22;2202:2;2191:9;2187:18;2180:50;2247:33;2273:6;2265;2247:33;:::i;:::-;-1:-1:-1;;;;;2316:32:11;;;;2311:2;2296:18;;2289:60;-1:-1:-1;;2380:2:11;2365:18;;2358:34;;;;2423:3;2408:19;;2401:35;;;;2336:3;2452:19;;2445:35;;;;2511:3;2496:19;;2489:35;;;;2555:3;2540:19;;2533:35;2612:14;2605:22;2599:3;2584:19;;2577:51;2672:14;2665:22;2659:3;2644:19;;;2637:51;2239:41;1669:1025;-1:-1:-1;;1669:1025:11:o;2699:328::-;2776:6;2784;2792;2845:2;2833:9;2824:7;2820:23;2816:32;2813:52;;;2861:1;2858;2851:12;2813:52;2884:29;2903:9;2884:29;:::i;:::-;2874:39;;2932:38;2966:2;2955:9;2951:18;2932:38;:::i;:::-;2922:48;;3017:2;3006:9;3002:18;2989:32;2979:42;;2699:328;;;;;:::o;3221:127::-;3282:10;3277:3;3273:20;3270:1;3263:31;3313:4;3310:1;3303:15;3337:4;3334:1;3327:15;3353:719;3396:5;3449:3;3442:4;3434:6;3430:17;3426:27;3416:55;;3467:1;3464;3457:12;3416:55;3503:6;3490:20;3529:18;3566:2;3562;3559:10;3556:36;;;3572:18;;:::i;:::-;3647:2;3641:9;3615:2;3701:13;;-1:-1:-1;;3697:22:11;;;3721:2;3693:31;3689:40;3677:53;;;3745:18;;;3765:22;;;3742:46;3739:72;;;3791:18;;:::i;:::-;3831:10;3827:2;3820:22;3866:2;3858:6;3851:18;3912:3;3905:4;3900:2;3892:6;3888:15;3884:26;3881:35;3878:55;;;3929:1;3926;3919:12;3878:55;3993:2;3986:4;3978:6;3974:17;3967:4;3959:6;3955:17;3942:54;4040:1;4033:4;4028:2;4020:6;4016:15;4012:26;4005:37;4060:6;4051:15;;;;;;3353:719;;;;:::o;4077:686::-;4183:6;4191;4199;4207;4260:3;4248:9;4239:7;4235:23;4231:33;4228:53;;;4277:1;4274;4267:12;4228:53;4317:9;4304:23;4346:18;4387:2;4379:6;4376:14;4373:34;;;4403:1;4400;4393:12;4373:34;4426:50;4468:7;4459:6;4448:9;4444:22;4426:50;:::i;:::-;4416:60;;4529:2;4518:9;4514:18;4501:32;4485:48;;4558:2;4548:8;4545:16;4542:36;;;4574:1;4571;4564:12;4542:36;;4597:52;4641:7;4630:8;4619:9;4615:24;4597:52;:::i;:::-;4587:62;;;4668:38;4702:2;4691:9;4687:18;4668:38;:::i;:::-;4077:686;;;;-1:-1:-1;4658:48:11;;4753:2;4738:18;4725:32;;-1:-1:-1;;4077:686:11:o;4768:160::-;4833:20;;4889:13;;4882:21;4872:32;;4862:60;;4918:1;4915;4908:12;4933:322;5004:6;5012;5020;5073:2;5061:9;5052:7;5048:23;5044:32;5041:52;;;5089:1;5086;5079:12;5041:52;5112:29;5131:9;5112:29;:::i;:::-;5102:39;;5160:35;5191:2;5180:9;5176:18;5160:35;:::i;:::-;5150:45;;5214:35;5245:2;5234:9;5230:18;5214:35;:::i;:::-;5204:45;;4933:322;;;;;:::o;5260:180::-;5319:6;5372:2;5360:9;5351:7;5347:23;5343:32;5340:52;;;5388:1;5385;5378:12;5340:52;-1:-1:-1;5411:23:11;;5260:180;-1:-1:-1;5260:180:11:o;5653:658::-;5824:2;5876:21;;;5946:13;;5849:18;;;5968:22;;;5795:4;;5824:2;6047:15;;;;6021:2;6006:18;;;5795:4;6090:195;6104:6;6101:1;6098:13;6090:195;;;6169:13;;-1:-1:-1;;;;;6165:39:11;6153:52;;6260:15;;;;6225:12;;;;6201:1;6119:9;6090:195;;;-1:-1:-1;6302:3:11;;5653:658;-1:-1:-1;;;;;;5653:658:11:o;6316:881::-;6632:4;6661:3;6691:2;6680:9;6673:21;6717:45;6758:2;6747:9;6743:18;6735:6;6717:45;:::i;:::-;6703:59;;6810:9;6802:6;6798:22;6793:2;6782:9;6778:18;6771:50;6838:33;6864:6;6856;6838:33;:::i;:::-;-1:-1:-1;;;;;6907:32:11;;;;6902:2;6887:18;;6880:60;-1:-1:-1;;6971:2:11;6956:18;;6949:34;;;;7014:3;6999:19;;6992:35;;;;6927:3;7043:19;;7036:35;;;;7115:14;7108:22;7102:3;7087:19;;7080:51;7175:14;7168:22;7162:3;7147:19;;;7140:51;6830:41;6316:881;-1:-1:-1;;6316:881:11:o;7202:260::-;7270:6;7278;7331:2;7319:9;7310:7;7306:23;7302:32;7299:52;;;7347:1;7344;7337:12;7299:52;7370:29;7389:9;7370:29;:::i;:::-;7360:39;;7418:38;7452:2;7441:9;7437:18;7418:38;:::i;:::-;7408:48;;7202:260;;;;;:::o;7467:380::-;7546:1;7542:12;;;;7589;;;7610:61;;7664:4;7656:6;7652:17;7642:27;;7610:61;7717:2;7709:6;7706:14;7686:18;7683:38;7680:161;;7763:10;7758:3;7754:20;7751:1;7744:31;7798:4;7795:1;7788:15;7826:4;7823:1;7816:15;7680:161;;7467:380;;;:::o;9338:127::-;9399:10;9394:3;9390:20;9387:1;9380:31;9430:4;9427:1;9420:15;9454:4;9451:1;9444:15;9470:168;9543:9;;;9574;;9591:15;;;9585:22;;9571:37;9561:71;;9612:18;;:::i;9643:217::-;9683:1;9709;9699:132;;9753:10;9748:3;9744:20;9741:1;9734:31;9788:4;9785:1;9778:15;9816:4;9813:1;9806:15;9699:132;-1:-1:-1;9845:9:11;;9643:217::o;9865:125::-;9930:9;;;9951:10;;;9948:36;;;9964:18;;:::i;10481:545::-;10583:2;10578:3;10575:11;10572:448;;;10619:1;10644:5;10640:2;10633:17;10689:4;10685:2;10675:19;10759:2;10747:10;10743:19;10740:1;10736:27;10730:4;10726:38;10795:4;10783:10;10780:20;10777:47;;;-1:-1:-1;10818:4:11;10777:47;10873:2;10868:3;10864:12;10861:1;10857:20;10851:4;10847:31;10837:41;;10928:82;10946:2;10939:5;10936:13;10928:82;;;10991:17;;;10972:1;10961:13;10928:82;;;10932:3;;;10481:545;;;:::o;11202:1352::-;11328:3;11322:10;11355:18;11347:6;11344:30;11341:56;;;11377:18;;:::i;:::-;11406:97;11496:6;11456:38;11488:4;11482:11;11456:38;:::i;:::-;11450:4;11406:97;:::i;:::-;11558:4;;11622:2;11611:14;;11639:1;11634:663;;;;12341:1;12358:6;12355:89;;;-1:-1:-1;12410:19:11;;;12404:26;12355:89;-1:-1:-1;;11159:1:11;11155:11;;;11151:24;11147:29;11137:40;11183:1;11179:11;;;11134:57;12457:81;;11604:944;;11634:663;10428:1;10421:14;;;10465:4;10452:18;;-1:-1:-1;;11670:20:11;;;11788:236;11802:7;11799:1;11796:14;11788:236;;;11891:19;;;11885:26;11870:42;;11983:27;;;;11951:1;11939:14;;;;11818:19;;11788:236;;;11792:3;12052:6;12043:7;12040:19;12037:201;;;12113:19;;;12107:26;-1:-1:-1;;12196:1:11;12192:14;;;12208:3;12188:24;12184:37;12180:42;12165:58;12150:74;;12037:201;-1:-1:-1;;;;;12284:1:11;12268:14;;;12264:22;12251:36;;-1:-1:-1;11202:1352:11:o;12559:454::-;12784:2;12773:9;12766:21;12747:4;12810:45;12851:2;12840:9;12836:18;12828:6;12810:45;:::i;:::-;12903:9;12895:6;12891:22;12886:2;12875:9;12871:18;12864:50;12931:33;12957:6;12949;12931:33;:::i;:::-;12923:41;;;13000:6;12995:2;12984:9;12980:18;12973:34;12559:454;;;;;;:::o;13991:128::-;14058:9;;;14079:11;;;14076:37;;;14093:18;;:::i;14474:127::-;14535:10;14530:3;14526:20;14523:1;14516:31;14566:4;14563:1;14556:15;14590:4;14587:1;14580:15;14606:135;14645:3;14666:17;;;14663:43;;14686:18;;:::i;:::-;-1:-1:-1;14733:1:11;14722:13;;14606:135::o"},"methodIdentifiers":{"CLIFF_PERCENTAGE()":"0369d64e","CLIFF_PERIOD()":"8cad856f","TOTAL_SUPPLY()":"902d55a5","VESTING_PERIOD()":"0197d972","addParticipant(string,string,address,uint256)":"36ab5d23","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","claimVestedTokens()":"e74f3fbb","decimals()":"313ce567","getAllParticipantAddresses()":"68811431","getParticipantCount()":"ad605729","getParticipantInfo(address)":"71bdce55","getProjectValuation()":"bbe8b382","getRemainingTokens()":"af35ae27","getTokenPrice()":"4b94f50e","getVestedBalance(address)":"7f58b9d3","name()":"06fdde03","owner()":"8da5cb5b","participantAddresses(uint256)":"54ffbddb","participants(address)":"09e69ede","projectValuation()":"454f7edd","renounceOwnership()":"715018a6","setParticipantStatus(address,bool,bool)":"54ba2daf","startVesting()":"deb36e32","symbol()":"95d89b41","totalAllocatedTokens()":"0c195d99","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b","updateProjectValuation(uint256)":"e3b591ea"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"firstName\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"lastName\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"allocation\",\"type\":\"uint256\"}],\"name\":\"ParticipantAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"participant\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isLeaver\",\"type\":\"bool\"}],\"name\":\"ParticipantStatusChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"participant\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"}],\"name\":\"VestingStarted\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLIFF_PERCENTAGE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CLIFF_PERIOD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TOTAL_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VESTING_PERIOD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_firstName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_lastName\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_wallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_allocationPercentage\",\"type\":\"uint256\"}],\"name\":\"addParticipant\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimVestedTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllParticipantAddresses\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getParticipantCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_participant\",\"type\":\"address\"}],\"name\":\"getParticipantInfo\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"firstName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"lastName\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalAllocation\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claimedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vestingStartTime\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isLeaver\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProjectValuation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRemainingTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokenPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_participant\",\"type\":\"address\"}],\"name\":\"getVestedBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"participantAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"participants\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"firstName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"lastName\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalAllocation\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claimedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vestingStartTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cliffDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vestingDuration\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isLeaver\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"projectValuation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_participant\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isActive\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_isLeaver\",\"type\":\"bool\"}],\"name\":\"setParticipantStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startVesting\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAllocatedTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newValuation\",\"type\":\"uint256\"}],\"name\":\"updateProjectValuation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"DEFIMON Team\",\"details\":\"ERC-20 \\u0442\\u043e\\u043a\\u0435\\u043d \\u0441 \\u043c\\u0435\\u0445\\u0430\\u043d\\u0438\\u0437\\u043c\\u043e\\u043c \\u0432\\u0435\\u0441\\u0442\\u0438\\u043d\\u0433\\u0430 \\u0434\\u043b\\u044f \\u0440\\u0430\\u0441\\u043f\\u0440\\u0435\\u0434\\u0435\\u043b\\u0435\\u043d\\u0438\\u044f \\u0434\\u043e\\u043b\\u0435\\u0439 \\u043c\\u0435\\u0436\\u0434\\u0443 \\u043e\\u0441\\u043d\\u043e\\u0432\\u0430\\u0442\\u0435\\u043b\\u044f\\u043c\\u0438\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"addParticipant(string,string,address,uint256)\":{\"details\":\"\\u0414\\u043e\\u0431\\u0430\\u0432\\u043b\\u0435\\u043d\\u0438\\u0435 \\u0443\\u0447\\u0430\\u0441\\u0442\\u043d\\u0438\\u043a\\u0430 \\u0432 \\u0441\\u0438\\u0441\\u0442\\u0435\\u043c\\u0443\",\"params\":{\"_allocationPercentage\":\"\\u041f\\u0440\\u043e\\u0446\\u0435\\u043d\\u0442 \\u0434\\u043e\\u043b\\u0438 (\\u043d\\u0430\\u043f\\u0440\\u0438\\u043c\\u0435\\u0440, 40 \\u0434\\u043b\\u044f 40%)\",\"_firstName\":\"\\u0418\\u043c\\u044f \\u0443\\u0447\\u0430\\u0441\\u0442\\u043d\\u0438\\u043a\\u0430\",\"_lastName\":\"\\u0424\\u0430\\u043c\\u0438\\u043b\\u0438\\u044f \\u0443\\u0447\\u0430\\u0441\\u0442\\u043d\\u0438\\u043a\\u0430\",\"_wallet\":\"\\u0410\\u0434\\u0440\\u0435\\u0441 \\u043a\\u043e\\u0448\\u0435\\u043b\\u044c\\u043a\\u0430 \\u0443\\u0447\\u0430\\u0441\\u0442\\u043d\\u0438\\u043a\\u0430\"}},\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"claimVestedTokens()\":{\"details\":\"\\u041f\\u043e\\u043b\\u0443\\u0447\\u0435\\u043d\\u0438\\u0435 \\u0440\\u0430\\u0437\\u043c\\u043e\\u0440\\u043e\\u0436\\u0435\\u043d\\u043d\\u044b\\u0445 \\u0442\\u043e\\u043a\\u0435\\u043d\\u043e\\u0432 \\u0443\\u0447\\u0430\\u0441\\u0442\\u043d\\u0438\\u043a\\u043e\\u043c\"},\"constructor\":{\"details\":\"\\u041a\\u043e\\u043d\\u0441\\u0442\\u0440\\u0443\\u043a\\u0442\\u043e\\u0440 \\u043a\\u043e\\u043d\\u0442\\u0440\\u0430\\u043a\\u0442\\u0430\",\"params\":{\"_owner\":\"\\u0410\\u0434\\u0440\\u0435\\u0441 \\u0432\\u043b\\u0430\\u0434\\u0435\\u043b\\u044c\\u0446\\u0430 \\u043a\\u043e\\u043d\\u0442\\u0440\\u0430\\u043a\\u0442\\u0430\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"getAllParticipantAddresses()\":{\"details\":\"\\u041f\\u043e\\u043b\\u0443\\u0447\\u0435\\u043d\\u0438\\u0435 \\u0441\\u043f\\u0438\\u0441\\u043a\\u0430 \\u0432\\u0441\\u0435\\u0445 \\u0430\\u0434\\u0440\\u0435\\u0441\\u043e\\u0432 \\u0443\\u0447\\u0430\\u0441\\u0442\\u043d\\u0438\\u043a\\u043e\\u0432\",\"returns\":{\"_0\":\"\\u041c\\u0430\\u0441\\u0441\\u0438\\u0432 \\u0430\\u0434\\u0440\\u0435\\u0441\\u043e\\u0432 \\u0443\\u0447\\u0430\\u0441\\u0442\\u043d\\u0438\\u043a\\u043e\\u0432\"}},\"getParticipantCount()\":{\"details\":\"\\u041f\\u043e\\u043b\\u0443\\u0447\\u0435\\u043d\\u0438\\u0435 \\u043e\\u0431\\u0449\\u0435\\u0433\\u043e \\u043a\\u043e\\u043b\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u0430 \\u0443\\u0447\\u0430\\u0441\\u0442\\u043d\\u0438\\u043a\\u043e\\u0432\",\"returns\":{\"_0\":\"\\u041a\\u043e\\u043b\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043e \\u0443\\u0447\\u0430\\u0441\\u0442\\u043d\\u0438\\u043a\\u043e\\u0432\"}},\"getParticipantInfo(address)\":{\"details\":\"\\u041f\\u043e\\u043b\\u0443\\u0447\\u0435\\u043d\\u0438\\u0435 \\u0438\\u043d\\u0444\\u043e\\u0440\\u043c\\u0430\\u0446\\u0438\\u0438 \\u043e\\u0431 \\u0443\\u0447\\u0430\\u0441\\u0442\\u043d\\u0438\\u043a\\u0435\",\"params\":{\"_participant\":\"\\u0410\\u0434\\u0440\\u0435\\u0441 \\u0443\\u0447\\u0430\\u0441\\u0442\\u043d\\u0438\\u043a\\u0430\"},\"returns\":{\"claimedAmount\":\"\\u041f\\u043e\\u043b\\u0443\\u0447\\u0435\\u043d\\u043d\\u044b\\u0435 \\u0442\\u043e\\u043a\\u0435\\u043d\\u044b\",\"firstName\":\"\\u0418\\u043c\\u044f\",\"isActive\":\"\\u0410\\u043a\\u0442\\u0438\\u0432\\u0435\\u043d \\u043b\\u0438\",\"isLeaver\":\"\\u041f\\u043e\\u043a\\u0438\\u043d\\u0443\\u043b \\u043b\\u0438 \\u043f\\u0440\\u043e\\u0435\\u043a\\u0442\",\"lastName\":\"\\u0424\\u0430\\u043c\\u0438\\u043b\\u0438\\u044f\",\"totalAllocation\":\"\\u041e\\u0431\\u0449\\u0430\\u044f \\u0434\\u043e\\u043b\\u044f\",\"vestingStartTime\":\"\\u0412\\u0440\\u0435\\u043c\\u044f \\u043d\\u0430\\u0447\\u0430\\u043b\\u0430 \\u0432\\u0435\\u0441\\u0442\\u0438\\u043d\\u0433\\u0430\",\"wallet\":\"\\u0410\\u0434\\u0440\\u0435\\u0441 \\u043a\\u043e\\u0448\\u0435\\u043b\\u044c\\u043a\\u0430\"}},\"getProjectValuation()\":{\"details\":\"\\u041f\\u043e\\u043b\\u0443\\u0447\\u0435\\u043d\\u0438\\u0435 \\u0442\\u0435\\u043a\\u0443\\u0449\\u0435\\u0439 \\u043e\\u0446\\u0435\\u043d\\u043a\\u0438 \\u043f\\u0440\\u043e\\u0435\\u043a\\u0442\\u0430\",\"returns\":{\"_0\":\"\\u041e\\u0446\\u0435\\u043d\\u043a\\u0430 \\u0432 \\u0434\\u043e\\u043b\\u043b\\u0430\\u0440\\u0430\\u0445\"}},\"getRemainingTokens()\":{\"details\":\"\\u041f\\u043e\\u043b\\u0443\\u0447\\u0435\\u043d\\u0438\\u0435 \\u043e\\u0441\\u0442\\u0430\\u0432\\u0448\\u0438\\u0445\\u0441\\u044f \\u043d\\u0435\\u0440\\u0430\\u0441\\u043f\\u0440\\u0435\\u0434\\u0435\\u043b\\u0435\\u043d\\u043d\\u044b\\u0445 \\u0442\\u043e\\u043a\\u0435\\u043d\\u043e\\u0432\",\"returns\":{\"_0\":\"\\u041a\\u043e\\u043b\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043e \\u043d\\u0435\\u0440\\u0430\\u0441\\u043f\\u0440\\u0435\\u0434\\u0435\\u043b\\u0435\\u043d\\u043d\\u044b\\u0445 \\u0442\\u043e\\u043a\\u0435\\u043d\\u043e\\u0432\"}},\"getTokenPrice()\":{\"details\":\"\\u041f\\u043e\\u043b\\u0443\\u0447\\u0435\\u043d\\u0438\\u0435 \\u0441\\u0442\\u043e\\u0438\\u043c\\u043e\\u0441\\u0442\\u0438 \\u043e\\u0434\\u043d\\u043e\\u0433\\u043e \\u0442\\u043e\\u043a\\u0435\\u043d\\u0430\",\"returns\":{\"_0\":\"\\u0421\\u0442\\u043e\\u0438\\u043c\\u043e\\u0441\\u0442\\u044c \\u0442\\u043e\\u043a\\u0435\\u043d\\u0430 \\u0432 \\u0434\\u043e\\u043b\\u043b\\u0430\\u0440\\u0430\\u0445 (\\u0441 18 \\u0434\\u0435\\u0441\\u044f\\u0442\\u0438\\u0447\\u043d\\u044b\\u043c\\u0438 \\u0437\\u043d\\u0430\\u043a\\u0430\\u043c\\u0438)\"}},\"getVestedBalance(address)\":{\"details\":\"\\u041f\\u043e\\u043b\\u0443\\u0447\\u0435\\u043d\\u0438\\u0435 \\u0431\\u0430\\u043b\\u0430\\u043d\\u0441\\u0430 \\u0440\\u0430\\u0437\\u043c\\u043e\\u0440\\u043e\\u0436\\u0435\\u043d\\u043d\\u044b\\u0445 \\u0442\\u043e\\u043a\\u0435\\u043d\\u043e\\u0432 \\u0434\\u043b\\u044f \\u0443\\u0447\\u0430\\u0441\\u0442\\u043d\\u0438\\u043a\\u0430\",\"params\":{\"_participant\":\"\\u0410\\u0434\\u0440\\u0435\\u0441 \\u0443\\u0447\\u0430\\u0441\\u0442\\u043d\\u0438\\u043a\\u0430\"},\"returns\":{\"_0\":\"\\u041a\\u043e\\u043b\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043e \\u0434\\u043e\\u0441\\u0442\\u0443\\u043f\\u043d\\u044b\\u0445 \\u0434\\u043b\\u044f \\u043f\\u043e\\u043b\\u0443\\u0447\\u0435\\u043d\\u0438\\u044f \\u0442\\u043e\\u043a\\u0435\\u043d\\u043e\\u0432\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setParticipantStatus(address,bool,bool)\":{\"details\":\"\\u0418\\u0437\\u043c\\u0435\\u043d\\u0435\\u043d\\u0438\\u0435 \\u0441\\u0442\\u0430\\u0442\\u0443\\u0441\\u0430 \\u0443\\u0447\\u0430\\u0441\\u0442\\u043d\\u0438\\u043a\\u0430 (\\u0442\\u043e\\u043b\\u044c\\u043a\\u043e \\u0434\\u043b\\u044f \\u0432\\u043b\\u0430\\u0434\\u0435\\u043b\\u044c\\u0446\\u0430)\",\"params\":{\"_isActive\":\"\\u0410\\u043a\\u0442\\u0438\\u0432\\u0435\\u043d \\u043b\\u0438 \\u0443\\u0447\\u0430\\u0441\\u0442\\u043d\\u0438\\u043a\",\"_isLeaver\":\"\\u041f\\u043e\\u043a\\u0438\\u043d\\u0443\\u043b \\u043b\\u0438 \\u043f\\u0440\\u043e\\u0435\\u043a\\u0442\",\"_participant\":\"\\u0410\\u0434\\u0440\\u0435\\u0441 \\u0443\\u0447\\u0430\\u0441\\u0442\\u043d\\u0438\\u043a\\u0430\"}},\"startVesting()\":{\"details\":\"\\u0417\\u0430\\u043f\\u0443\\u0441\\u043a \\u0432\\u0435\\u0441\\u0442\\u0438\\u043d\\u0433\\u0430 \\u0434\\u043b\\u044f \\u0432\\u0441\\u0435\\u0445 \\u0443\\u0447\\u0430\\u0441\\u0442\\u043d\\u0438\\u043a\\u043e\\u0432\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateProjectValuation(uint256)\":{\"details\":\"\\u041e\\u0431\\u043d\\u043e\\u0432\\u043b\\u0435\\u043d\\u0438\\u0435 \\u043e\\u0446\\u0435\\u043d\\u043a\\u0438 \\u043f\\u0440\\u043e\\u0435\\u043a\\u0442\\u0430 (\\u0442\\u043e\\u043b\\u044c\\u043a\\u043e \\u0434\\u043b\\u044f \\u0432\\u043b\\u0430\\u0434\\u0435\\u043b\\u044c\\u0446\\u0430)\",\"params\":{\"_newValuation\":\"\\u041d\\u043e\\u0432\\u0430\\u044f \\u043e\\u0446\\u0435\\u043d\\u043a\\u0430 \\u0432 \\u0434\\u043e\\u043b\\u043b\\u0430\\u0440\\u0430\\u0445\"}}},\"title\":\"DEFIMON Equity Token\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DEFIMONEquityToken.sol\":\"DEFIMONEquityToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"contracts/DEFIMONEquityToken.sol\":{\"keccak256\":\"0x0917cdd5e09cfb46c01c796bdde5c2de60de56106426d0894345f04781082f72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ab7cf2da0f5c3a23a6b0ea44827d0eae354e9c2ea999380c22f8275d4392677\",\"dweb:/ipfs/QmeoqMFM55TDAJj9UFzr8RoMNDHhsEnUKsA8kbfSC2h2BE\"]}},\"version\":1}"}}}}}